Gadgets information
============================================================
0x0000000000187230 : adc ah, ch ; int1 ; jmp qword ptr [rax]
0x000000000019c3c5 : adc al, 0 ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x000000000014653f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001465a9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019e0b0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x19e0f0 ; add byte ptr [rax], al ; clc ; ret
0x00000000001a7180 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000fc13e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a71c8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000004b515 : adc al, 0 ; call 0x777f4
0x000000000004b514 : adc al, 0 ; call 0x777f5
0x0000000000047065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000033295 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000012a3c5 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001ac24c : adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x0000000000150505 : adc al, 0x13 ; jmp rdx
0x000000000009ea05 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000019c94c : adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00000000001a1ec4 : adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001acc4c : adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00000000001965b0 : adc al, 0x20 ; jmp 0x1965b6
0x00000000000fc83a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000039fc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000019a558 : adc al, 0x29 ; cli ; jmp rsp
0x00000000000a9233 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000c17fb : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000001ae84c : adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00000000001aee4c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x000000000007ec4a : adc al, 0x41 ; pop rsp ; ret
0x00000000000a6970 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a77c3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009e5bb : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001afd4c : adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000197be0 : adc al, 0x52 ; call rsp
0x0000000000186a0c : adc al, 0x5e ; out dx, al ; jmp qword ptr [rsi]
0x00000000001b1e4c : adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000857aa : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000002ec97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000f6b36 : adc al, 0x89 ; ret 0xdaf7
0x0000000000072eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000fd580 : adc al, 0x8a ; sub al, 0 ; ret
0x000000000005bf54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e47 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000e06b4 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00000000001479d0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001460fe : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000150501 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008473a : adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000891e7 : adc al, 0xa ; jmp r10
0x000000000009eb73 : adc al, 0xa ; sub eax, edx ; ret
0x000000000005c14a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000d8f67 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x0000000000196a68 : adc al, 0xa8 ; in eax, dx ; call rsp
0x00000000000cd12d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000109f94 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001a6d4c : adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x0000000000103990 : adc al, 0xbf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000048031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x0000000000048035 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x0000000000035f44 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001a7a4c : adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x0000000000196c40 : adc al, 0xd8 ; in eax, dx ; jmp rsp
0x00000000001a8d4c : adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000000ba6a2 : adc al, 0xe ; jne 0xba69d ; ret
0x0000000000144211 : adc al, 0xe ; sub eax, edx ; ret
0x00000000001a944c : adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x0000000000002b87 : adc al, 0xe7 ; ret
0x000000000019c569 : adc al, 0xe9 ; call qword ptr [rdi]
0x00000000000c09a5 : adc al, 0xe9 ; ret 0xffef
0x00000000000c1a5c : adc al, 0xe9 ; ret 0xfff9
0x0000000000173271 : adc al, 0xea ; test rdx, rdx ; je 0x173281 ; call rdx
0x0000000000196de9 : adc al, 0xee ; jmp rsp
0x00000000000a7339 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001aa071 : adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001982d9 : adc al, 0xf5 ; call rsp
0x0000000000198709 : adc al, 0xf6 ; call rsp
0x0000000000194b1d : adc al, 0xfc ; call qword ptr [rax]
0x0000000000196cf8 : adc al, 0xfc ; in eax, dx ; call rsp
0x0000000000171c28 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000007d9bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x000000000012774c : adc al, 3 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x127760 ; ret
0x00000000000b938f : adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000009e006 : adc al, 7 ; cmp edx, esi ; je 0x9e007 ; ret
0x000000000009df32 : adc al, 7 ; test dl, dl ; jne 0x9df2f ; ret
0x000000000019b74c : adc al, 8 ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x0000000000044e0f : adc al, 9 ; ret 0x9f74
0x00000000001466e7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146751 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000057e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000222bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000063882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005bf50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000afa0d : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd8f30
0x00000000000b4eb5 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccde3d8
0x00000000001aa9ea : adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001ac165 : adc al, byte ptr [rcx] ; add al, bl ; fpatan ; call qword ptr [rsi]
0x00000000001ac1a5 : adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00000000001ac1bd : adc al, byte ptr [rcx] ; add al, dh ; fpatan ; jmp qword ptr [rcx]
0x00000000001ac235 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00000000001ac21d : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00000000000a1e64 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000f293e : adc al, ch ; insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000c89fd : adc al, ch ; popfq ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000d0dc7 : adc al, ch ; ret
0x00000000001b4c80 : adc bh, 0xf6 ; call qword ptr [rdi]
0x00000000001946b0 : adc bh, 0xfb ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00000000001b9f21 : adc bh, al ; jmp qword ptr [rbx]
0x00000000001ae850 : adc bh, bh ; hlt ; call rsi
0x00000000001948b0 : adc bh, bh ; sti ; call rax
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000abc70 : adc bh, byte ptr [rbx] ; ja 0xabc84 ; cmove rax, rcx ; ret
0x00000000001872e4 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x00000000000e1429 : adc bh, dh ; ret 0x30f
0x000000000011d5c4 : adc bh, dh ; ret 0x8080
0x0000000000034f38 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000008edb5 : adc bl, ch ; call 0xffffffffc3d9770a
0x0000000000088ec5 : adc bl, ch ; call 0xffffffffc401181a
0x000000000008a6c5 : adc bl, ch ; call 0xffffffffc401301a
0x0000000000048982 : adc bl, ch ; jno 0x489d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008e6d4 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000a5f56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a52c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5337 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5297 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002da6a : adc bl, dh ; ret
0x00000000000a5f55 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a52c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000079616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000001145a1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x00000000000887d2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000003737d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037eca : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000037376 : adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000142a07 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000c7909 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78dd
0x000000000007cd7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000ce8d5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a91ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a91ce : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a920c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a928e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000074083 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000004857c : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000052b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000037377 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000135492 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x0000000000107eaf : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000e1861 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e1886 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000007e7eb : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000135491 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x0000000000107eae : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000142a08 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000078b3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000108b0a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012df8a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000131726 : adc byte ptr [rax + 1], bh ; ret
0x00000000000aa3de : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004906e : adc byte ptr [rax + 1], cl ; ret
0x000000000009e5b6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000109638 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000134ded : adc byte ptr [rax + 1], dil ; ret
0x00000000000d825f : adc byte ptr [rax + 2], bh ; ret
0x00000000000a93b4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a92b2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9230 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000019fbf0 : adc byte ptr [rax - 0x15], dl ; call rdi
0x00000000000fce63 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000195978 : adc byte ptr [rax - 0x606f0004], ah ; cld ; call qword ptr [rax]
0x0000000000109f91 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002da63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000093934 : adc byte ptr [rax - 0x73], cl ; jg 0x93951 ; jne 0x93928 ; ret
0x000000000010a1b5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010a1b4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000093d5a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a4cac : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000c790a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78dc
0x000000000012b43b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000071c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000023654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x0000000000088622 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000392b3 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007cd7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000001150e6 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000061d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000003d6d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00000000000821e9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000012ef34 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00000000000e4b54 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014d07f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000164c07 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000164c43 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a0a54 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000122890 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000005bce1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000866e3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002656a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048d91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000495a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fdc67 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000195a10 : adc byte ptr [rax - 0x7eaf0004], al ; cld ; call rax
0x00000000001aff00 : adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000e9dbb : adc byte ptr [rax - 1], bh ; ret
0x00000000000fb73b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006abcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000148961 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001468f1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003b19c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012ccea : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012b385 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aa113 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008afac : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000189fed : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006b454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x0000000000114b41 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000194810 : adc byte ptr [rax], al ; cld ; call rax
0x0000000000087ca5 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c74
0x0000000000087ca4 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c75
0x0000000000084736 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000045afb : adc byte ptr [rax], al ; ret
0x0000000000194210 : adc byte ptr [rax], al ; sti ; jmp rax
0x00000000000d82d5 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d81f8 : adc byte ptr [rax], bh ; ret 0x870f
0x0000000000194aa4 : adc byte ptr [rax], dh ; cld ; call qword ptr [rax]
0x00000000000a91ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a91cf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a920d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a928f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9391 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000e7241 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x000000000007ebda : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000010af0 : adc byte ptr [rbp + 0xa], dh ; add byte ptr [rax], al ; ret
0x0000000000048525 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x00000000001944a4 : adc byte ptr [rbp + rdi*8 - 0x25b6f01], ah ; call qword ptr [rax]
0x000000000008e878 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000093938 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000001944ac : adc byte ptr [rbp - 0x5a6f0003], ah ; std ; call qword ptr [rax]
0x00000000000c3e43 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x00000000001020b7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000001145a2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000abda2 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000194fb0 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x0000000000082320 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008450b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003adb0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5293 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001a11ad : adc byte ptr [rbx + 0xa], ch ; ret
0x000000000019f6fc : adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000079617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000194224 : adc byte ptr [rbx + rdi*8], al ; jmp rax
0x000000000007c892 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000075ad7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75af1 ; ret
0x0000000000195960 : adc byte ptr [rbx - 0x5d6f0004], ah ; cld ; call qword ptr [rax]
0x00000000000a9db0 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000012311b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000abdef : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x0000000000114736 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x11474f ; pop rbp ; pop r12 ; ret
0x00000000001942f4 : adc byte ptr [rbx - 5], cl ; push rax ; sti ; call rax
0x0000000000187450 : adc byte ptr [rbx], al ; jmp qword ptr [rax]
0x0000000000194a28 : adc byte ptr [rbx], dh ; cld ; call qword ptr [rax]
0x000000000019fb10 : adc byte ptr [rbx], dh ; jmp 0x19fb16
0x0000000000074084 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000094577 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00000000000ed0b0 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000074fe7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000854ab : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006c478 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9312 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a92f2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000195970 : adc byte ptr [rcx - 0x5f6f0004], ah ; cld ; call qword ptr [rax]
0x0000000000171f88 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fdc32 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000331b0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000fdcb2 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000000e312c : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b8148 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00000000000b80cc : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x000000000007eb87 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000012eef1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e30d7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00000000000b8b8b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x0000000000144293 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000012f11f : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x0000000000147e37 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000019c0d0 : adc byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x00000000000b9774 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194894 : adc byte ptr [rcx], al ; cld ; push rax ; add bh, ah ; call rax
0x000000000012e18d : adc byte ptr [rcx], bh ; ret
0x000000000003ad3e : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c895 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000194a24 : adc byte ptr [rcx], dh ; cld ; call qword ptr [rax]
0x0000000000085ec9 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000123547 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000fc23d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc279 ; ret
0x000000000010e2f3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000000c6cd6 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000194fa0 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x000000000019c8f0 : adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x000000000019c950 : adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00000000001aedc0 : adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000002de55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000011881a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000887d3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000035d72 : adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000167ce8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016fd53 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000145481 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145571 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145391 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014ccab : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b7af : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014c9af : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c0af : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c3af : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014baa7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145dd9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000145931 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001450c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145b11 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001452a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000145cf1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145c01 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145543 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145633 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145453 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c954 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c354 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c054 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014ba4c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001451b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001490dd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148efd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001498d5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001487f5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001496f5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145363 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145183 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145273 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145093 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000035de3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x0000000000099b48 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000003737e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037ecb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000ed0b9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00000000000378ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000003955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000001509f9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000062031 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000195968 : adc byte ptr [rdx - 0x5e6f0004], ah ; cld ; call qword ptr [rax]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001948f8 : adc byte ptr [rdx], al ; cld ; push rax ; add edi, esp ; jmp rax
0x00000000001277af : adc byte ptr [rdx], al ; je 0x1277bc ; ret
0x000000000018742c : adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x0000000000194994 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; call rax
0x000000000016e43b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000194aa8 : adc byte ptr [rdx], dh ; cld ; call qword ptr [rax]
0x000000000019428c : adc byte ptr [rip + 0x1e80fffb], cl ; sti ; jmp qword ptr [rax]
0x00000000001942cc : adc byte ptr [rip + 0x3a40fffb], bl ; sti ; jmp qword ptr [rax]
0x000000000013fc2d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000016e2ea : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016d8e5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089335 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008f27b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a54ab : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a54aa : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001a8d00 : adc byte ptr [rsi - 0xf], 0xff ; ret
0x0000000000194fa8 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x000000000003afea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000194b8c : adc byte ptr [rsp + rdi*8 - 1], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; cld ; call qword ptr [rsi]
0x0000000000194fb8 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000000bad4a : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a18f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a1d5 : adc byte ptr [rsp - 8], al ; ret
0x000000000014bd57 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187270 : adc ch, ch ; int1 ; jmp qword ptr [rax]
0x0000000000196209 : adc ch, dl ; jmp rsp
0x00000000001ada10 : adc cl, 0xf4 ; jmp rcx
0x000000000009e995 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bba3e : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bb9bf : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a9c83 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f29df
0x000000000004acef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000009ecad : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fda08 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000004709d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00000000000fedde : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e2ebc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000009ab44 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000088eb5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000004acf2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000b7ec4 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00000000000495a1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000072854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000000548df : adc cl, ch ; ret
0x000000000008e760 : adc dh, bh ; ret
0x000000000012bb4e : adc dh, dh ; ret 0x7401
0x0000000000080c4e : adc dh, dh ; ret 0xf0f
0x00000000000022e3 : adc dh, dl ; ret
0x0000000000100dda : adc dl, byte ptr [rsp + rbp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000025946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000048f13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000074075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000495ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000001737ab : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a51e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000007dfd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007c83c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b80cf : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d8426 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000887d7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014a2fb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000019c07d : adc dword ptr [rax], eax ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x000000000013e419 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000110859 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000146887 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001487f9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017374b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000019c0cd : adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d6 ; jmp qword ptr [rdi]
0x000000000006589c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000029c44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006bc82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006cbb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006ca9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000019c07c : adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x000000000009676a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000053f68 : adc dword ptr [rbx], 0x440f4c00 ; ret 0xf4c
0x000000000003b172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8408 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x000000000009f2d7 : adc dword ptr [rcx + 7], edi ; ret
0x00000000001943d4 : adc dword ptr [rcx - 0x5e1e0003], esp ; std ; jmp rcx
0x00000000001885c8 : adc dword ptr [rcx - 0xc], edx ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x000000000009ef72 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000009ef36 : adc dword ptr [rcx - 1], edi ; ret
0x00000000001ac125 : adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x000000000013b5ee : adc dword ptr [rcx], eax ; ja 0x13b622 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000010bde6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009f439 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000348c4 : adc dword ptr [rdi], ecx ; ret
0x000000000003488d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034c22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000000a9a0c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000a9b3f : adc dword ptr [rsi + 3], edx ; ret
0x00000000000a9bdc : adc dword ptr [rsi + 7], edx ; ret
0x00000000000e0412 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b4
0x00000000000a99de : adc dword ptr [rsi - 1], edx ; ret
0x0000000000146886 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aa3da : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000194271 : adc eax, 0x1630fffb ; sti ; jmp qword ptr [rax]
0x00000000000de097 : adc eax, 0x1fffffe ; ret 0x8b49
0x000000000017376b : adc eax, 0x252108 ; je 0x17377a ; ret
0x0000000000140187 : adc eax, 0x284284 ; add rsp, 8 ; ret
0x0000000000137629 : adc eax, 0x290972 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012d1c2 : adc eax, 0x2959b9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001089bf : adc eax, 0x2ba87c ; je 0x1089d0 ; pop rbp ; ret
0x0000000000187ecc : adc eax, 0x2bfff3bc ; mov dl, 0xf3 ; jmp rsp
0x00000000000fee6e : adc eax, 0x2c727d ; add rsp, 8 ; ret
0x00000000000889da : adc eax, 0x33a579 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000087af1 : adc eax, 0x33dd22 ; add rsp, 0x18 ; ret
0x0000000000136792 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000368ad : adc eax, 0x38c7d6 ; ret
0x000000000002e196 : adc eax, 0x394d95 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cae9 : adc eax, 0x397faf ; ret
0x000000000001f929 : adc eax, 0x3a89da ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000ab06a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001156fc : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x00000000000f53a7 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00000000001335dd : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x0000000000034ab6 : adc eax, 0x540f6600 ; ret 0xf66
0x0000000000034cdc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00000000000a5c58 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000a736c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000019ada5 : adc eax, 0x77440001 ; std ; call rsp
0x0000000000146411 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000234fd : adc eax, 0x83489066 ; ret
0x000000000013f4bd : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000003d249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000008e5e7 : adc eax, 0xc7164 ; cmove rax, rdx ; ret
0x00000000001ac44d : adc eax, 0xd500001 ; hlt ; jmp rcx
0x00000000000ab36a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006e511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c0d4f : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014a05e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148619 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000091ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004b600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000fae6c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000001ac2c5 : adc eax, dword ptr [rcx] ; add byte ptr [rax], cl ; fcomi st(3) ; call qword ptr [rdi]
0x000000000011d6f3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a1e68 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014ba4f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000482f9 : adc eax, eax ; ret
0x0000000000048436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000001831e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001a1cb9 : adc ebp, ebp ; call rsi
0x0000000000117ab0 : adc ebp, ebx ; ret 0x1f0f
0x0000000000088b24 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010a1bc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000013cace : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002cb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007ba4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000024301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000098ebd : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000aba54 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e3375 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x00000000000ad129 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x000000000012d290 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000a2034 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2054 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2074 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a1ebe : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000db2fa : adc ecx, edx ; call 0x42d03c47
0x00000000000db34a : adc ecx, edx ; call 0x43d03c97
0x00000000001997f1 : adc edi, eax ; call rsp
0x0000000000198ef9 : adc edi, esi ; jmp rsp
0x0000000000194b19 : adc edi, esp ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00000000001846fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000198f49 : adc esi, edi ; call rsp
0x00000000001a9fe1 : adc esi, edx ; jmp qword ptr [rcx]
0x000000000006ee5a : adc esi, esi ; ret 0xf20
0x0000000000053f67 : adc qword ptr [r11], 0x440f4c00 ; ret 0xf4c
0x000000000014bc32 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009f2d6 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000009ef71 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000009ef35 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000009f438 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a9b3e : adc qword ptr [rsi + 3], rdx ; ret
0x00000000000a9bdb : adc qword ptr [rsi + 7], rdx ; ret
0x00000000000a99dd : adc qword ptr [rsi - 1], rdx ; ret
0x000000000008e6d3 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000006e510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000148780 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008e75f : adc sil, r15b ; ret
0x00000000001ac21b : add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00000000001bb51b : add ah, ah ; add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x0000000000197a27 : add ah, ah ; je 0x197a20 ; jmp rsp
0x0000000000197ec7 : add ah, ah ; jmp rsp
0x00000000001a6a1b : add ah, ah ; mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x000000000019868f : add ah, ah ; or al, 0xf6 ; call rsp
0x00000000001b9f1b : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00000000001a7a1b : add ah, ah ; retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x000000000019ab4f : add ah, ah ; salc ; cli ; call rsp
0x00000000001afefb : add ah, al ; add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001981bf : add ah, al ; and ah, dh ; call rsp
0x00000000001acffb : add ah, al ; and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001aa4fb : add ah, al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000198387 : add ah, al ; cmc ; jmp rsp
0x000000000019eafb : add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00000000001a88fb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001aaf10 : add ah, al ; jmp qword ptr [rdi]
0x00000000001b1ffb : add ah, al ; jo 0x1b2008 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b4efb : add ah, al ; lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x0000000000198d2f : add ah, al ; out 0xf6, al ; call rsp
0x000000000019ac97 : add ah, al ; sti ; call rsp
0x00000000001ae2fb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ac233 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00000000001a05ab : add ah, bh ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00000000000aa06e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aa08e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001afd33 : add ah, bh ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afc33 : add ah, bh ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001afa33 : add ah, bh ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001948f5 : add ah, bh ; call qword ptr [rax]
0x0000000000194811 : add ah, bh ; call rax
0x00000000001947d1 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000aa126 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aa04d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001b0033 : add ah, bh ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001947f1 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00000000001b0333 : add ah, bh ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b1a60 : add ah, bh ; ret
0x000000000019494c : add ah, bh ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x000000000019ff13 : add ah, bl ; add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff23
0x00000000001af113 : add ah, bl ; add dword ptr [r8], eax ; call 0x241ae64d
0x00000000001aff13 : add ah, bl ; add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ad013 : add ah, bl ; and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00000000001aa513 : add ah, bl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ae913 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001aed13 : add ah, bl ; cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2013 : add ah, bl ; jo 0x1b2020 ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a3a13 : add ah, bl ; mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a10 ; call qword ptr [rcx]
0x00000000001a33e7 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a35b8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00000000000a9b3a : add ah, byte ptr [rdx - 0xf] ; jl 0xa9b8f ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000194c14 : add ah, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc61]
0x00000000000a1ebb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001ac123 : add ah, ch ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00000000001afe23 : add ah, ch ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b1f23 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a3f23 : add ah, ch ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00000000001b0623 : add ah, ch ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ad ; cmc ; jmp qword ptr [rcx]
0x000000000019cc23 : add ah, ch ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00000000001bad23 : add ah, ch ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001a5b23 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b3003 : add ah, cl ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001af503 : add ah, cl ; add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00000000001afc03 : add ah, cl ; add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001a8803 : add ah, cl ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00000000001a9503 : add ah, cl ; in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00000000001a6103 : add ah, cl ; mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00000000001b0003 : add ah, cl ; push rax ; add dword ptr [rax], eax ; jno 0x1b0008 ; jmp qword ptr [rcx]
0x000000000019d803 : add ah, cl ; sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00000000001aa603 : add ah, cl ; test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00000000001ae003 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001af72b : add ah, dh ; add dword ptr [r8], r8d ; loopne 0x1af78d ; cmc ; call qword ptr [rdx]
0x00000000001ade2b : add ah, dh ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001ae62b : add ah, dh ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001aff2b : add ah, dh ; add qword ptr [r8], r8 ; jo 0x1aff30 ; jmp qword ptr [rcx]
0x000000000019a59f : add ah, dh ; cli ; jmp rsp
0x00000000001aa52b : add ah, dh ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aed2b : add ah, dh ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x0000000000199e3f : add ah, dh ; cmp edi, ecx ; jmp rsp
0x00000000001972af : add ah, dh ; fldz ; call rsp
0x00000000001978df : add ah, dh ; int1 ; call rsp
0x00000000001b202b : add ah, dh ; jo 0x1b2038 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a5c2b : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c29 ; jmp qword ptr [rcx]
0x000000000019a74f : add ah, dh ; push rdi ; cli ; jmp rsp
0x000000000019add7 : add ah, dh ; ret 0xfffd
0x000000000019fb0b : add ah, dl ; add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb1b
0x00000000001a0883 : add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x000000000019d40b : add ah, dl ; and al, 0 ; add byte ptr [rax], al ; jle 0x19d404 ; jmp qword ptr [rsi]
0x00000000001aa40b : add ah, dl ; hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x0000000000199517 : add ah, dl ; in al, -9 ; jmp qword ptr [rbx + rax*8]
0x000000000019a8a7 : add ah, dl ; jg 0x19a8a9 ; call rsp
0x0000000000197217 : add ah, dl ; jl 0x19720d ; jmp rsp
0x000000000019a0e7 : add ah, dl ; mov bh, cl ; call rsp
0x0000000000198c5f : add ah, dl ; mov bl, 0xf6 ; jmp rsp
0x000000000019759f : add ah, dl ; mov ebp, edi ; jmp rsp
0x0000000000196d6f : add ah, dl ; or esi, ebp ; call rsp
0x00000000001970c7 : add ah, dl ; out dx, al ; call rsp
0x000000000019a7ff : add ah, dl ; pop rbp ; cli ; call rsp
0x00000000001b010b : add ah, dl ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b018c ; cmc ; jmp qword ptr [rcx]
0x00000000001acc0b : add ah, dl ; sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00000000001adc0b : add ah, dl ; sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x0000000000196c37 : add ah, dl ; xlatb ; in eax, dx ; inc esp ; ret 0
0x000000000004b2d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f0713 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001264e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000121940 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001449cd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149519 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001449f1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000142e3f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000000b320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000102aa2 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000000ab3f3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d7bdc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000133ecb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006a96f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bc499 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x0000000000026e51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000662b5 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000008036f : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010e2f5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000040f83 : add al, 0 ; add cl, ch ; ret 0xffec
0x000000000007ee06 : add al, 0 ; add dh, dh ; ret
0x0000000000121d93 : add al, 0 ; add dh, dh ; ret 0xf04
0x00000000001156ff : add al, 0 ; cmove rax, rdx ; ret
0x000000000009dee4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000001419b8 : add al, 0 ; mov edx, 0x190 ; call 0x2dc49
0x000000000009de54 : add al, 0 ; mov rax, rdi ; ret
0x0000000000045afa : add al, 0x10 ; add bl, dh ; ret
0x000000000012f750 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x000000000002da69 : add al, 0x10 ; ret
0x000000000010a0e5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a1bb : add al, 0x11 ; ret
0x00000000000aa0bd : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000004e619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000009ea01 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008a57a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000198330 : add al, 0x21 ; cmc ; jmp rsp
0x0000000000139d8a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000116bcd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000c915f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000096130 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000be635 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe606
0x00000000000cb6c1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5d5d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000001097b4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000109815 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000004698a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000889e1 : add al, 0x24 ; call qword ptr [rdx]
0x00000000000abac3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000106823 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cc675 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002084c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f6d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004d397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000002a21d : add al, 0x29 ; ret 0x8941
0x00000000000a9069 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a907b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008ca3e : add al, 0x31 ; ret
0x0000000000121624 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000019e63c : add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x000000000008c93a : add al, 0x37 ; ret
0x00000000000f503d : add al, 0x39 ; ret
0x00000000000d6def : add al, 0x39 ; ret 0xec7f
0x0000000000072d5f : add al, 0x3a ; ret
0x00000000000967a4 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x000000000005c464 : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c439
0x00000000000abd66 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000208f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000f5073 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009def5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009df05 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a760b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000009dea5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000012359e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000016a459 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016a46b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000072163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000720a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015a8ba : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000710cc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071272 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000071f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009de65 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009ddf5 : add al, 0x48 ; mov eax, edi ; ret
0x000000000008ad14 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000ac570 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000001afe3c : add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000113e34 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000001fc05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016a467 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a1f4c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000003512d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001ba157 : add al, 0x66 ; ret
0x00000000001a66b7 : add al, 0x71 ; ret
0x0000000000029ae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x000000000002da7d : add al, 0x72 ; or bl, dh ; ret
0x00000000001971a8 : add al, 0x72 ; out dx, al ; call rsp
0x00000000001a81a7 : add al, 0x72 ; ret
0x00000000000818d4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000abd64 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000cf054 : add al, 0x75 ; jae 0xcf070 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e455a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000ab4a2 : add al, 0x75 ; ret
0x0000000000196920 : add al, 0x77 ; in eax, dx ; jmp rsp
0x0000000000085987 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000fa9b2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002de30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ded0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002dd50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ddf0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001971f8 : add al, 0x78 ; out dx, al ; call rsp
0x0000000000195400 : add al, 0x79 ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00000000001a3577 : add al, 0x79 ; ret
0x00000000001a65df : add al, 0x7b ; ret
0x000000000017367b : add al, 0x7e ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b1
0x0000000000063886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000aa213 : add al, 0x81 ; je 0xaa1f5 ; ret
0x00000000001460fb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000aa20f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaa1f9 ; ret
0x00000000001479d3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009dd19 : add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000c26aa : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000aa1c8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b8 ; ret
0x00000000000910c7 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000026483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000759b2 : add al, 0x83 ; loop 0x759bd ; mov eax, edx ; ret
0x0000000000077f04 : add al, 0x83 ; loopne 0x77f0d ; ret
0x00000000000ad8bb : add al, 0x83 ; ret 0x4101
0x00000000000db3e2 : add al, 0x83 ; ret 0x4801
0x0000000000035d5b : add al, 0x83 ; ret 0xf701
0x0000000000117aa9 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7e
0x00000000000dded8 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000aa262 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaa260 ; ret
0x00000000000abd9e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000acf19 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000002ebb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006c1d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000d3403 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000aba6e : add al, 0x87 ; test r8d, r8d ; jne 0xaba48 ; ret
0x000000000016a456 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000000a1f2b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000003918a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009dd97 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000000556a1 : add al, 0x89 ; ret 0x2944
0x000000000009dde2 : add al, 0x8a ; add r10, rax ; jmp r10
0x00000000000aa1cb : add al, 0x8a ; je 0xaa1b5 ; ret
0x00000000000a1f14 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f5f07 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000aba58 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000054d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000dde92 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000003d39d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a72b0 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a63b6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001baa1b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000002e8ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x0000000000197cc8 : add al, 0x90 ; jmp rsp
0x00000000001975e8 : add al, 0x92 ; out dx, eax ; jmp rsp
0x0000000000109f97 : add al, 0xa ; ret
0x0000000000196720 : add al, 0xa6 ; jmp 0x196726
0x0000000000108a34 : add al, 0xa8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000002315 : add al, 0xaa ; ret
0x000000000002da66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000013b5a3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e0b8 : add al, 0xb8 ; ret
0x00000000000aa019 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012d1c9 : add al, 0xc2 ; jmp rax
0x00000000000abc8b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000035f24 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000c6dd3 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000019a2a8 : add al, 0xd1 ; stc ; call rsp
0x0000000000035f67 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000004838d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x483e9
0x0000000000049f6d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x49fc9
0x000000000010e7d8 : add al, 0xe8 ; ret 0xf110
0x0000000000196149 : add al, 0xea ; call rsp
0x000000000002dd35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000014420d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000149a7b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d7099 : add al, 0xf ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000663b6 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00000000000f00ca : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00000000000d6bb7 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000aaf75 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a5a2b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e3a03 : add al, 0xf ; test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000fcf29 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000e3379 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00000000000481c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002b020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x00000000000481cc : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x00000000001874a5 : add al, 0xf2 ; call rax
0x00000000001874a1 : add al, 0xf2 ; inc eax ; add al, 0xf2 ; call rax
0x0000000000187485 : add al, 0xf2 ; inc eax ; add al, 0xf2 ; jmp rax
0x0000000000187471 : add al, 0xf2 ; jmp qword ptr [rax]
0x0000000000187489 : add al, 0xf2 ; jmp rax
0x000000000015ac23 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006b45b : add al, 0xf3 ; ret
0x000000000008e839 : add al, 0xf6 ; ret 0x7408
0x0000000000194225 : add al, 0xfb ; jmp rax
0x000000000002f33d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000122cdb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000aafa8 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000001ab3d5 : add al, 1 ; add byte ptr [rax], bl ; call rcx
0x0000000000197615 : add al, 1 ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x000000000005cb58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d5043 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b419 : add al, 1 ; ret
0x000000000006b47a : add al, 1 ; xor eax, eax ; ret
0x00000000001a344f : add al, 2 ; hlt ; ret
0x00000000001abdff : add al, 2 ; jle 0x1abe11 ; ret
0x000000000009e8ec : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000016eb47 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000000d7dd2 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000000a5b78 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000088f4d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d45b1 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45e0
0x0000000000095bf8 : add al, 7 ; ret
0x000000000009dfcf : add al, 7 ; test r8b, r8b ; jne 0x9dfb8 ; ret
0x0000000000077403 : add al, 8 ; add byte ptr [rax], al ; ret
0x0000000000198188 : add al, 8 ; hlt ; call rsp
0x000000000009eb6f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001aa06f : add al, ah ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001a67cf : add al, ah ; add edi, ebp ; jmp rsi
0x00000000001b1fff : add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b87bf : add al, ah ; fdiv st(7) ; jmp rdi
0x000000000019c07f : add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00000000001b010f : add al, ah ; jb 0x1b010c ; jmp qword ptr [rcx]
0x000000000019d36f : add al, ah ; jl 0x19d360 ; call qword ptr [rcx]
0x00000000001a5d7f : add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a5daf : add al, ah ; mov dh, ch ; jmp rbx
0x00000000001acdbf : add al, ah ; nop ; hlt ; call qword ptr [rcx]
0x00000000001bbac9 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bbb21 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001afecf : add al, ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001af72f : add al, ah ; push rbx ; cmc ; call qword ptr [rdx]
0x0000000000008d4f : add al, ah ; ret
0x00000000001acc0f : add al, ah ; stc ; call qword ptr [rax]
0x000000000019eaff : add al, ah ; xor al, 0xea ; jmp rax
0x00000000001b9f1f : add al, al ; adc bh, al ; jmp qword ptr [rbx]
0x00000000001a417f : add al, al ; add bh, ch ; jmp rsp
0x00000000001aa40f : add al, al ; and dh, dl ; jmp qword ptr [rcx]
0x00000000001b1dbf : add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001afb8f : add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b004f : add al, al ; jno 0x1b004c ; jmp qword ptr [rcx]
0x000000000019d9bf : add al, al ; mov ebp, ecx ; jmp rsp
0x00000000001afddf : add al, al ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018645f : add al, al ; pop rcx ; out dx, al ; jmp rax
0x00000000001af95f : add al, al ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b4acf : add al, al ; ret
0x000000000017c827 : add al, al ; sldt word ptr [rax] ; ret
0x00000000001a530f : add al, al ; sub esi, ebp ; jmp qword ptr [rdi]
0x00000000001b2017 : add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000185517 : add al, bh ; loope 0x18551e ; jmp qword ptr [rdi]
0x0000000000185597 : add al, bh ; loope 0x18559e ; jmp qword ptr [rdi]
0x0000000000185617 : add al, bh ; loope 0x18561e ; jmp qword ptr [rdi]
0x000000000019d997 : add al, bh ; mov cl, ch ; jmp rsp
0x00000000001afee7 : add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b95a7 : add al, bh ; push rdi ; call qword ptr [rdx]
0x000000000019e0b7 : add al, bh ; ret
0x00000000001b1ec7 : add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001aa1c7 : add al, bh ; sbb edx, esi ; jmp qword ptr [rcx]
0x00000000001b1dd7 : add al, bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001ac127 : add al, bl ; fpatan ; call qword ptr [rbx]
0x00000000001ac167 : add al, bl ; fpatan ; call qword ptr [rsi]
0x00000000001ac1a7 : add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00000000001b01b7 : add al, bl ; jae 0x1b01b4 ; jmp qword ptr [rcx]
0x00000000001a3847 : add al, bl ; jns 0x1a383c ; jmp qword ptr [rcx]
0x00000000001a3f27 : add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00000000000a5e7b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001ae147 : add al, bl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001afdf7 : add al, bl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001af977 : add al, bl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b4af7 : add al, bl ; ret
0x00000000001ae7a7 : add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x000000000014cb32 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000007e52c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000019a70d : add al, byte ptr [r8] ; and al, 0x56 ; cli ; jmp rsp
0x000000000019a855 : add al, byte ptr [r8] ; xor al, 0x66 ; cli ; call rsp
0x0000000000088eb1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019a556 : add al, byte ptr [rax] ; adc al, 0x29 ; cli ; jmp rsp
0x000000000019a2a6 : add al, byte ptr [rax] ; add al, 0xd1 ; stc ; call rsp
0x000000000002de87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007f23d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000106826 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008dd43 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000074155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000013d41d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000087552 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x0000000000083731 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000000d6bbb : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008da39 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001093ae : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000094a8b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000010d96b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a217f
0x00000000000852a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b4fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000144b6d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147791 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d6ba5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144b91 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001321ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000134c7f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001343df : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005f80d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x0000000000067494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x0000000000101c92 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000cc222 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000137679 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000102f12 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000102c85 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000102b51 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000102ac9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000139d8c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000108a45 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000ab3d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c752a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000071910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036de9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e511a : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000b8ee9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000e6a23 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000171354 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d765e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000046076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000005e78e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f2d13 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000081315 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000007e52d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000802a1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000124ade : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000024c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000002426c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000001bb76e : add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00000000000e012d : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000019a3de : add al, byte ptr [rax] ; add r15d, edx ; call rsp
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019a4f6 : add al, byte ptr [rax] ; and al, 0x22 ; cli ; call rsp
0x0000000000199f0e : add al, byte ptr [rax] ; and al, 0x52 ; stc ; call rsp
0x000000000019a70e : add al, byte ptr [rax] ; and al, 0x56 ; cli ; jmp rsp
0x000000000019aa5e : add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00000000001bb346 : add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001bb466 : add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x000000000019a59e : add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x0000000000199e3e : add al, byte ptr [rax] ; hlt ; cmp edi, ecx ; jmp rsp
0x000000000019a74e : add al, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x000000000019ab4e : add al, byte ptr [rax] ; in al, -0x2a ; cli ; call rsp
0x0000000000199f9e : add al, byte ptr [rax] ; je 0x19a00c ; stc ; call rsp
0x000000000019a476 : add al, byte ptr [rax] ; je 0x19a498 ; cli ; jmp rsp
0x000000000019a92e : add al, byte ptr [rax] ; je 0x19a8d7 ; cli ; call rsp
0x00000000001231f2 : add al, byte ptr [rax] ; jne 0x123246 ; mov eax, r8d ; ret
0x000000000009dec5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000019a1d6 : add al, byte ptr [rax] ; mov dil, 0xf9 ; call rsp
0x000000000009de35 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000016d85b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000011c4e9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105242 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019a6de : add al, byte ptr [rax] ; push rbx ; cli ; call rsp
0x000000000019aa66 : add al, byte ptr [rax] ; push rsp ; ret
0x000000000019a3c6 : add al, byte ptr [rax] ; push rsp ; sti ; stc ; jmp rsp
0x00000000001bb887 : add al, byte ptr [rax] ; ret
0x00000000001bb8a7 : add al, byte ptr [rax] ; ret 0x503
0x000000000019a5fe : add al, byte ptr [rax] ; test byte ptr [rsi], bh ; cli ; jmp rsp
0x000000000019aade : add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x000000000019a266 : add al, byte ptr [rax] ; xchg eax, esp ; leave ; stc ; call rsp
0x0000000000199f36 : add al, byte ptr [rax] ; xchg eax, esp ; pop rax ; stc ; jmp rsp
0x000000000019a0ce : add al, byte ptr [rax] ; xchg ecx, r15d ; call rsp
0x000000000019a856 : add al, byte ptr [rax] ; xor al, 0x66 ; cli ; call rsp
0x0000000000099749 : add al, byte ptr [rbp + 0x38] ; ret
0x0000000000195140 : add al, byte ptr [rbx - 0x7d6d0004] ; cld ; jmp qword ptr [rdx]
0x00000000001adb89 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000001144ee : add al, byte ptr [rcx + 0x39] ; ret
0x000000000019c510 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000035d6c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000eb0ff : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000005a6d9 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00000000000db76d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000110ab5 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000019759d : add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00000000001ab1bd : add al, byte ptr [rcx] ; add byte ptr [rax - 0x1b], al ; call qword ptr [rsi]
0x0000000000122d18 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000122d37 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001a1410 : add al, byte ptr [rdi + 0xa] ; ret
0x000000000019f21e : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a1c8d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000001a1a65 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000001a6b05 : add al, byte ptr [rdx] ; ret
0x00000000001b4fed : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x000000000006e575 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000001a72b4 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000000a5c7a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019a555 : add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00000000001aa487 : add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00000000000780c2 : add al, ch ; clc ; ret
0x00000000001b89d7 : add al, ch ; fdivrp st(7) ; jmp rdi
0x00000000000f9c8f : add al, ch ; fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a6b87 : add al, ch ; frndint ; call qword ptr [rax]
0x000000000013c11e : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001afbd7 : add al, ch ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a3a17 : add al, ch ; jg 0x1a3a0c ; call qword ptr [rcx]
0x00000000001b0597 : add al, ch ; jp 0x1b0594 ; jmp qword ptr [rcx]
0x000000000006f34a : add al, ch ; les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x00000000001735fd : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffea
0x0000000000033542 : add al, ch ; pop rax ; ret
0x0000000000130243 : add al, ch ; push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005c487 : add al, ch ; ret
0x00000000000bd1f8 : add al, ch ; ret 0x572
0x000000000007fef8 : add al, ch ; ret 0x945
0x000000000006f648 : add al, ch ; ret 0xa1
0x000000000012b458 : add al, ch ; ret 0xcd
0x000000000002aca8 : add al, ch ; ret 0xea
0x0000000000138958 : add al, ch ; ret 0xef5c
0x00000000000f2828 : add al, ch ; ret 0xf2cf
0x00000000000acb78 : add al, ch ; ret 0xf810
0x0000000000044b78 : add al, ch ; ret 0xfe90
0x00000000001236f8 : add al, ch ; ret 0xff0d
0x000000000007676d : add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00000000000f36ad : add al, ch ; std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001af117 : add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001a7157 : add al, ch ; sub edx, edi ; jmp qword ptr [rdi]
0x00000000000e1005 : add al, ch ; xor eax, 0x83fff4cc ; call qword ptr [rax]
0x00000000001a5a77 : add al, cl ; jo 0x1a5a6d ; jmp qword ptr [rdx]
0x00000000001acda7 : add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000001ba827 : add al, cl ; xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00000000001b1def : add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001ac1bf : add al, dh ; fpatan ; jmp qword ptr [rcx]
0x00000000001a2caf : add al, dh ; in eax, dx ; jmp rsi
0x00000000001a5a5f : add al, dh ; insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x00000000001b01cf : add al, dh ; jae 0x1b01cc ; jmp qword ptr [rcx]
0x00000000001a05af : add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x000000000000c427 : add al, dh ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001afe0f : add al, dh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae7bf : add al, dh ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ad13f : add al, dh ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001acfff : add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000018738f : add al, dl ; cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00000000001ad5af : add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001afbbf : add al, dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a6a1f : add al, dl ; jne 0x1a6a16 ; jmp qword ptr [rax]
0x00000000001b057f : add al, dl ; jp 0x1b057c ; jmp qword ptr [rcx]
0x00000000001a707f : add al, dl ; jrcxz 0x1a7076 ; call rsp
0x00000000001a3daf : add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00000000001a465f : add al, dl ; ret 0xffed
0x0000000000194899 : add bh, ah ; call rax
0x00000000001947d5 : add bh, ah ; jmp rax
0x00000000001948f9 : add bh, ah ; push rax ; add edi, esp ; jmp rax
0x000000000012a3c2 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000218ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ecfed : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017454f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001402d9 : add bh, bh ; and eax, 0x281660 ; ret
0x00000000001bb9e4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x000000000013166c : add bh, bh ; loope 0x131605 ; ret
0x000000000007a3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000ba63a : add bh, bh ; ret
0x000000000019421d : add bh, bl ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00000000000f5cf2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf5d09 ; ret
0x000000000004a080 : add bh, byte ptr [rax + 1] ; ret
0x0000000000078962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003545b : add bh, byte ptr [rax - 1] ; ret
0x00000000001a1f0c : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x0000000000171722 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000001092af : add bh, byte ptr [rcx] ; ret
0x00000000001abe00 : add bh, byte ptr [rsi + 0xa] ; ret
0x00000000001872e0 : add bh, ch ; int1 ; call qword ptr [rax]
0x00000000001a4181 : add bh, ch ; jmp rsp
0x00000000001bc497 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000d3c45 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000d66bd : add bh, dh ; ret
0x000000000009c941 : add bh, dh ; ret 0
0x00000000000ab0e9 : add bl, al ; lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00000000000abccd : add bl, al ; lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x000000000008e02d : add bl, al ; lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x0000000000122d2e : add bl, al ; mov eax, 0x100 ; ret
0x0000000000122d34 : add bl, al ; mov eax, 0x102 ; ret
0x00000000000cde8c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000acef1 : add bl, al ; mov eax, 2 ; ret
0x00000000000d89dd : add bl, al ; mov eax, 3 ; ret
0x00000000000d89d7 : add bl, al ; mov eax, 4 ; ret
0x0000000000086bf4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000758bc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000cce5c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000fb73d : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000131871 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000014290a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000088a2c : add bl, al ; ret
0x000000000013455e : add bl, al ; xor eax, eax ; ret
0x0000000000189917 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000194211 : add bl, bh ; jmp rax
0x00000000001a9207 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000019cf9d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001b1c55 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000735aa : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a1a37 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001b4d58 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x00000000001a92c5 : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000001bc167 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x000000000007b5dd : add bl, ch ; fucomp st(0) ; ret
0x0000000000125e84 : add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x125e59
0x00000000000be63a : add bl, ch ; ret 0x1f0f
0x0000000000125e8b : add bl, ch ; ret 0xb8
0x00000000000a622f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a623f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000034cdd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000020582 : add bl, dh ; ret
0x00000000000330be : add bl, sil ; ret
0x00000000001a944b : add byte ptr [0xffffffffe8b00000], dl ; int1 ; call qword ptr [rbx]
0x00000000000ccfc7 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000051fe7 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67f9
0x0000000000023de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x000000000019fb0d : add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb19
0x000000000019fabd : add byte ptr [r8], al ; xor bpl, bl ; call qword ptr [rcx]
0x0000000000036e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x000000000019fe5d : add byte ptr [r8], r8b ; nop ; pop rsp ; jmp 0x19fe69
0x000000000019ff15 : add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff21
0x00000000001aa0df : add byte ptr [rax + 0x15], dh ; jmp qword ptr [rcx]
0x0000000000086bef : add byte ptr [rax + 0x16], bh ; ret
0x00000000001ba2b7 : add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00000000001bbb1c : add byte ptr [rax + 0x1809], dh ; loopne 0x1bbb36 ; ret 0xa
0x00000000001bbac4 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bbadf ; ret 0xb
0x00000000001a5fb7 : add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00000000001aec67 : add byte ptr [rax + 0x1c], cl ; cmc ; call qword ptr [rdx]
0x00000000001aed2f : add byte ptr [rax + 0x1e], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001aedef : add byte ptr [rax + 0x1f], al ; cmc ; jmp qword ptr [rcx]
0x0000000000034bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000001aa547 : add byte ptr [rax + 0x24], cl ; jmp qword ptr [rcx]
0x00000000001a8807 : add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00000000001a8787 : add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x0000000000171e8f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000032857 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e2e52 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c0954 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002944a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000007edc5 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000028552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000001aa687 : add byte ptr [rax + 0x2c], cl ; jmp rcx
0x00000000001a88ff : add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x000000000012f18d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x000000000019fabf : add byte ptr [rax + 0x32], al ; jmp 0x19fac7
0x00000000001a5787 : add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000045b6c : add byte ptr [rax + 0x39], cl ; ret
0x00000000000f08bc : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x000000000007d9d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bd0d3 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002bdbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007d997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001146f1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000001147b0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000087b8b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000001a5f27 : add byte ptr [rax + 0x3e], ch ; cli ; call qword ptr [rax]
0x0000000000193ab5 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000019edef : add byte ptr [rax + 0x44], al ; cli ; jmp qword ptr [rcx]
0x0000000000075f86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001ba98f : add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00000000001af507 : add byte ptr [rax + 0x4b], bl ; cmc ; jmp rax
0x00000000001bad27 : add byte ptr [rax + 0x54], cl ; clc ; jmp qword ptr [rcx]
0x000000000019cdd7 : add byte ptr [rax + 0x56], bh ; jmp 0x1b90e3
0x0000000000070675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001a31f7 : add byte ptr [rax + 0x59], ch ; in eax, dx ; call qword ptr [rax]
0x000000000001f92d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000001afa07 : add byte ptr [rax + 0x5b], ch ; cmc ; jmp qword ptr [rcx]
0x000000000006e0d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001af9ef : add byte ptr [rax + 0x5b], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000106828 : add byte ptr [rax + 0x5f], bl ; call rax
0x000000000019ff17 : add byte ptr [rax + 0x5f], cl ; jmp 0x19ff1f
0x000000000002ec94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005bf51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x0000000000084737 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000063883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000006bc83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c94b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000002e8ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000aa016 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000f227b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000033296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000004b2da : add byte ptr [rax + 0x63], cl ; ret
0x000000000006bd6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000112485 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000b227f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000072d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004617d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004b64c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000006ca9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00000000001a8e47 : add byte ptr [rax + 0x64], cl ; int1 ; call qword ptr [rdx]
0x00000000000cc68f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000000cc6af : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000cc69f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000cc6bf : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000cc67f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000001afd67 : add byte ptr [rax + 0x6e], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000cc67e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000001afd4f : add byte ptr [rax + 0x6e], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001bb463 : add byte ptr [rax + 0x6f980002], ch ; clc ; call rcx
0x00000000000cc8cf : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x000000000019c3c7 : add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00000000001aff2f : add byte ptr [rax + 0x70], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0007 : add byte ptr [rax + 0x71], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b00c7 : add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b00af : add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0187 : add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a698f : add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x0000000000088eaf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001b031f : add byte ptr [rax + 0x76], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0337 : add byte ptr [rax + 0x76], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000071323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000704f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b03e7 : add byte ptr [rax + 0x78], bl ; cmc ; jmp qword ptr [rbx]
0x00000000000a677f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001b060f : add byte ptr [rax + 0x7b], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0627 : add byte ptr [rax + 0x7b], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f7 : add byte ptr [rax + 0x7b], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019b5ff : add byte ptr [rax + 0x7b], dl ; std ; jmp qword ptr [rdx]
0x00000000001a39a7 : add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000000cce57 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000001a5c2f : add byte ptr [rax + 0x7e], dl ; out dx, al ; jmp qword ptr [rcx]
0x00000000000ccdaa : add byte ptr [rax + 0x7f], bh ; ret
0x000000000006d82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000760aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000075b81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bb7bf : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00000000001ac44f : add byte ptr [rax + 0xd], dl ; hlt ; jmp rcx
0x0000000000106bff : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x000000000007118c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000761ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000002ddd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008c8a5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000c89ec : add byte ptr [rax + 0xf], cl ; ret
0x0000000000078cdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000008da9b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000013fc64 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010e41b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000517bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f8b16 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000bd4b6 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008e5eb : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f8a8c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cb3cd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000125adc : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000cce6f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000001acf9b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acfb3 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x000000000012a45f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b5 : add byte ptr [rax + 1], bh ; ret
0x000000000008dd45 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000bf502 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000003c036 : add byte ptr [rax + 1], cl ; ret
0x000000000003bf0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000baa4c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000049510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000773ee : add byte ptr [rax + 1], dil ; ret
0x000000000012d49f : add byte ptr [rax + 2], bh ; ret
0x00000000000cd046 : add byte ptr [rax + 7], bh ; ret
0x00000000000ebdd2 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000eaf38 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000017b7cb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001a84e3 : add byte ptr [rax + rax*4], dh ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000001a6fa3 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000000a5dfc : add byte ptr [rax + rax], 0 ; ret
0x00000000000f0712 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000006a96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001156fe : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x0000000000081b3b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000082339 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000d7af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000001a717f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a71c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ab9b5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a5783 : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196a67 : add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00000000001b07ab : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x00000000001a0763 : add byte ptr [rax + rbx*2], ch ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00000000001a8783 : add byte ptr [rax + rbx*8], cl ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x0000000000196c3f : add byte ptr [rax + rbx*8], dl ; in eax, dx ; jmp rsp
0x0000000000070a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ff22d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000045ce6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000198187 : add byte ptr [rax + rcx], al ; hlt ; call rsp
0x00000000001bb76b : add byte ptr [rax + rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x000000000019b74b : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00000000001ae7a3 : add byte ptr [rax + rdi + 1], ch ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ae7bb : add byte ptr [rax + rdi - 0x20fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001971f7 : add byte ptr [rax + rdi*2], al ; out dx, al ; call rsp
0x00000000001a67cb : add byte ptr [rax + rdi*4 + 0x1e00000], dl ; out dx, eax ; jmp rsi
0x000000000017c977 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001abfd3 : add byte ptr [rax + rdx - 0x4307ffff], bl ; jmp qword ptr [rdi]
0x00000000001966f7 : add byte ptr [rax + rdx*2], ah ; jmp 0x1966ff
0x00000000001aff73 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019ff93 : add byte ptr [rax + rdx*2], bl ; add byte ptr [rax - 0x4a], bl ; jmp 0x19ffa3
0x0000000000197cc7 : add byte ptr [rax + rdx*4], al ; jmp rsp
0x00000000001adfeb : add byte ptr [rax + rsi - 0x1cbfffff], dh ; hlt ; call qword ptr [rsi]
0x00000000001b1fb3 : add byte ptr [rax + rsi*2 + 1], bh ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1f83 : add byte ptr [rax + rsi*2 + 1], cl ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1f53 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a5fe3 : add byte ptr [rax + rsi*4 + 0x54180000], ch ; cli ; call qword ptr [rax]
0x00000000001a5fb3 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00000000001a9fdb : add byte ptr [rax + rsi*8 + 0x13a00000], ah ; jmp qword ptr [rcx]
0x00000000001ae3c7 : add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae3af : add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae367 : add byte ptr [rax - 0x15], bl ; hlt ; jmp rdx
0x0000000000132fdd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001ae2ff : add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a9507 : add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00000000000302f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f0884 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001ab1bf : add byte ptr [rax - 0x1b], al ; call qword ptr [rsi]
0x00000000001adfef : add byte ptr [rax - 0x1d], al ; hlt ; call qword ptr [rsi]
0x00000000001ae007 : add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ade2f : add byte ptr [rax - 0x21], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ade47 : add byte ptr [rax - 0x21], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ade5f : add byte ptr [rax - 0x21], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6107 : add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a471f : add byte ptr [rax - 0x26], ah ; in eax, dx ; call qword ptr [rsi]
0x00000000001ac237 : add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00000000001ac21f : add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00000000001a0a37 : add byte ptr [rax - 0x2c], cl ; in al, dx ; call qword ptr [rax]
0x0000000000036081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001a0887 : add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x0000000000033dc7 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000086ace : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000005c4f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000074177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ab3df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab3bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab41f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab3cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab40f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000034f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000018749f : add byte ptr [rax - 0x3f000dfc], dh ; add al, 0xf2 ; call rax
0x00000000000519d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f91b : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000c963f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001b139f : add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x000000000003c932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000091b7 : add byte ptr [rax - 0x4a], ah ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019ff97 : add byte ptr [rax - 0x4a], bl ; jmp 0x19ff9f
0x00000000001b1257 : add byte ptr [rax - 0x4b], ch ; cmc ; call rdi
0x00000000001ad63f : add byte ptr [rax - 0x58], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ad657 : add byte ptr [rax - 0x58], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001b0f0f : add byte ptr [rax - 0x59], ah ; cmc ; call rsi
0x00000000001ad547 : add byte ptr [rax - 0x5b], cl ; hlt ; call rax
0x00000000000fedcf : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000001acf9f : add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acfb7 : add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ace27 : add byte ptr [rax - 0x6f], ch ; hlt ; jmp qword ptr [rsi]
0x00000000001ace0f : add byte ptr [rax - 0x6f], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5f57 : add byte ptr [rax - 0x71], bl ; out dx, al ; call qword ptr [rax]
0x00000000001a5f6f : add byte ptr [rax - 0x71], dl ; out dx, al ; jmp qword ptr [rsi]
0x0000000000037373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000026b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002cb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15f406 ; ret
0x000000000002092f : add byte ptr [rax - 0x73], cl ; add eax, 0x16b154 ; ret
0x000000000002093f : add byte ptr [rax - 0x73], cl ; add eax, 0x16d066 ; ret
0x00000000000fd73c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8854 ; ret
0x00000000000fd57c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8a14 ; ret
0x000000000012a4ff : add byte ptr [rax - 0x73], cl ; add eax, 0x61a3e ; ret
0x0000000000026b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ab9ff : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000aba0f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000011fb1f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7bd5 ; call rax
0x00000000000ab9ef : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000080c4a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000450dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006f218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x000000000007c2f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x000000000007bf08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x000000000007aea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007ac38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x000000000006f511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x000000000012d1c6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000ef357 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000003a721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000140332 : add byte ptr [rax - 0x75], cl ; add eax, 0x2840d6 ; call qword ptr [rax]
0x000000000013fd1f : add byte ptr [rax - 0x75], cl ; add eax, 0x2846e9 ; call qword ptr [rax]
0x000000000007cb0f : add byte ptr [rax - 0x75], cl ; add eax, 0x347a09 ; ret
0x0000000000029c8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39ac59 ; ret
0x0000000000021a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a68b9 ; ret
0x0000000000021a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a68d9 ; ret
0x00000000000fd25e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000073d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000083a2f : add byte ptr [rax - 0x75], cl ; je 0x83a5e ; call rax
0x0000000000083a2e : add byte ptr [rax - 0x75], cl ; je 0x83a5f ; call rax
0x000000000007b706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00000000000ce753 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00000000000eb745 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x0000000000074f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d666f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x000000000013af57 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000002342f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000105687 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000010567f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000000d0dc3 : add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x0000000000151e2f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000083d37 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000000c8fdf : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000108dde : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000005be57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367111 ; call rax
0x000000000005b801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367767 ; call rax
0x0000000000050049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x372f1f ; call rax
0x000000000004d3cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x375b9b ; call rax
0x00000000001889cc : add byte ptr [rax - 0x761d000c], cl ; hlt ; jmp rdx
0x000000000012303f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000fe864 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000fef42 : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000116bcf : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x0000000000142a04 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000088b21 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000889de : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x0000000000142c2f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000033630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x000000000008866e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000011587f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007cb3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007a361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006abce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083931 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007221c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000033c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00000000001424e9 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009e8ee : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000087554 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000bde76 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103365 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103265 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000007019f : add byte ptr [rax - 0x77], cl ; jmp 0x48f58af8
0x00000000000bd925 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece627b
0x000000000006dcb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000784b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000001295ec : add byte ptr [rax - 0x77], cl ; out 0x4c, eax ; mov esi, esi ; call 0x558b9
0x00000000000bce76 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89169
0x0000000000087fc5 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012d75c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000102f21 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012bed3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000076ca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x0000000000113b11 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x00000000000e35cc : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x18 ; call 0x1f8a8
0x0000000000083ff5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002ad35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000012745f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000834dc : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000af0a8 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000047465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000061cd7 : add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00000000000662e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003413a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000046ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000be70f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000116bd2 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000d6bbd : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002fa5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010c7a3 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007f8ef : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000522b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000002c03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bc190 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000096500 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f0c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c8c36 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fd90a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c838e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000fd465 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x00000000001052e5 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000007db9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x000000000008da3b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000044dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000528df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x0000000000045cea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000e001f : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000094645 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000885b2 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007a3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000011a0e4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00000000001429bc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013173c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x131754 ; ret
0x00000000001344ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344c4 ; ret
0x00000000001344c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344dc ; ret
0x0000000000134cfc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d14 ; ret
0x0000000000134d14 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d2c ; ret
0x0000000000134d44 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d5c ; ret
0x000000000011876f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x0000000000195054 : add byte ptr [rax - 0x786f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000001bb5b7 : add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00000000000c9161 : add byte ptr [rax - 0x7af10000], al ; ret
0x000000000008ad0f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000072b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000063690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00000000000a2723 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ff7f1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000138333 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000001b07af : add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x000000000016c017 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000051fe8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67f8
0x000000000010d96d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a217d
0x0000000000082746 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000061cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000006ad90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x0000000000086d1d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d6d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000f660f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000001739c6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1739d7 ; ret
0x0000000000084032 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000020c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f120a : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000125fdf : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122254 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000a959f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fdebf : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000121942 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000082189 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000be26f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000121aca : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e4cff : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000173dff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000010838a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000009e47f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000023de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000014428f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d705f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008df3f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008decf : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000343b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000af0df : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d8167 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000242b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e60bf : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c95f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000609ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010da67 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011eb45 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008d2d0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000146273 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d6ba7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000001442b3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009eaaf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008ae4f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000297fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006ee54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000046067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000af367 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000bb9d9 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000001362c0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bd1f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x000000000007fef1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00000000001236f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000007186c : add byte ptr [rax - 0x7f], cl ; ret
0x000000000015844b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f1bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x000000000011899b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548d : add byte ptr [rax - 1], bh ; ret
0x00000000000368c6 : add byte ptr [rax - 1], dil ; ret
0x0000000000194b68 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x000000000019a92f : add byte ptr [rax - 6], dh ; call rsp
0x00000000001a9987 : add byte ptr [rax - 7], bh ; int1 ; call rsi
0x00000000000780bf : add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00000000001362c4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bd1f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x000000000007fef5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00000000001236f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000006b4bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000073ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003ea8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000017454b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013b56b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015ac2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000009581b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000824e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000aa1d3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095b9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006fe0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000362c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x0000000000071033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000b5063 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016db61 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000002b0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000065892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000000000006d82b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x0000000000070676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x0000000000070fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x0000000000071324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00000000000761ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x0000000000078083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x00000000001a84e5 : add byte ptr [rax], 0 ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x0000000000196205 : add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x0000000000125e89 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00000000001a188f : add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00000000001b1e1f : add byte ptr [rax], ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001adc0f : add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001ae62f : add byte ptr [rax], ah ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001afaff : add byte ptr [rax], ah ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b007f : add byte ptr [rax], ah ; jb 0x1b007c ; jmp qword ptr [rcx]
0x00000000001b01ff : add byte ptr [rax], ah ; je 0x1b01fc ; jmp qword ptr [rcx]
0x00000000001a6d4f : add byte ptr [rax], ah ; jg 0x1a6d46 ; call qword ptr [rdi]
0x000000000010db5e : add byte ptr [rax], ah ; jmp 0x10db28
0x000000000002de14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001a587f : add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00000000001afe3f : add byte ptr [rax], ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001af9bf : add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000008b0f : add byte ptr [rax], ah ; ret 0xf
0x00000000001a717e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a71c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001ac24a : add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x000000000019c94a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00000000001a1ec2 : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001acc4a : add byte ptr [rax], al ; adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00000000001965ae : add byte ptr [rax], al ; adc al, 0x20 ; jmp 0x1965b8
0x00000000001ae84a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00000000001aee4a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00000000001afd4a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1e4a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000196a66 : add byte ptr [rax], al ; adc al, 0xa8 ; in eax, dx ; call rsp
0x00000000001a6d4a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001a7a4a : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x0000000000196c3e : add byte ptr [rax], al ; adc al, 0xd8 ; in eax, dx ; jmp rsp
0x00000000001a8d4a : add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000001a944a : add byte ptr [rax], al ; adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x0000000000196cf6 : add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x000000000019b74a : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000019fbee : add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x000000000019420e : add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x000000000019fb0e : add byte ptr [rax], al ; adc byte ptr [rbx], dh ; jmp 0x19fb18
0x000000000019c0ce : add byte ptr [rax], al ; adc byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000019c8ee : add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x000000000019c94e : add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x0000000000035d70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001a8cfe : add byte ptr [rax], al ; adc byte ptr [rsi - 0xf], 0xff ; ret
0x000000000019c07a : add byte ptr [rax], al ; adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00000000001aaf0e : add byte ptr [rax], al ; add ah, al ; jmp qword ptr [rdi]
0x000000000019e63a : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00000000001afe3a : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001971a6 : add byte ptr [rax], al ; add al, 0x72 ; out dx, al ; call rsp
0x000000000019691e : add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00000000001971f6 : add byte ptr [rax], al ; add al, 0x78 ; out dx, al ; call rsp
0x000000000019671e : add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x196728
0x000000000018645d : add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x0000000000185515 : add byte ptr [rax], al ; add al, bh ; loope 0x185520 ; jmp qword ptr [rdi]
0x0000000000185595 : add byte ptr [rax], al ; add al, bh ; loope 0x1855a0 ; jmp qword ptr [rdi]
0x0000000000185615 : add byte ptr [rax], al ; add al, bh ; loope 0x185620 ; jmp qword ptr [rdi]
0x00000000001adb87 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000110ab3 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000780c0 : add byte ptr [rax], al ; add al, ch ; clc ; ret
0x0000000000033540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x000000000005c485 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000bd1f6 : add byte ptr [rax], al ; add al, ch ; ret 0x572
0x000000000007fef6 : add byte ptr [rax], al ; add al, ch ; ret 0x945
0x000000000006f646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x000000000012b456 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x000000000002aca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x0000000000138956 : add byte ptr [rax], al ; add al, ch ; ret 0xef5c
0x00000000000f2826 : add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00000000000acb76 : add byte ptr [rax], al ; add al, ch ; ret 0xf810
0x00000000001236f6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x00000000001a05ad : add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x000000000017454d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013166a : add byte ptr [rax], al ; add bh, bh ; loope 0x131607 ; ret
0x00000000000d66bb : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000cde8a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000aceef : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000000d89db : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d89d5 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x0000000000134e0b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000088a2a : add byte ptr [rax], al ; add bl, al ; ret
0x000000000013455c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000000000007b5db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00000000000be638 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000a622d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a623d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002bd55 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001420bb : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000055b8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e2e50 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c0952 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002bdbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000193ab3 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000afa79 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000072d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004b64a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000a677d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000ccda8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000c89ea : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000013fc62 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010e419 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000fe97f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f8b14 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000f8a8a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cb3cb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cce6d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000012a45d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000aa310 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003bf0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000012d4ad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000cd044 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000001a717d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a71c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ab9b3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000003c2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000073eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000034c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000c963d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000fedcd : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000ab9fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000aba0d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ab9ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000fd25c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000007b704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x000000000002342d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d0dc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00000000000c8fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007cb3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000bde74 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103363 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103263 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000087fc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012d75a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000102f1f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000076ca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x000000000003ea20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000834da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000af0a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000061cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00000000000ef48d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002c03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cd441 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f0c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001052e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000570dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000094643 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007a3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006368e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000138331 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f660d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000320dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000125fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000a959d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fdf7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013d8fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e4cfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000173dfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108388 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000029014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000145db3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d705d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008df3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008decd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000af0dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e60bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000609ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010da65 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000147931 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145ddd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bbb8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009eaad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000029abe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000159c44 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a717c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a71c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000019420c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x000000000018645b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x0000000000185513 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185522 ; jmp qword ptr [rdi]
0x0000000000185593 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1855a2 ; jmp qword ptr [rdi]
0x0000000000185613 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185622 ; jmp qword ptr [rdi]
0x00000000000a623b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000758cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000072d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000ab9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000aba0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ab9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007cb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000834d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000061cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00000000000bf39b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000570db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000320db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a959b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fdf7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013d8fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000173dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d705b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008df3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008decb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000af0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e60bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006167b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000bf49b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000019420a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00000000000e9d9d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001be2b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000018249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000019f29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x0000000000019f11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x0000000000019f41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000093a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x0000000000185512 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185523 ; jmp qword ptr [rdi]
0x0000000000185592 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a3 ; jmp qword ptr [rdi]
0x0000000000185612 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185623 ; jmp qword ptr [rdi]
0x000000000019372a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000019ee2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x000000000000404a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bbfaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001e60a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x000000000001b382 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x0000000000003fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017d652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017db42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001be792 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001be412 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bcb86 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bca36 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000019eca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000000a8ffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000019420b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x000000000001824b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000003a899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000100e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000a97db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000010f53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x000000000014426b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000892eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000019372b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000007a61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000019f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x0000000000019f13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x0000000000019f43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000011681b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000ab39c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004db0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000fd84c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077eec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000017454c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x0000000000142dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000017f67c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017e82c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000185514 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185521 ; jmp qword ptr [rdi]
0x0000000000185594 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a1 ; jmp qword ptr [rdi]
0x0000000000185614 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185621 ; jmp qword ptr [rdi]
0x00000000000fac97 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000107ec7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000d605d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fd0a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cb3ca : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000968d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000001a71dc : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a71eb ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000006084e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00000000000beb61 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbad97
0x0000000000058e19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000016ff7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ff8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ff9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ffac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ffbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016fefc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016ff0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016ff1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ff2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ff3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ff4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ff5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ff6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ab9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000aba0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ab9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016feec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000016809c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a677c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a517c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a614c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a5e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001680dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001680fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001680cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f538c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a616c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a618c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a617c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000cce6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007222c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012d4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000013b56c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d665c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000117aab : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7c
0x000000000015ac2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000016810c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013b928 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a61ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a61bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012cdca : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c7c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007cb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007cb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001680ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a615c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a622c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a623c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015ad7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002058b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000132b78 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013b729 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096132 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000108a38 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b9b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019372c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000193ab2 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000019ee4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x000000000000404c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bbfac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001e60c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x000000000001b384 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x000000000017e64c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017ede4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017d654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017db44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001be794 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001be414 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bcb88 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bca38 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000019ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000000a8ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000093872 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93883 ; ret
0x00000000000a8ffd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000019420d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x000000000001824d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000029a6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c256b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094381 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012c377 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00000000001a7a1e : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00000000000a9d31 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000024aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000000da653 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d514d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000001a8d4e : add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000000aa089 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000093833 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cc866 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015a50d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029da9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035a94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x000000000016fc98 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000005a37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005721c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000003a89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e081d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000013ba1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000e0c0d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000e8bdd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000100e4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000072fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000001a716e : add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00000000000b4bc6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000001680fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012ef59 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000115e1e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000001680dd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a618d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000075510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000c3de0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000056802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000362c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000a9d50 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00000000000a97dd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001bc131 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000000e3ba1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000002f6d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000102b61 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000102c95 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008814d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000d8c28 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8c3f
0x0000000000071034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000102aca : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000102ad9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000019e0b1 : add byte ptr [rax], al ; add byte ptr [rcx + rsi], bh ; add al, bh ; ret
0x00000000000f538d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000001735dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x17365d ; call 0x1f8b1
0x0000000000045f92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000047d67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000dd1c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000008d631 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005aef4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b5064 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005133c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010ebbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000943ef : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000e0ea4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d47a0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000010f53d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x000000000014426d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000892ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000bccbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00000000001209c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000019372d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008e060 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008e086 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000d4fb5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f46
0x00000000000b9245 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000da662 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000dfbe5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000da4fb : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000008ce44 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c1cbf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c5431 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c364d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c1c82 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x0000000000149c3b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x000000000005401a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c5b7d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c18ae : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c53a1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fc13f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000dfb4d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ad955 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000ab0b2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000171d42 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000e7648 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x0000000000114dc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000a9fe5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015ad0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015ad7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d0d3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007a61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008df7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c4734 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c4a4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013c85b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bbaf5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000de57a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000141f6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000fac98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000ea358 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b593c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d6cbe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c299f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000dfb3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000149b85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d82cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00000000001aa49e : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x000000000016db62 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008de92 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000102aa3 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f5cf5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001ba126 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x000000000019d40e : add byte ptr [rax], al ; add byte ptr [rsi - 0x17], bh ; jmp qword ptr [rsi]
0x00000000000f5367 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000019e57a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00000000000e40b5 : add byte ptr [rax], al ; add cl, al ; call 0x66d0c9cd
0x0000000000067495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000104056 : add byte ptr [rax], al ; add cl, ch ; ret 0xf771
0x0000000000060226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x0000000000067732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x000000000009dc35 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000000000009db01 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x000000000002b0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000f0051 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000006084f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000000000019f2d : add byte ptr [rax], al ; add dh, bl ; ret
0x0000000000019f15 : add byte ptr [rax], al ; add dh, cl ; ret
0x0000000000019f45 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e3a07 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000e3a16 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000001711b1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000061ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000000a0700 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a0709 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000e3ac9 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d4fb6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001ae59a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00000000001afe9a : add byte ptr [rax], al ; add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00000000000ab39e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000008dd44 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004da4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000132201 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000134c81 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001343e1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000131664 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000012df65 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014374e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013a331 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f53a9 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012ec2d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008ccaa : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001ade5a : add byte ptr [rax], al ; and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade4a ; hlt ; jmp qword ptr [rcx]
0x00000000001aed5a : add byte ptr [rax], al ; and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x000000000019fe5a : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6c
0x00000000001966f6 : add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196700
0x000000000019711e : add byte ptr [rax], al ; and al, 0x6e ; out dx, al ; call rsp
0x00000000001b205a : add byte ptr [rax], al ; and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a2c5a : add byte ptr [rax], al ; and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a465a : add byte ptr [rax], al ; and al, 0x97 ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a4a5a : add byte ptr [rax], al ; and al, 0x9b ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x0000000000196c0e : add byte ptr [rax], al ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00000000001aa49f : add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x0000000000125e88 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x125e55
0x00000000001a188e : add byte ptr [rax], al ; and byte ptr [rcx], al ; in eax, dx ; call qword ptr [rsi]
0x00000000001a6d4e : add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001a587e : add byte ptr [rax], al ; and byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00000000001acf9a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000077eee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001a886e : add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x000000000002e0eb : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000008df7e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008abf0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008c8a4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000019b066 : add byte ptr [rax], al ; call 0x111998ca
0x00000000001a6b86 : add byte ptr [rax], al ; call 0x111a686b
0x000000000008826c : add byte ptr [rax], al ; call 0x114494
0x00000000001a3a16 : add byte ptr [rax], al ; call 0x121a27a1
0x000000000019cd86 : add byte ptr [rax], al ; call 0x1319b6e3
0x000000000019e196 : add byte ptr [rax], al ; call 0x1319cb66
0x000000000019ce36 : add byte ptr [rax], al ; call 0x1819b799
0x00000000001aa486 : add byte ptr [rax], al ; call 0x221a96b5
0x00000000001a7156 : add byte ptr [rax], al ; call 0x281a6b8b
0x0000000000021956 : add byte ptr [rax], al ; call 0x2dc44
0x00000000001323af : add byte ptr [rax], al ; call 0x2e624
0x000000000010c2d8 : add byte ptr [rax], al ; call 0x356f9
0x000000000017454e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000000bb65d : add byte ptr [rax], al ; call r12
0x0000000000020850 : add byte ptr [rax], al ; call rax
0x0000000000102aa9 : add byte ptr [rax], al ; call rbx
0x0000000000142dfe : add byte ptr [rax], al ; call rcx
0x000000000017f67e : add byte ptr [rax], al ; call rdi
0x0000000000039fcc : add byte ptr [rax], al ; call rdx
0x000000000017e82e : add byte ptr [rax], al ; call rsp
0x0000000000185516 : add byte ptr [rax], al ; clc ; loope 0x18551f ; jmp qword ptr [rdi]
0x0000000000185596 : add byte ptr [rax], al ; clc ; loope 0x18559f ; jmp qword ptr [rdi]
0x0000000000185616 : add byte ptr [rax], al ; clc ; loope 0x18561f ; jmp qword ptr [rdi]
0x000000000019d996 : add byte ptr [rax], al ; clc ; mov cl, ch ; jmp rsp
0x000000000019e0b6 : add byte ptr [rax], al ; clc ; ret
0x00000000001aa1c6 : add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00000000001ac232 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00000000001a05aa : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00000000001afd32 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afc32 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001afa32 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0032 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0332 : add byte ptr [rax], al ; cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b9 ; cmc ; jmp qword ptr [rcx]
0x000000000019edee : add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001aa49a : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aa482 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; call 0x221a96b9
0x00000000000fac99 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000107ec9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000b593d : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d605f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fd0a7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cb3cc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000114c19 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000968d8 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000ccdfd : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010e11f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001ade72 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00000000001af972 : add byte ptr [rax], al ; cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001aff72 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b2072 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a8072 : add byte ptr [rax], al ; cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x000000000016c016 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001a7646 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001aa606 : add byte ptr [rax], al ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x0000000000074697 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x746a8 ; pop rbx ; ret
0x00000000000cbb40 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcbb53 ; ret
0x00000000000ac067 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xac081 ; mov eax, edi ; ret
0x0000000000072aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x000000000019ebd6 : add byte ptr [rax], al ; cmp rbp, rdx ; call qword ptr [rbx]
0x00000000000833d7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x833a8 ; ret
0x00000000000ccee4 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xccf17 ; ret
0x00000000001a1cb6 : add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00000000001a7436 : add byte ptr [rax], al ; cwde ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001a8782 : add byte ptr [rax], al ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001af112 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001b2012 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6012 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00000000001a8076 : add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00000000001a3846 : add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00000000001ae912 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001aed12 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x00000000001aa512 : add byte ptr [rax], al ; fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aff12 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff19 ; jmp qword ptr [rcx]
0x000000000019ff12 : add byte ptr [rax], al ; fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff24
0x00000000001a3a12 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000350d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001af72a : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; loopne 0x1af78e ; cmc ; call qword ptr [rdx]
0x00000000001ade2a : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001ae62a : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001aff2a : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; jo 0x1aff31 ; jmp qword ptr [rcx]
0x00000000001aa52a : add byte ptr [rax], al ; hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aed2a : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00000000001972ae : add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00000000001b202a : add byte ptr [rax], al ; hlt ; jo 0x1b2039 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a5c2a : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c2a ; jmp qword ptr [rcx]
0x00000000001b9f1a : add byte ptr [rax], al ; in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00000000001a7a1a : add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00000000001a6a1a : add byte ptr [rax], al ; in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00000000001ac122 : add byte ptr [rax], al ; in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00000000001afe22 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b1f22 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a3f22 : add byte ptr [rax], al ; in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00000000001b0622 : add byte ptr [rax], al ; in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ae ; cmc ; jmp qword ptr [rcx]
0x000000000019cc22 : add byte ptr [rax], al ; in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00000000001bad22 : add byte ptr [rax], al ; in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001a5b22 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ac1a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00000000001ae7a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001a39a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001b95a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00000000001b58a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe2080001 ; sti ; call rsi
0x00000000001ae1a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001afbef : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e46 : add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00000000001bb97e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x00000000000f5cf6 : add byte ptr [rax], al ; jbe 0xf5d05 ; ret
0x00000000001968de : add byte ptr [rax], al ; je 0x196944 ; in eax, dx ; jmp rsp
0x00000000001a52aa : add byte ptr [rax], al ; je 0x1a525a ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00000000001a5daa : add byte ptr [rax], al ; je 0x1a5d65 ; add byte ptr [rax], al ; loopne 0x1a5d43 ; out dx, al ; jmp rbx
0x00000000001a71de : add byte ptr [rax], al ; je 0x1a71e9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7aaa : add byte ptr [rax], al ; je 0x1a7a82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00000000001ad2aa : add byte ptr [rax], al ; je 0x1ad2da ; add dword ptr [rax], eax ; loopne 0x1ad255 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae3aa : add byte ptr [rax], al ; je 0x1ae3eb ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001afdaa : add byte ptr [rax], al ; je 0x1afe05 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b00aa : add byte ptr [rax], al ; je 0x1b0108 ; add dword ptr [rax], eax ; push rax ; jb 0x1b00b1 ; jmp qword ptr [rcx]
0x00000000001b07aa : add byte ptr [rax], al ; je 0x1b080f ; add dword ptr [rax], eax ; jo 0x1b0740 ; cmc ; jmp rax
0x00000000001bb51f : add byte ptr [rax], al ; je 0x1bb51f ; call qword ptr [rdi]
0x000000000006d82c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x0000000000070677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x0000000000070feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00000000000761ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x0000000000078084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x0000000000086a57 : add byte ptr [rax], al ; je 0x86a64 ; ret
0x0000000000088376 : add byte ptr [rax], al ; je 0x88384 ; ret
0x0000000000093876 : add byte ptr [rax], al ; je 0x9387f ; ret
0x00000000000ab9b4 : add byte ptr [rax], al ; je 0xaba28 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ccf0b : add byte ptr [rax], al ; je 0xccf5e ; mov eax, 0x20 ; ret
0x00000000000e78b6 : add byte ptr [rax], al ; je 0xe78f6 ; xor eax, eax ; ret
0x00000000000f5368 : add byte ptr [rax], al ; je 0xf5375 ; ret
0x0000000000171d43 : add byte ptr [rax], al ; jg 0x171d56 ; neg eax ; ret
0x00000000000ab0b3 : add byte ptr [rax], al ; jg 0xab0bf ; neg eax ; ret
0x000000000016fc99 : add byte ptr [rax], al ; jl 0x16fca6 ; neg eax ; ret
0x000000000019cfb2 : add byte ptr [rax], al ; jl 0x19cfdf ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x000000000019e0b2 : add byte ptr [rax], al ; jl 0x19e0ee ; add byte ptr [rax], al ; clc ; ret
0x000000000019e0b2 : add byte ptr [rax], al ; jl 0x19e0f0 ; add byte ptr [rax], al ; clc ; ret
0x00000000001a1cb2 : add byte ptr [rax], al ; jl 0x1a1d2c ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00000000001a5fb2 : add byte ptr [rax], al ; jl 0x1a5f6f ; add byte ptr [rax], al ; js 0x1a5fdd ; cli ; call qword ptr [rax]
0x00000000001a9bb2 : add byte ptr [rax], al ; jl 0x1a9bab ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00000000001acfb2 : add byte ptr [rax], al ; jl 0x1acfdf ; add dword ptr [rax], eax ; js 0x1acf56 ; hlt ; jmp qword ptr [rcx]
0x00000000001b01b2 : add byte ptr [rax], al ; jl 0x1b0211 ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b1fb2 : add byte ptr [rax], al ; jl 0x1b202f ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000019d40f : add byte ptr [rax], al ; jle 0x19d400 ; jmp qword ptr [rsi]
0x00000000001966a6 : add byte ptr [rax], al ; jmp 0x1966b0
0x000000000005f80f : add byte ptr [rax], al ; jmp 0x5baf4
0x0000000000060850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x0000000000067496 : add byte ptr [rax], al ; jmp 0x63700
0x000000000007b5dc : add byte ptr [rax], al ; jmp 0x7b5c2
0x00000000000beb63 : add byte ptr [rax], al ; jmp 0xbad95
0x00000000000be639 : add byte ptr [rax], al ; jmp 0xbe602
0x0000000000035325 : add byte ptr [rax], al ; jmp rax
0x000000000013166b : add byte ptr [rax], al ; jmp rcx
0x00000000000ccddf : add byte ptr [rax], al ; jne 0xccdb0 ; ret
0x00000000000ccfee : add byte ptr [rax], al ; jne 0xccfd1 ; xor eax, eax ; ret
0x000000000019d20e : add byte ptr [rax], al ; jns 0x19d201 ; jmp qword ptr [rcx]
0x00000000001a698e : add byte ptr [rax], al ; jo 0x1a6a0a ; out dx, eax ; call rax
0x00000000001aa0de : add byte ptr [rax], al ; jo 0x1aa0fc ; jmp qword ptr [rcx]
0x00000000001b1f82 : add byte ptr [rax], al ; jo 0x1b1f91 ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001bb76f : add byte ptr [rax], al ; jp 0x1bb76f ; call qword ptr [rcx]
0x000000000019cdd6 : add byte ptr [rax], al ; js 0x19ce36 ; jmp 0x1b90e4
0x00000000001a5fb6 : add byte ptr [rax], al ; js 0x1a5fd9 ; cli ; call qword ptr [rax]
0x00000000001a8786 : add byte ptr [rax], al ; js 0x1a87b4 ; int1 ; jmp qword ptr [rcx]
0x00000000001a8806 : add byte ptr [rax], al ; js 0x1a8834 ; int1 ; call qword ptr [rcx]
0x00000000001a9986 : add byte ptr [rax], al ; js 0x1a9988 ; int1 ; call rsi
0x00000000000cd045 : add byte ptr [rax], al ; js 0xcd055 ; ret
0x00000000001bbb14 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bbabc : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x000000000012bf91 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012c378 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000016ff7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ff8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ff9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ffae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ffbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016fedd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016fefe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016ff0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016ff1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ff2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ff3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ff4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016fe8a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ff5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ff6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ab88b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab9ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000aba0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ab9fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016feee : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002092e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16b154] ; ret
0x000000000002093e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16d066] ; ret
0x000000000012a4fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a3e] ; ret
0x000000000011fb1e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x00000000000450dc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f217 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c747 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f510 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000001afee2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a5fe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b03e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e9 ; jmp qword ptr [rbx]
0x00000000001a71e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a5d7e : add byte ptr [rax], al ; loopne 0x1a5d0f ; out dx, al ; call qword ptr [rsi]
0x00000000001a5dae : add byte ptr [rax], al ; loopne 0x1a5d3f ; out dx, al ; jmp rbx
0x00000000001a67ce : add byte ptr [rax], al ; loopne 0x1a67d8 ; out dx, eax ; jmp rsi
0x00000000001aa06e : add byte ptr [rax], al ; loopne 0x1aa08b ; call qword ptr [rdx]
0x00000000001bbac8 : add byte ptr [rax], al ; loopne 0x1bbadb ; ret 0xb
0x00000000001bbb20 : add byte ptr [rax], al ; loopne 0x1bbb32 ; ret 0xa
0x00000000001ac1ea : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x000000000019c8ea : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00000000001acbea : add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x000000000019dfea : add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00000000001adfea : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adff0 ; call qword ptr [rsi]
0x000000000019edea : add byte ptr [rax], al ; mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001af9ea : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019fbea : add byte ptr [rax], al ; mov ah, 0x4c ; add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00000000001afbea : add byte ptr [rax], al ; mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000196a2e : add byte ptr [rax], al ; mov ah, 0xa0 ; in eax, dx ; jmp rsp
0x0000000000196bce : add byte ptr [rax], al ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00000000001a8ede : add byte ptr [rax], al ; mov al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001a944e : add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00000000001a4a5e : add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x000000000018749e : add byte ptr [rax], al ; mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x000000000016a3fe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000001660ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a5ef6 : add byte ptr [rax], al ; mov bh, bh ; stc ; call qword ptr [rax]
0x000000000016809e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d4d2e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009de0e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a677e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a517e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a614e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000001a5846 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00000000000a5e4e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000072b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001680de : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001680fe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001680ee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000001680ce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f538e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a616e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009de3e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a618e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a619e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a617e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000055765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012cd8e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012cd7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000012cdae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012cd9e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f5c14 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c9220 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a518e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000086bee : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000cc68e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000cc6ae : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000cc69e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000cc6be : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000cc8ce : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000ccda9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000bb7be : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x0000000000106bfe : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000cce6e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011899a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003548c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012a45e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012d4ae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001053da : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000016d7ee : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012ccdc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013b56e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d665e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f537e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007742e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000773fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000007302e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003687e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38c802] ; ret
0x000000000006f7d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000002122c : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010c3cb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000054e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000218a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000115e1f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115ff8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000071035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000013243a : add byte ptr [rax], al ; mov ebp, eax ; call 0x12e716
0x00000000001969c6 : add byte ptr [rax], al ; mov ebp, gs ; jmp rsp
0x00000000000a51be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001aa1c2 : add byte ptr [rax], al ; mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x0000000000117aad : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7a
0x000000000015a50e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a51ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00000000000711f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x0000000000071386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x0000000000075be1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x0000000000076531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x0000000000075511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000102aa4 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001ad5f2 : add byte ptr [rax], al ; mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019cbf2 : add byte ptr [rax], al ; mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00000000001a96f2 : add byte ptr [rax], al ; mov esp, 0x280000e7 ; out dx, eax ; int1 ; jmp rcx
0x00000000001ad2f2 : add byte ptr [rax], al ; mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001b05f2 : add byte ptr [rax], al ; mov esp, 0x48000156 ; jnp 0x1b05f9 ; jmp qword ptr [rcx]
0x00000000001a31f2 : add byte ptr [rax], al ; mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00000000001ae1f2 : add byte ptr [rax], al ; mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001afdf2 : add byte ptr [rax], al ; mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b4af2 : add byte ptr [rax], al ; mov esp, 0xd800019b ; ret
0x00000000001b1ef2 : add byte ptr [rax], al ; mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000004d64b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000113b10 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000142a03 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001429bb : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000142c2e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000088b20 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016811e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000016813e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000016814e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000016815e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000016816e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000016817e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016818e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000016812e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000016810e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009411e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013b92a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a61ae : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a61ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a61ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a61fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a620e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a621e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a61de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a61be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000762dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000013173b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012cd1c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f52ac : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012ccec : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011876e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000e35cb : add byte ptr [rax], al ; mov qword ptr [rsp + 0x18], rdx ; call 0x1f8a9
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x000000000003a5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013767b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000353e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ab3be : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000ab3ce : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ab3de : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ab3ee : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ab3fe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ab40e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ab41e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000746b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000113de6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000105676 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000003a720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c7c9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140331 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x000000000013fd1e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x000000000007cb0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347a09] ; ret
0x0000000000021a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x0000000000021a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x00000000000fd25d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007df34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006dc05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102566 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006abcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007cb3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001404aa : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000083ff4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000001735de : add byte ptr [rax], al ; mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8b0
0x00000000000eb744 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x0000000000072fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x0000000000102c96 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f6d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000102b62 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000102ada : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000102acb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012d75b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000102f20 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000136795 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006cb46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000087553 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x0000000000139d8e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a51ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000087040 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000d8c29 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c3e
0x000000000007d9c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x000000000005be56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367111] ; call rax
0x000000000005b800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367767] ; call rax
0x0000000000050048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x000000000004d3cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x000000000008814e : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000872b0 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086e22 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000087fc4 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000019c3c2 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00000000001ac2c2 : add byte ptr [rax], al ; mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00000000001b00c2 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ae3c2 : add byte ptr [rax], al ; mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001680be : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001680ae : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001b1ec2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000a615e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009deae : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009de1e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003b2dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000e012e : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0118
0x00000000000a622e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a623e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000196de6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00000000001ad2da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001aa0da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa100 ; jmp qword ptr [rcx]
0x0000000000195eae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00000000001a9dda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00000000001b05da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001a7ada : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x000000000006c94a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000047c8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000007a61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015a69e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015ad7e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015ad0e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001a4cbe : add byte ptr [rax], al ; nop ; add esi, ebp ; call qword ptr [rsi]
0x00000000001a52ae : add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00000000001a40af : add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x00000000001a2c5e : add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000001187ad : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019fe5e : add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe68
0x000000000002058d : add byte ptr [rax], al ; nop ; ret
0x000000000013b179 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000132b7a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013b72b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000019e57e : add byte ptr [rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00000000001ad542 : add byte ptr [rax], al ; or al, 0x26 ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00000000001ade42 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001ae142 : add byte ptr [rax], al ; or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00000000001a3842 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00000000001a5842 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00000000001a7642 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001a8e42 : add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00000000001aa542 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001bb342 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001a9bb6 : add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00000000001a84e6 : add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000001a1ec6 : add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000035d62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000000fba08 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x000000000019e63e : add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x0000000000106964 : add byte ptr [rax], al ; or eax, edi ; ret
0x00000000001bc606 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000001b1e7a : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x0000000000034e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000019d966 : add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x000000000019ff96 : add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x0000000000106827 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001a0886 : add byte ptr [rax], al ; pop rax ; shr ah, 1 ; jmp rbx
0x00000000001a8d4f : add byte ptr [rax], al ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x0000000000054ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000108a3a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a0a7a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00000000000aa08a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047a0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001161a5 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000052c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006fc80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000cc867 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029daa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000093834 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000019372e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001968b6 : add byte ptr [rax], al ; pop rcx ; in eax, dx ; jmp rsp
0x000000000019ff16 : add byte ptr [rax], al ; pop rdi ; jmp 0x19ff20
0x00000000001a3092 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00000000001b8992 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00000000001b1e92 : add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019ff92 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00000000001b0592 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb20
0x000000000019d992 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00000000001ae392 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b4c7a : add byte ptr [rax], al ; popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00000000001970ee : add byte ptr [rax], al ; push 0xee ; jmp rsp
0x00000000001a5c2e : add byte ptr [rax], al ; push rax ; jle 0x1a5c26 ; jmp qword ptr [rcx]
0x000000000019b5fe : add byte ptr [rax], al ; push rax ; jnp 0x19b605 ; jmp qword ptr [rdx]
0x0000000000193ab4 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000114dde : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b007a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0182 : add byte ptr [rax], al ; push rdx ; add dword ptr [rax], eax ; js 0x1b0206 ; cmc ; jmp qword ptr [rcx]
0x00000000001b057a : add byte ptr [rax], al ; push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001a188a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00000000001a208a : add byte ptr [rax], al ; push rsp ; jno 0x1a2098 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00000000001a698a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x00000000001b1d8a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019744e : add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00000000001ab3d2 : add byte ptr [rax], al ; pushfq ; add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00000000001aedd2 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001afbd2 : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; call 0x221af152
0x00000000001b89d2 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00000000001b53d2 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x0000000000019ee6 : add byte ptr [rax], al ; pushfq ; ret
0x00000000001a0a7e : add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000175a06 : add byte ptr [rax], al ; ret 0
0x000000000017c97e : add byte ptr [rax], al ; ret 0x10
0x000000000000e45e : add byte ptr [rax], al ; ret 0x16
0x000000000001e60e : add byte ptr [rax], al ; ret 0x18bb
0x000000000001b386 : add byte ptr [rax], al ; ret 0x18e7
0x000000000017e64e : add byte ptr [rax], al ; ret 0x1d4
0x000000000017ede6 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fee : add byte ptr [rax], al ; ret 0x23
0x000000000017d656 : add byte ptr [rax], al ; ret 0x24
0x0000000000005ec6 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8e : add byte ptr [rax], al ; ret 0x30
0x000000000000d7b6 : add byte ptr [rax], al ; ret 0x31
0x000000000017db46 : add byte ptr [rax], al ; ret 0x33
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000b326 : add byte ptr [rax], al ; ret 0x4f
0x0000000000008656 : add byte ptr [rax], al ; ret 0x53
0x000000000000b536 : add byte ptr [rax], al ; ret 0x56
0x000000000017c17e : add byte ptr [rax], al ; ret 0xa
0x000000000017c57e : add byte ptr [rax], al ; ret 0xd
0x000000000019dfee : add byte ptr [rax], al ; ret 0xffe9
0x000000000001f6ba : add byte ptr [rax], al ; ret 1
0x000000000017fc22 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000007606 : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x000000000000dd9e : add byte ptr [rax], al ; ret 6
0x0000000000180622 : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x0000000000180a22 : add byte ptr [rax], al ; ret 9
0x00000000001a7a7a : add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x000000000018001e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a417e : add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00000000001a465e : add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a707a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x000000000017c426 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000001a6a1e : add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x000000000018738e : add byte ptr [rax], al ; sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00000000001ad652 : add byte ptr [rax], al ; sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad60b ; hlt ; jmp qword ptr [rcx]
0x00000000001afe52 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0152 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1f52 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a7152 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b8f
0x00000000001a8d66 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000019cfb6 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00000000001aa516 : add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001a0766 : add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00000000001a5d7a : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d13 ; out dx, al ; call qword ptr [rsi]
0x00000000001a707e : add byte ptr [rax], al ; shl bl, 1 ; out dx, eax ; call rsp
0x00000000001aa40e : add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001a530e : add byte ptr [rax], al ; shr byte ptr [rcx], 0xee ; jmp qword ptr [rdi]
0x00000000000f5216 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001ac162 : add byte ptr [rax], al ; sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x000000000019d962 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00000000001aec62 : add byte ptr [rax], al ; sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001a0762 : add byte ptr [rax], al ; sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00000000001a8d62 : add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000001aa686 : add byte ptr [rax], al ; sub al, 0xf2 ; jmp rcx
0x000000000019b062 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; call 0x111998ce
0x00000000001bb462 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00000000001a96f6 : add byte ptr [rax], al ; sub bh, ch ; int1 ; jmp rcx
0x000000000016e5ac : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000fc140 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a716f : add byte ptr [rax], al ; sub edi, edx ; call qword ptr [rdi]
0x0000000000034efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000007c016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008a791 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fcf35 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000000f5d2b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001144d5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bb7c3 : add byte ptr [rax], al ; syscall ; ret
0x00000000001a5782 : add byte ptr [rax], al ; test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a2b26 : add byte ptr [rax], al ; test al, 0x48 ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3096 : add byte ptr [rax], al ; test al, 0x52 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a5b26 : add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6226 : add byte ptr [rax], al ; test al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00000000001a9436 : add byte ptr [rax], al ; test al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00000000001a9406 : add byte ptr [rax], al ; test al, 0xe8 ; int1 ; jmp qword ptr [rdi]
0x00000000001ad5df : add byte ptr [rax], al ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019b736 : add byte ptr [rax], al ; test bpl, al ; call qword ptr [rax]
0x000000000019b74e : add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00000000001a4cba : add byte ptr [rax], al ; test byte ptr [rbp + 0x1900000], bl ; out dx, al ; call qword ptr [rsi]
0x000000000019faba : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax + 0x32], al ; jmp 0x19facc
0x00000000001af9ba : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001ab1ba : add byte ptr [rax], al ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00000000001b1dba : add byte ptr [rax], al ; test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001aedba : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001acdba : add byte ptr [rax], al ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd5b ; hlt ; call qword ptr [rcx]
0x00000000001a587a : add byte ptr [rax], al ; test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x000000000012cc3f : add byte ptr [rax], al ; test eax, eax ; je 0x12cc58 ; xor eax, eax ; ret
0x00000000000ae023 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae041
0x00000000000b0944 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb0961
0x00000000000b30fb : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3121
0x000000000006b456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00000000001aa682 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x0000000000114c7d : add byte ptr [rax], al ; test rax, rax ; je 0x114cb7 ; call rax
0x0000000000138332 : add byte ptr [rax], al ; test rax, rax ; jne 0x138328 ; pop rbx ; ret
0x00000000001a417a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x0000000000195a82 : add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x0000000000196206 : add byte ptr [rax], al ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x000000000019c0ca : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d9 ; jmp qword ptr [rdi]
0x0000000000196146 : add byte ptr [rax], al ; xchg eax, esp ; add al, 0xea ; call rsp
0x00000000001afeca : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff4a ; cmc ; jmp qword ptr [rcx]
0x0000000000195d3e : add byte ptr [rax], al ; xchg eax, esp ; jg 0x195d31 ; jmp rsp
0x00000000001a67ca : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x0000000000019ece : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000001a71ca : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000196e0e : add byte ptr [rax], al ; xchg eax, esp ; sbb esi, ebp ; call rsp
0x00000000001ad66a : add byte ptr [rax], al ; xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019e66a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00000000001a84e2 : add byte ptr [rax], al ; xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000001a716a : add byte ptr [rax], al ; xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00000000001a886a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00000000001aa06a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa08f ; call qword ptr [rdx]
0x00000000001ba26a : add byte ptr [rax], al ; xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00000000001bb76a : add byte ptr [rax], al ; xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x000000000019fabe : add byte ptr [rax], al ; xor bpl, bl ; call qword ptr [rcx]
0x00000000000fb7da : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001aa52e : add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001a9dde : add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00000000001a208e : add byte ptr [rax], al ; xor byte ptr [rsi], ah ; in eax, dx ; call rdx
0x00000000000a8ffe : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000011def6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143216 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bac5c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012d54e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012d506 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003a26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7515 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039ee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039f06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x000000000003afbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000008cc01 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000004d39b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000102a16 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000102a3b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000102a5f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000102a7f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000029a70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008df2d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001b1e37 : add byte ptr [rax], bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b8997 : add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00000000001ae397 : add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001afc37 : add byte ptr [rax], bh ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001adf37 : add byte ptr [rax], bh ; loop 0x1adf33 ; jmp qword ptr [rcx]
0x00000000001ae1a7 : add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001afd37 : add byte ptr [rax], bh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afe57 : add byte ptr [rax], bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001aa607 : add byte ptr [rax], bh ; sub dh, dl ; jmp qword ptr [rdi]
0x00000000001ae917 : add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001aa517 : add byte ptr [rax], bl ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001ab3d7 : add byte ptr [rax], bl ; call rcx
0x000000000019cc27 : add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00000000001afc07 : add byte ptr [rax], bl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a5e67 : add byte ptr [rax], bl ; mov gs, esi ; call qword ptr [rcx]
0x00000000001a8d67 : add byte ptr [rax], bl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00000000001a5fe7 : add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b15d7 : add byte ptr [rax], bl ; ret 0xfff5
0x00000000001ad5f7 : add byte ptr [rax], bl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019d807 : add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00000000001acee7 : add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a8627 : add byte ptr [rax], bl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001b2047 : add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019cbf7 : add byte ptr [rax], ch ; cmp ch, cl ; call qword ptr [rax]
0x00000000001b0157 : add byte ptr [rax], ch ; jae 0x1b0154 ; call qword ptr [rsi]
0x00000000001aff17 : add byte ptr [rax], ch ; jo 0x1aff14 ; jmp qword ptr [rcx]
0x00000000001a6fa7 : add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000001a96f7 : add byte ptr [rax], ch ; out dx, eax ; int1 ; jmp rcx
0x00000000001a0437 : add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001ad2f7 : add byte ptr [rax], ch ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001b0847 : add byte ptr [rax], ch ; xchg ebp, esi ; jmp rax
0x0000000000093874 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93881 ; ret
0x00000000001a9bb7 : add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00000000001b1e07 : add byte ptr [rax], cl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ac2c7 : add byte ptr [rax], cl ; fcomi st(3) ; call qword ptr [rdi]
0x00000000001afae7 : add byte ptr [rax], cl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b58a7 : add byte ptr [rax], cl ; loop 0x1b58aa ; call rsi
0x000000000002dd74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001afe27 : add byte ptr [rax], cl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b6e97 : add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x00000000001a84e7 : add byte ptr [rax], cl ; sbb al, 0xf1 ; jmp qword ptr [rcx]
0x00000000001a1ec7 : add byte ptr [rax], cl ; sbb ebp, ebp ; jmp qword ptr [rax]
0x00000000001ad017 : add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00000000001a6f77 : add byte ptr [rax], cl ; xchg eax, esp ; sti ; call qword ptr [rax]
0x00000000001aa52f : add byte ptr [rax], dh ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001a208f : add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00000000000a8fff : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b05df : add byte ptr [rax], dh ; jnp 0x1b05dc ; jmp qword ptr [rcx]
0x00000000001a9ddf : add byte ptr [rax], dh ; or dh, dl ; call rsi
0x000000000000c4e7 : add byte ptr [rax], dh ; ret
0x00000000001ad60f : add byte ptr [rax], dh ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001aceff : add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019420f : add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x0000000000114b40 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ad25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ad33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001b202f : add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001965af : add byte ptr [rax], dl ; jmp 0x1965b7
0x000000000019c0cf : add byte ptr [rax], dl ; jno 0x19c0d4 ; jmp qword ptr [rdi]
0x00000000001afeff : add byte ptr [rax], dl ; jo 0x1afefc ; jmp qword ptr [rcx]
0x000000000002de54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001ae84f : add byte ptr [rax], dl ; push rsp ; call rsi
0x00000000001bacef : add byte ptr [rax], dl ; push rsp ; clc ; call qword ptr [rax]
0x000000000001824f : add byte ptr [rax], dl ; ret
0x00000000001ad2df : add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ba57f : add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x000000000019fb0f : add byte ptr [rax], dl ; xor ebp, ebx ; jmp qword ptr [rsi]
0x000000000019fbed : add byte ptr [rax], r8b ; adc byte ptr [rax - 0x15], dl ; call rdi
0x0000000000074696 : add byte ptr [rax], r8b ; cmp eax, 0xff ; jne 0x746a9 ; pop rbx ; ret
0x00000000000350d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000d4d2d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009de0d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009de3d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000086bed : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x0000000000087afd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cde85 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000013833d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007302d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000070155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000a51ad : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x000000000009411d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000011876d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000113de5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000105675 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a641d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a51ed : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000012b99d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000045a35 : add byte ptr [rax], r8b ; ret
0x0000000000143215 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003a7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039f05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000ab0bd : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000142bb7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000004a59f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x0000000000142a7c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000b9267 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x000000000011213d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000053993 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x0000000000029a71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c256d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094383 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000114ddf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000b92bb : add byte ptr [rbp + 0x390a74db], al ; ret
0x0000000000101a8a : add byte ptr [rbp + 0x395374c0], al ; ret
0x0000000000080d5e : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x0000000000080ed6 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008cc7e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006acbe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000001231f3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x000000000010b56b : add byte ptr [rbp + 0xa], dh ; jmp 0x10b599
0x000000000011b081 : add byte ptr [rbp + 0xa], dh ; jmp 0x11b0b0
0x0000000000136583 : add byte ptr [rbp + 0xa], dh ; jmp 0x1365b1
0x0000000000085952 : add byte ptr [rbp + 0xa], dh ; jmp 0x85980
0x000000000011b0d9 : add byte ptr [rbp + 0xb], dh ; jmp 0x11b10a
0x00000000000ffbe1 : add byte ptr [rbp + 0xb], dh ; jmp 0xffc11
0x0000000000048aef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000489df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000003a6ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000142b44 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001985bf : add byte ptr [rbp + rax - 0xa], dh ; call rsp
0x0000000000195c4f : add byte ptr [rbp + rbp - 0x17], dl ; call rsp
0x0000000000198017 : add byte ptr [rbp + rbp*2 - 0xd], ah ; call rsp
0x000000000019939f : add byte ptr [rbp + rbp*2 - 9], al ; call rsp
0x0000000000195f97 : add byte ptr [rbp + rbp*8 - 0x17], dl ; call rsp
0x00000000001968df : add byte ptr [rbp + rbx*2 - 0x13], dh ; jmp rsp
0x00000000001a4cbb : add byte ptr [rbp + rbx*4 + 0x1900000], al ; out dx, al ; call qword ptr [rsi]
0x0000000000195a87 : add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x000000000017c577 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000000801ff : add byte ptr [rbp + rcx*4 + 0x2d], cl ; push rcx ; add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00000000000751a1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012bf92 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000750be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012c379 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d716 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00000000001a2cab : add byte ptr [rbp + rdi*2], dh ; add al, dh ; in eax, dx ; jmp rsi
0x00000000001baceb : add byte ptr [rbp + rdi*8 + 0x54100001], dh ; clc ; call qword ptr [rax]
0x00000000001996cf : add byte ptr [rbp + rdi*8 - 9], dl ; jmp rsp
0x000000000019932f : add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00000000001aa49b : add byte ptr [rbp + rsi*8], ah ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001aa483 : add byte ptr [rbp + rsi*8], cl ; add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001a7a20 : add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x0000000000173734 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000ae024 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xae040
0x00000000000b0945 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb0960
0x00000000000b30fc : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3120
0x00000000000ccfef : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000ccde0 : add byte ptr [rbp - 0x38], dh ; ret
0x000000000017c823 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000ccf52 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00000000000a9d33 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x000000000019526c : add byte ptr [rbp - 0x7b6f0004], al ; cld ; jmp qword ptr [rax]
0x00000000000e2d8c : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c37e2 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000039957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000024ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x000000000009e25b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000005beff : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000da655 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d514f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000121d9e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x0000000000047057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000001afbf0 : add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000084c65 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000035305 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000006b457 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000001a8d50 : add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x0000000000194d80 : add byte ptr [rbp - 4], bl ; call qword ptr [rax + 0x20fffc5c]
0x0000000000199f9f : add byte ptr [rbp - 7], dh ; call rsp
0x0000000000199a87 : add byte ptr [rbp - 8], ah ; jmp rsp
0x00000000001460f9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000001300c9 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x000000000007742f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000aa08b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000074698 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000093835 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000080ec7 : add byte ptr [rbx + 0x342c5615], cl ; add dh, dh ; ret 0xf02
0x000000000007cba7 : add byte ptr [rbx + 0x348bb505], al ; add byte ptr [rcx], al ; ret
0x00000000000cc868 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000052c8d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a51bf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000016a43f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016d7ef : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a75df : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000009e2bc : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000006fc81 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000085c87 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000015a50f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000d5040 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x00000000000840f7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000202e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029dab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077f0f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000a58a9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001acc4b : add byte ptr [rbx + 0x66b00001], dl ; stc ; call qword ptr [rax]
0x00000000000f537f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00000000000773ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000ac068 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000001a5290 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000000e511c : add byte ptr [rbx + 0xf4801e1], al ; ret
0x000000000003a9ff : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001bc49b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000019a3df : add byte ptr [rbx + rax - 6], al ; call rsp
0x000000000016fc9a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000197b7f : add byte ptr [rbx + rax*2 - 0xe], dh ; call rsp
0x000000000019aa5f : add byte ptr [rbx + rax*8], ah ; cli ; jmp rsp
0x0000000000112334 : add byte ptr [rbx + rbp], cl ; add byte ptr [rax + 0xf], cl ; ret
0x00000000001a4a5b : add byte ptr [rbx + rbx*4], ah ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x0000000000199d07 : add byte ptr [rbx + rbx*8], dh ; clc ; call rsp
0x000000000010bdaa : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006fdc2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001abac3 : add byte ptr [rbx + rcx - 0x7847ffff], cl ; call qword ptr [rsi]
0x0000000000113e5a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x000000000019fabb : add byte ptr [rbx + rcx*2 + 0x32400000], al ; jmp 0x19facb
0x00000000001afae3 : add byte ptr [rbx + rcx*2 + 0x6c080001], ch ; cmc ; jmp qword ptr [rcx]
0x000000000004a007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000048427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001a7a4b : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x000000000019a3c7 : add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00000000001976c7 : add byte ptr [rbx + rdi*8], dh ; out dx, eax ; call rsp
0x00000000001ac2c3 : add byte ptr [rbx + rdx - 0x24f7ffff], cl ; call qword ptr [rdi]
0x000000000019a6df : add byte ptr [rbx + rdx*2 - 6], al ; call rsp
0x00000000001ac24b : add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001ae2cb : add byte ptr [rbx + rsi - 0x16ffffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019acc7 : add byte ptr [rbx + rsi*2], dh ; sti ; call rsp
0x00000000001ba2b3 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00000000001ba26b : add byte ptr [rbx + rsi*8], dh ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x000000000005a37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000000cc647 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcc661 ; ret
0x000000000007462f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aa10f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000aa108 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000aa101 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000aa0fa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000aa0f3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000aa0ec : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000001053db : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000127b86 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x127b98 ; ret
0x000000000011459f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1145b9 ; ret
0x000000000005721e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00000000000a9e49 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000000a9e34 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00000000001ad2f3 : add byte ptr [rbx - 0x64d7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ad2db : add byte ptr [rbx - 0x64efffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ad2c3 : add byte ptr [rbx - 0x6507ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000003a724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010eabd : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000000b8eeb : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000b8ac1 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x000000000002b769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000000e6a25 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000047a10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002076f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000057d38 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00000000000e081f : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x0000000000073e94 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000171356 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000006ce34 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000013ba1f : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000d0c37 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00000000000d6187 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e0c0f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000d7660 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000000e8bdf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000100e4f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000114f7f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000072fd6 : add byte ptr [rbx - 0xd], bl ; ret
0x00000000001249d4 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x00000000001bc603 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x0000000000194a58 : add byte ptr [rbx], ch ; cld ; jmp rax
0x00000000001a7170 : add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00000000001994d7 : add byte ptr [rbx], dh ; idiv edi ; ret 1
0x0000000000055766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000b4bc8 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x000000000002c2bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000bcba8 : add byte ptr [rcx + 0x308f090d], cl ; add byte ptr [rcx + 1], cl ; ret
0x00000000001680ff : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000008ae7f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000012ef5b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000003ce6a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046078 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000008e976 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005b773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f68be : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f7d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000701e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000115e20 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000001680df : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a618f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007ba06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000e9ab6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x000000000010134a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000075512 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x0000000000072b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000001504fe : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000009dd16 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000047c90 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000016d85c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5038 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000019528c : add byte ptr [rcx + 0x7720fffc], 0xfc ; jmp rax
0x000000000002df1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000034c57 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c52 ; ret
0x00000000000fef3f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c3de2 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00000000001022b5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000e2eb7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00000000000d3a18 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000056804 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056787 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005e59b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000809a4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000362c9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000a9d52 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc20 : add byte ptr [rcx + 0xf], cl ; ret
0x00000000000e4027 : add byte ptr [rcx + 1], al ; ret
0x00000000000a97df : add byte ptr [rcx + 1], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001bc133 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000084998 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000019755f : add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00000000001a707b : add byte ptr [rcx + rax*8], al ; add al, dl ; jrcxz 0x1a707a ; call rsp
0x000000000019b063 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; call 0x111998cd
0x0000000000199aaf : add byte ptr [rcx + rbp*2], dh ; clc ; call rsp
0x00000000001a188b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00000000001b58a3 : add byte ptr [rcx + rbp*4 + 1], ch ; add byte ptr [rax], cl ; loop 0x1b58ae ; call rsi
0x00000000001a587b : add byte ptr [rcx + rbp*4], al ; add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00000000001a5843 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x000000000019a557 : add byte ptr [rcx + rbp], dl ; cli ; jmp rsp
0x000000000019a477 : add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00000000001968b7 : add byte ptr [rcx + rbx*2 - 0x13], al ; jmp rsp
0x000000000019643f : add byte ptr [rcx + rbx*2 - 0x16], ah ; call rsp
0x0000000000199ccf : add byte ptr [rcx + rbx*8 - 8], al ; call rsp
0x00000000001a886b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x0000000000070fec : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x00000000001999e7 : add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00000000001377e1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000c9221 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c92eb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000e3ba3 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000008102f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x000000000009411f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002f6d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000102b63 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000102c97 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008814f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000872b1 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087041 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000d8c2a : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8c3d
0x000000000009e182 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x0000000000071036 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df35 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000086e23 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000102acc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001374ad : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000080f45 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000102adb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000012bde1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012c928 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001a3843 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00000000000833d8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x833a7 ; ret
0x00000000001ae84b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x000000000019c0cb : add byte ptr [rcx + rdx + 0x71100000], dl ; std ; jmp qword ptr [rdi]
0x0000000000198ef7 : add byte ptr [rcx + rdx - 9], dl ; jmp rsp
0x00000000001b00c3 : add byte ptr [rcx + rdx*2 + 0x72680001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b007b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], ah ; jb 0x1b0080 ; jmp qword ptr [rcx]
0x00000000001b00ab : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a40ab : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x000000000019827f : add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x000000000019a2a7 : add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00000000001a8073 : add byte ptr [rcx + rdx*8], bh ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x000000000019c07b : add byte ptr [rcx + rdx], al ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00000000001b205b : add byte ptr [rcx + rsi*2], ah ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2073 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a208b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00000000001aa0db : add byte ptr [rcx + rsi*8 + 0x15700000], ah ; jmp qword ptr [rcx]
0x0000000000195fe7 : add byte ptr [rcx + rsi*8 - 0x17], al ; call rsp
0x00000000001aa06b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; loopne 0x1aa08e ; call qword ptr [rdx]
0x000000000019e0b3 : add byte ptr [rcx + rsi], bh ; add al, bh ; ret
0x00000000000864a3 : add byte ptr [rcx - 0x173fce16], cl ; ret
0x000000000000247b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000004242b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000003f4d3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x000000000003c213 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00000000000aca19 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000fe748 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000f538f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000040f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b209a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000032964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000026e53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000026e70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000005e790 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000001025cf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001735df : add byte ptr [rcx - 0x75], cl ; jge 0x17365b ; call 0x1f8af
0x00000000000f189a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045f94 : add byte ptr [rcx - 0x75], cl ; ret
0x00000000001180f7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000009de3f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000d1623 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000dd214 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000047d69 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000dd1c9 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000ce958 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xce97b ; call 0x8ab78
0x0000000000059781 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000662b7 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000081317 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000005aef6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000118cab : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000006f777 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000074f13 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000000e2706 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x0000000000064326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000b5066 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000d0f17 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000005133e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000022d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000943f1 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000ed5f5 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000000000006657b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00000000000e0ea6 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000022cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d47a2 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000010f53f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x000000000014426f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000857e0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000000892ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000003af9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000bccbf : add byte ptr [rcx - 0x7f], cl ; ret
0x00000000000f3cb0 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f3c2f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000012a00f : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026556 : add byte ptr [rcx - 0xa], al ; ret
0x0000000000120ad7 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x00000000000802a3 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010f753 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000000cc64a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000019372f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000194f90 : add byte ptr [rcx - 4], dl ; jmp qword ptr [rax + 0x20fffc58]
0x00000000001998a7 : add byte ptr [rcx - 8], al ; jmp rsp
0x000000000008e062 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008e088 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001b3005 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000189feb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000878d3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000002e0e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000136a81 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008db91 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008a78f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000019832f : add byte ptr [rcx], al ; cmc ; jmp rsp
0x00000000001197e0 : add byte ptr [rcx], al ; jmp 0x1195ab
0x0000000000119ba0 : add byte ptr [rcx], al ; jmp 0x11997b
0x000000000002de34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000013b55f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007cbad : add byte ptr [rcx], al ; ret
0x00000000000d9e77 : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000db60a : add byte ptr [rcx], al ; ret 0xc083
0x00000000000ddd0e : add byte ptr [rcx], al ; ret 0xda39
0x00000000000d4fb7 : add byte ptr [rcx], al ; setg dl ; jmp 0xd4f44
0x00000000000b9247 : add byte ptr [rcx], bh ; ret
0x00000000000368a0 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000d3a1d : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000da664 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000dfbe7 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000da4fd : add byte ptr [rcx], bh ; ret 0x947c
0x0000000000194280 : add byte ptr [rcx], bl ; sti ; push rax ; sbb ebx, edi ; jmp rax
0x00000000001bc16b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000110017 : add byte ptr [rcx], ch ; clc ; ret
0x000000000008ce46 : add byte ptr [rcx], ch ; ret
0x00000000000c1cc1 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bcb26 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000c5433 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c364f : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c1c84 : add byte ptr [rcx], ch ; ret 0xbe0f
0x0000000000149c3d : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000034efe : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c5b7f : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c18b0 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c53a3 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fc141 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000118831 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000106965 : add byte ptr [rcx], cl ; clc ; ret
0x0000000000079d2a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000000dfb4f : add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000064122 : add byte ptr [rcx], dh ; div dh ; ret
0x0000000000034a6f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x0000000000136ed8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000ba9b7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002df2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000003bf27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000007a38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x000000000003a08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008cc02 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000024c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x000000000002426e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000fa0d3 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00000000001aec63 : add byte ptr [rdi + 0x1c480001], ch ; cmc ; call qword ptr [rdx]
0x000000000015835a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000ab0b4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000171d44 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000019619f : add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00000000001966a7 : add byte ptr [rdi + rax*2 - 0x15], ah ; jmp rsp
0x000000000019a0cf : add byte ptr [rdi + rax*4 - 7], al ; call rsp
0x0000000000196baf : add byte ptr [rdi + rax*8 - 0x13], al ; call rsp
0x00000000001a7643 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001b1ef3 : add byte ptr [rdi + rbp*2 + 0x18f80001], bh ; stc ; jmp qword ptr [rsi]
0x00000000001b1ec3 : add byte ptr [rdi + rbp*2 + 0x18f80001], cl ; stc ; jmp qword ptr [rsi]
0x00000000001b1e4b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a5ef3 : add byte ptr [rdi + rbp*4 - 0x780000], bh ; stc ; call qword ptr [rax]
0x00000000001ade5b : add byte ptr [rdi + rbp], ah ; add dword ptr [rax], eax ; jo 0x1ade49 ; hlt ; jmp qword ptr [rcx]
0x00000000001ade73 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00000000001ade43 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001acee3 : add byte ptr [rdi + rbx - 0x6ce7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a8ec3 : add byte ptr [rdi + rbx*8 - 0x6a480000], cl ; int1 ; call qword ptr [rax]
0x00000000001a8edb : add byte ptr [rdi + rbx*8 - 0x6a500000], ah ; int1 ; call qword ptr [rax]
0x000000000019aeaf : add byte ptr [rdi + rbx*8 - 3], al ; call rsp
0x00000000001a8e43 : add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x0000000000053f6a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000052ef3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000001189a7 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x000000000019977f : add byte ptr [rdi + rcx - 8], dh ; jmp rsp
0x00000000001afecb : add byte ptr [rdi + rcx*2 + 0x6fe00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001afee3 : add byte ptr [rdi + rcx*2 + 0x6ff80001], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019fe5b : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6b
0x00000000001afe3b : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afe53 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000002dd34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000001b6e93 : add byte ptr [rdi + rdi*4 + 1], bl ; add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x000000000019aa3f : add byte ptr [rdi + rdi*4 - 6], dl ; jmp rsp
0x00000000001aee4b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00000000001a465b : add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x000000000019ada7 : add byte ptr [rdi + rsi*2 - 3], al ; call rsp
0x000000000019691f : add byte ptr [rdi + rsi*2], al ; in eax, dx ; jmp rsp
0x000000000019a1d7 : add byte ptr [rdi + rsi*4 - 7], al ; call rsp
0x0000000000198daf : add byte ptr [rdi + rsi*8 - 0xa], dl ; call rsp
0x00000000001aa683 : add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax + 0x2c], cl ; jmp rcx
0x000000000019e63b : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x000000000019e66b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00000000001a96f3 : add byte ptr [rdi - 0x10d80000], bh ; int1 ; jmp rcx
0x00000000000ccfc8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001959c0 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00000000000e764a : add byte ptr [rdi - 0xa], dh ; ret
0x0000000000197a9f : add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00000000001a2c5b : add byte ptr [rdi*2 + 0x4b900000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bca34 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000034dd0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001ad653 : add byte ptr [rdi], bl ; add dword ptr [rax], eax ; js 0x1ad60a ; hlt ; jmp qword ptr [rcx]
0x0000000000194a40 : add byte ptr [rdi], ch ; cld ; call rax
0x0000000000114dc7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x0000000000159cd6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000a9fe7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015ad0f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000107e81 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001099d4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x109965 ; loopne 0x1099e5 ; ret
0x000000000002decd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x000000000015ad7f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000cdfd7 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000012821f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d0d3f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce27 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008a58f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000abf50 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000007a61f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000016d86f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e10f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009e53f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009e54f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009e52f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009e08f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009df4f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000095b5f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008df9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008df8f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008df7f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000034bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000c4736 : add byte ptr [rdi], cl ; ret
0x00000000000c4a50 : add byte ptr [rdi], cl ; ret 0x144
0x000000000013c85d : add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bbaf7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a850 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000de57c : add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ae : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000141f6e : add byte ptr [rdi], cl ; ret 0x8941
0x0000000000132ff1 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fac9a : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000ea35a : add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b593e : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d6cc0 : add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c29a1 : add byte ptr [rdi], cl ; ret 0xd801
0x0000000000122d1b : add byte ptr [rdi], cl ; ret 0xf3c3
0x0000000000122cc0 : add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000122cfb : add byte ptr [rdi], cl ; ret 0xff83
0x0000000000034e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000026550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005744b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dfb3d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000bc2f1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000bc25d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000013626b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d8 ; ret
0x0000000000149b87 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3f : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d82ce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00000000001ad66b : add byte ptr [rdi], dh ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001419b9 : add byte ptr [rdx + 0x190], bh ; call 0x2dc48
0x000000000012b8bb : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x0000000000021971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x000000000016a3ff : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000001660cf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a759f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x0000000000021952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00000000000d0ffd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000001ac44b : add byte ptr [rdx + 0xd500001], dl ; hlt ; jmp rcx
0x0000000000009207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcd2f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001323ab : add byte ptr [rdx + 5], bh ; call 0x2e628
0x000000000002189f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000001089c3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001ab1bb : add byte ptr [rdx + rax - 0x1abfffff], al ; call qword ptr [rsi]
0x00000000001a31f3 : add byte ptr [rdx + rax*4 + 0x59680000], bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a7153 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; call 0x281a6b8e
0x00000000001a716b : add byte ptr [rdx + rax*8], dh ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00000000001970ef : add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x0000000000034c5c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00000000001a9983 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax - 7], bh ; int1 ; call rsi
0x000000000019d993 : add byte ptr [rdx + rbp], bl ; add al, bh ; mov cl, ch ; jmp rsp
0x000000000019d963 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00000000001b8993 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x000000000019c94b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00000000001a1ec3 : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x000000000011615b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000960c3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017c177 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000198657 : add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00000000001af9bb : add byte ptr [rdx + rcx*2 + 0x5b200001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001af9eb : add byte ptr [rdx + rcx*2 + 0x5b500001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001af973 : add byte ptr [rdx + rcx*2], bh ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a39a3 : add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001a698b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00000000001ba98b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00000000001ac1a3 : add byte ptr [rdx + rdx + 1], ch ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00000000001ac1eb : add byte ptr [rdx + rdx - 0x25dfffff], dh ; jmp qword ptr [rcx]
0x00000000001ac1d3 : add byte ptr [rdx + rdx - 0x25f7ffff], bl ; jmp qword ptr [rcx]
0x00000000001ac1bb : add byte ptr [rdx + rdx - 0x260fffff], al ; jmp qword ptr [rcx]
0x00000000001b01cb : add byte ptr [rdx + rdx*2 + 0x73f00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b01b3 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, bl ; jae 0x1b01b8 ; jmp qword ptr [rcx]
0x00000000001b0183 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000199f0f : add byte ptr [rdx + rdx*2], ah ; stc ; call rsp
0x00000000001b0153 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x0000000000197bdf : add byte ptr [rdx + rdx*2], dl ; call rsp
0x00000000001a417b : add byte ptr [rdx + rdx*4], al ; add al, al ; add bh, ch ; jmp rsp
0x00000000001975e7 : add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00000000001ac163 : add byte ptr [rdx + rdx], ch ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00000000001ae1a3 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x000000000019744f : add byte ptr [rdx + rsi - 0x11], dl ; call rsp
0x00000000001ae1f3 : add byte ptr [rdx + rsi - 0x1877ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001971a7 : add byte ptr [rdx + rsi*2], al ; out dx, al ; call rsp
0x00000000001aa1c3 : add byte ptr [rdx + rsi*8 + 0x19f80000], cl ; jmp qword ptr [rcx]
0x00000000001aa4a0 : add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000187470 : add byte ptr [rdx + rsi*8], al ; jmp qword ptr [rax]
0x00000000001ae143 : add byte ptr [rdx + rsi], cl ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00000000000bdfb2 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc7
0x000000000010c3d7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010c3d6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x00000000001bb770 : add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x000000000003c2c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000019a4f7 : add byte ptr [rdx], ah ; cli ; call rsp
0x0000000000199e3d : add byte ptr [rdx], al ; add ah, dh ; cmp edi, ecx ; jmp rsp
0x000000000002de86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000127766 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010e2f7 : add byte ptr [rdx], al ; call rax
0x00000000001947d4 : add byte ptr [rdx], al ; cld ; jmp rax
0x000000000002dd94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001adb88 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000000025af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001bc12f : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000001949b4 : add byte ptr [rdx], ch ; cld ; jmp rax
0x000000000010403f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001874b4 : add byte ptr [rip + 0x510fff2], al ; jmp qword ptr [rax]
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x000000000012eefa : add byte ptr [rip - 0x76b40000], al ; ret
0x00000000000cbb41 : add byte ptr [rip - 0xfff], bh ; jae 0xcbb52 ; ret
0x00000000001370d7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149a45 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016db64 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e012f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00000000000e0112 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000034ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000034b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000009e44c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008de94 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000008fc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000102aa5 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000102c92 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000102b5e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000102ad6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000001b95a3 : add byte ptr [rsi + 1], ch ; add al, bh ; push rdi ; call qword ptr [rdx]
0x000000000000699f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ad5ab : add byte ptr [rsi + 1], dh ; add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000102f10 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000102c83 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000102b4f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000102ac7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f5cf7 : add byte ptr [rsi + 6], dh ; ret
0x00000000001018ff : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000001bb5b3 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00000000000ccf0c : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000195e7f : add byte ptr [rsi + rax*4 - 0x17], dh ; jmp rsp
0x000000000019711f : add byte ptr [rsi + rbp*2], ah ; out dx, al ; call rsp
0x00000000001a5d7b : add byte ptr [rsi + rbp*4], al ; add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a5dab : add byte ptr [rsi + rbp*4], dh ; add al, ah ; mov dh, ch ; jmp rbx
0x00000000001a9ddb : add byte ptr [rsi + rbp*8 + 0xa300000], ah ; call rsi
0x000000000019cdd3 : add byte ptr [rsi + rbx + 0x56780000], bl ; jmp 0x1b90e7
0x00000000001acda3 : add byte ptr [rsi + rbx + 1], ch ; add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000001acdbb : add byte ptr [rsi + rbx - 0x6f1fffff], al ; hlt ; call qword ptr [rcx]
0x00000000001b0ddb : add byte ptr [rsi + rbx*2 - 0x5fcfffff], ah ; cmc ; call rdi
0x00000000001a8d63 : add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000001a8d4b : add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000001ba128 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001afdc3 : add byte ptr [rsi + rcx*2 + 0x6ea80001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001afddb : add byte ptr [rsi + rcx*2 + 0x6ec00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001afdf3 : add byte ptr [rsi + rcx*2 + 0x6ed80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001afd4b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a3dab : add byte ptr [rsi + rcx*4], dh ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00000000001aedbb : add byte ptr [rsi + rdi + 0x1f100001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001aedd3 : add byte ptr [rsi + rdi + 0x1f280001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aedeb : add byte ptr [rsi + rdi + 0x1f400001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019edeb : add byte ptr [rsi + rdi + 0x44400000], dh ; cli ; jmp qword ptr [rcx]
0x00000000001a6d4b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001aed5b : add byte ptr [rsi + rdi], ah ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000001b05db : add byte ptr [rsi + rdx*2 + 0x7b300001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f3 : add byte ptr [rsi + rdx*2 + 0x7b480001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b057b : add byte ptr [rsi + rdx*2 + 1], al ; add al, dl ; jp 0x1b0580 ; jmp qword ptr [rcx]
0x00000000001b0593 : add byte ptr [rsi + rdx*2 + 1], bl ; add al, ch ; jp 0x1b0598 ; jmp qword ptr [rcx]
0x000000000019a70f : add byte ptr [rsi + rdx*2], ah ; cli ; jmp rsp
0x00000000001a85f3 : add byte ptr [rsi + rdx*8 + 0x1fb80000], bh ; int1 ; call qword ptr [rsi]
0x0000000000198a57 : add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00000000001ba57b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001aa543 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x000000000019d410 : add byte ptr [rsi - 0x17], bh ; jmp qword ptr [rsi]
0x00000000001ad5f3 : add byte ptr [rsi - 0x57e7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ad5db : add byte ptr [rsi - 0x57ffffff], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003686d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x0000000000199557 : add byte ptr [rsi - 9], dl ; jmp rsp
0x000000000001fb0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019671f : add byte ptr [rsi], al ; jmp 0x196727
0x00000000001942d8 : add byte ptr [rsi], bh ; sti ; call rax
0x00000000001ad543 : add byte ptr [rsi], cl ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x000000000019a857 : add byte ptr [rsi], dh ; cli ; call rsp
0x00000000000fbe42 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001ba270 : add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00000000001b139b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x00000000000f5369 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001ab3d3 : add byte ptr [rsp + rax - 0xfe7ffff], bl ; call rcx
0x00000000001be40f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bb343 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001a9bb3 : add byte ptr [rsp + rbp*8], bh ; add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00000000001acbeb : add byte ptr [rsp + rbx - 0x784fffff], dh ; hlt ; call qword ptr [rax]
0x00000000001005d3 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001afbbb : add byte ptr [rsp + rcx*2 + 0x6cd00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001afbd3 : add byte ptr [rsp + rcx*2 + 0x6ce80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001afbeb : add byte ptr [rsp + rcx*2 + 0x6d000001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001afb8b : add byte ptr [rsp + rcx*2 + 1], dl ; add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001969c7 : add byte ptr [rsp + rcx*4 - 0x13], ah ; jmp rsp
0x00000000001a6b83 : add byte ptr [rsp + rdi*4], cl ; add al, ch ; frndint ; call qword ptr [rax]
0x0000000000195764 : add byte ptr [rsp + rdi*8 - 0x3546f01], ch ; jmp qword ptr [rax]
0x00000000001aabdb : add byte ptr [rsp + rdi*8 - 0x59600000], ah ; call rdi
0x0000000000194fd0 : add byte ptr [rsp + rdi*8], dh ; jmp qword ptr [rax]
0x0000000000196cf7 : add byte ptr [rsp + rdi*8], dl ; in eax, dx ; call rsp
0x000000000019c3c3 : add byte ptr [rsp + rdx + 0x6f680000], cl ; std ; call qword ptr [rcx]
0x00000000001b03e3 : add byte ptr [rsp + rdx*2 + 0x78580001], ch ; cmc ; jmp qword ptr [rbx]
0x0000000000197617 : add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x0000000000196c0f : add byte ptr [rsp + rdx*8], ah ; in eax, dx ; jmp rsp
0x00000000001ae393 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001ae3ab : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae3c3 : add byte ptr [rsp + rsi - 0x1397ffff], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000198a07 : add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x000000000019878f : add byte ptr [rsp - 0xa], dl ; call rsp
0x0000000000197e1f : add byte ptr [rsp - 0xd], dl ; jmp rsp
0x00000000001b53d3 : add byte ptr [rsp - 0xe57ffff], bl ; sti ; call rcx
0x0000000000199507 : add byte ptr [rsp - 9], dh ; push rsp ; ret 1
0x0000000000055ce8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019eded : add byte ptr ds:[rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001018fe : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x000000000003613a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007a360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070983 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005c4f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000136794 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000019e57d : add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x0000000000194760 : add ch, 0xfb ; call rax
0x00000000000dd70a : add ch, al ; nop ; and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000000e33fc : add ch, al ; out dx, al ; ret
0x00000000000350d7 : add ch, bl ; fpatan ; ret
0x00000000001946bc : add ch, bl ; sti ; jmp rax
0x000000000018523c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000018523d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000bc85c : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000072e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000195638 : add ch, byte ptr [rdx - 0x566d0004] ; cld ; jmp qword ptr [rdx]
0x0000000000127764 : add ch, byte ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000056840 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000018726c : add ch, ch ; int1 ; call qword ptr [rax]
0x0000000000035f96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000e40b7 : add cl, al ; call 0x66d0c9cb
0x0000000000036882 : add cl, al ; cmp byte ptr [rax], al ; ret
0x0000000000052fc1 : add cl, bl ; in eax, -0x21 ; loopne 0x52f56 ; ret 0xe680
0x0000000000054f3a : add cl, bl ; in eax, -0x21 ; loopne 0x54ecf ; ret 0xe680
0x00000000001946d4 : add cl, bl ; sti ; jmp rax
0x0000000000105235 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000a1efc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000005715e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000abe19 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000026b13 : add cl, byte ptr [rax + 0x39] ; ret
0x00000000001228d6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x00000000001228e4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000105236 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000074079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002a293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x00000000001053bb : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000bf690 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000a1efd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009dd77 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000070caf : add cl, byte ptr [rax - 0x77] ; ret
0x000000000007c842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000fee62 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000004945c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000088e40 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000025654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000ce6b7 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000088ea3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013b2b5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000724b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000001a3658 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000123b2f : add cl, byte ptr [rbp + 0xf] ; ret
0x000000000003d35d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000e726e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x0000000000088915 : add cl, byte ptr [rbp - 0x77] ; ret
0x000000000015ab52 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000fd462 : add cl, byte ptr [rbx - 0x76b7ffd4] ; ret 0xb6e9
0x00000000000d5906 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x000000000006bcf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000012e187 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000000c93ce : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000000e011e : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00000000000b798b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x000000000002dd54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000f6b3f : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f6a97 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000110855 : add cl, byte ptr [rdi] ; test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000080ed0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000006d005 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x0000000000149a4b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000a9db3 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001b5e00 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x00000000001ae2d0 : add cl, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000067497 : add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c7 : add cl, ch ; ret
0x0000000000104058 : add cl, ch ; ret 0xf771
0x0000000000060228 : add cl, ch ; ret 0xffb8
0x0000000000067734 : add cl, ch ; ret 0xffbf
0x000000000009dc37 : add cl, ch ; ret 0xffd3
0x0000000000040f85 : add cl, ch ; ret 0xffec
0x0000000000031d06 : add cl, ch ; ret 0xfff1
0x000000000009db03 : add cl, ch ; ret 0xfff5
0x000000000002b0b1 : add cl, ch ; ret 0xfffb
0x00000000000f0053 : add cl, ch ; ret 0xfffd
0x0000000000080206 : add cl, ch ; ret 0xfffe
0x0000000000060851 : add cl, ch ; ret 0xffff
0x0000000000114f76 : add cl, cl ; ret
0x00000000001bb97f : add cl, dh ; or byte ptr [rbx], al ; ret
0x00000000001a3450 : add dh, ah ; ret
0x0000000000045af8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000d4d2f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000018991b : add dh, bh ; jmp rdi
0x000000000017f677 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015ad03 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000019f2f : add dh, bl ; ret
0x00000000000a903b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a33f6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x0000000000098fcd : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00000000000d70c8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7094
0x0000000000133622 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a02e5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001b5dc5 : add dh, byte ptr [rdx + 0xa] ; ret
0x00000000000989b3 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009cf14 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009afd0 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009cf13 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x0000000000133621 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000019f17 : add dh, cl ; ret
0x0000000000019f47 : add dh, dh ; ret
0x00000000000eb533 : add dh, dh ; ret 0x4002
0x0000000000023ff6 : add dh, dh ; ret 0x4801
0x000000000008e828 : add dh, dh ; ret 0x7404
0x00000000000e3a09 : add dh, dh ; ret 0x7408
0x000000000006db9f : add dh, dh ; ret 0x7420
0x000000000016fd87 : add dh, dh ; ret 0x7501
0x000000000016fd94 : add dh, dh ; ret 0x7502
0x0000000000061ba4 : add dh, dh ; ret 0x7504
0x000000000016fd59 : add dh, dh ; ret 0x7510
0x000000000016fd66 : add dh, dh ; ret 0x7520
0x000000000016fd73 : add dh, dh ; ret 0x7540
0x00000000000f8127 : add dh, dh ; ret 0xf01
0x0000000000080ecd : add dh, dh ; ret 0xf02
0x0000000000121d95 : add dh, dh ; ret 0xf04
0x000000000005421f : add dh, dh ; ret 0xf08
0x00000000000a0702 : add dh, dh ; ret 0xf20
0x00000000000a070b : add dh, dh ; ret 0xf40
0x000000000018744d : add dh, dl ; call qword ptr [rax]
0x0000000000187445 : add dh, dl ; call rax
0x000000000018742d : add dh, dl ; jmp qword ptr [rax]
0x0000000000187449 : add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x00000000001092ae : add dil, byte ptr [rcx] ; ret
0x00000000000ba639 : add dil, r15b ; ret
0x0000000000194794 : add dl, al ; sti ; call qword ptr [rax - 0x3d]
0x0000000000194738 : add dl, bl ; sti ; jmp rax
0x00000000001a52e5 : add dl, ch ; ret
0x00000000001873f9 : add dl, dh ; call qword ptr [rax]
0x00000000001873f5 : add dl, dh ; jmp rax
0x000000000003494f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000001bb8b0 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000001983d5 : add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00000000001a60c4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000026e56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000bf64c : add dword ptr [r8 - 0x73], ecx ; jl 0xbf6ab ; ror byte ptr [rax - 0x46], 1 ; ret
0x0000000000046274 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000006c70e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce92 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000001af115 : add dword ptr [r8], eax ; call 0x241ae64b
0x0000000000197ec5 : add dword ptr [r8], eax ; in al, 0x46 ; jmp rsp
0x00000000001af72d : add dword ptr [r8], r8d ; loopne 0x1af78b ; cmc ; call qword ptr [rdx]
0x00000000001af505 : add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x0000000000026486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000077ccc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d4dd8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016a401 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000d89ef : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x0000000000026af7 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d8403 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000b6da7 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000f8a23 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000e0ad6 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00000000000495f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000051fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000f8a17 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d84d3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000d2a95 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00000000000b8222 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x000000000009ee10 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000048083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000004821b : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48218 ; xor eax, eax ; ret
0x000000000010d285 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010d25f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00000000000c4e25 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000001010f1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000fed73 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000000e511f : add dword ptr [rax + 0xf], ecx ; ret
0x000000000006432a : add dword ptr [rax + 1], ecx ; ret
0x0000000000020622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d4d53 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000012333c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00000000001a1b3e : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000000989a5 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00000000001ab4f6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000011a876 : add dword ptr [rax - 0x18], edx ; ret
0x00000000000d2e07 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00000000000d2e06 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x000000000002f453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000105232 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000bf64d : add dword ptr [rax - 0x73], ecx ; jl 0xbf6aa ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000ef455 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xef49b
0x00000000000a1ed6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166062 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009dd66 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000aebb1 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007e809 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008a921 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000f016c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000cece0 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00000000000e1102 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00000000000793ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000cf890 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000010db58 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2e
0x0000000000123020 : add dword ptr [rax - 0x78], eax ; ja 0x12302b ; ret
0x0000000000187a73 : add dword ptr [rax - 0x78], esp ; jmp rdx
0x000000000016c01a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000096878 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000221f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000121a58 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000d7663 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00000000000463dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000dd74f : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e8be2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00000000000e0c12 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000006c70f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000037e49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d2c23 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000002146c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000000c6ca6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000023c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000003d24e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000121d88 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000cdfdb : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000b655c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x000000000006ce93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000fa581 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000005cb5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000e699a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d8694 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d6e8e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000007b5da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00000000001a3095 : add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x0000000000108de4 : add dword ptr [rax], 1 ; ret
0x0000000000197bde : add dword ptr [rax], eax ; adc al, 0x52 ; call rsp
0x00000000001b4c7e : add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00000000001ae84e : add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00000000001afefe : add dword ptr [rax], eax ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001aedbe : add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ada0e : add dword ptr [rax], eax ; adc cl, 0xf4 ; jmp rcx
0x000000000019832e : add dword ptr [rax], eax ; add al, 0x21 ; cmc ; jmp rsp
0x0000000000197cc6 : add dword ptr [rax], eax ; add al, 0x90 ; jmp rsp
0x00000000001975e6 : add dword ptr [rax], eax ; add al, 0x92 ; out dx, eax ; jmp rsp
0x0000000000198186 : add dword ptr [rax], eax ; add al, 8 ; hlt ; call rsp
0x00000000000cf875 : add dword ptr [rax], eax ; add al, ch ; ret
0x000000000009d85a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x0000000000122d2c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x0000000000122d32 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x0000000000122d24 : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006dcba : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000028550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006f0bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006bd68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013bda6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000086acc : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000080c48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000142c2d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000066504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e2a58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000964fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000072b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000083f09 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000084030 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002b95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122252 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000082187 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b5e1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000144d0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000343b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002691d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000008d2ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014b1bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144c61 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000297fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000007186a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000072090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000021901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017f67a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017e82a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017e652 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e64a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017ede2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000005981e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004da4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000012df63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd2b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000102aa7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000171d41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x171d58 ; neg eax ; ret
0x00000000000ab0b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xab0c1 ; neg eax ; ret
0x000000000016fc97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16fca8 ; neg eax ; ret
0x00000000000be637 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe604
0x00000000000cd043 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcd057 ; ret
0x00000000001317e3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000132438 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12e718
0x000000000004a09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012cd1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000102c94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000102b60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000102ad8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000102f1e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006cb44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d8c27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c40
0x0000000000054d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007ba63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010de71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000087b5a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000048064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006b46e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000080ed4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000e2d8a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000001afbee : add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000000f79b6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010eabb : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000073e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000006ce32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000000872af : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x000000000008703f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000086e21 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000066558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000022d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ed5f3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000066579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00000000000857de : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000012a00d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000010f751 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000001100ff : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000c1683 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000079d28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000023dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00000000000cdfd5 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000122d19 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x0000000000122cbe : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000122cf9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x000000000009e44a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001ba26e : add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00000000001ae2ce : add dword ptr [rax], eax ; add cl, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000db9ec : add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000016fd85 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000016fd92 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000016fd9f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000016fd57 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000016fd64 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000016fd71 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000012d281 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000ff1fd : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000001ae62e : add dword ptr [rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b4efe : add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00000000001adc0e : add dword ptr [rax], eax ; and bl, bl ; hlt ; call qword ptr [rbx]
0x00000000001af9be : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001afe3e : add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b007e : add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b1e7e : add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001ac1ee : add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00000000001998a6 : add dword ptr [rax], eax ; and eax, r15d ; jmp rsp
0x00000000001b205e : add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001afbd6 : add dword ptr [rax], eax ; call 0x221af14e
0x00000000001b0596 : add dword ptr [rax], eax ; call 0x221afb1c
0x00000000001af116 : add dword ptr [rax], eax ; call 0x241ae64a
0x00000000001b89d6 : add dword ptr [rax], eax ; call 0xffffffffe81b81c0
0x00000000001b2016 : add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000199a86 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00000000001afee6 : add dword ptr [rax], eax ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b95a6 : add dword ptr [rax], eax ; clc ; push rdi ; call qword ptr [rdx]
0x00000000001b1ec6 : add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000008da9a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001ae396 : add dword ptr [rax], eax ; cmp ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1a6 : add dword ptr [rax], eax ; cmp bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001afc36 : add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b3006 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001afe56 : add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b2a7e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rbx]
0x00000000001afd36 : add dword ptr [rax], eax ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001aed16 : add dword ptr [rax], eax ; cmp byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae836 : add dword ptr [rax], eax ; cmp dh, bh ; hlt ; jmp rdi
0x00000000001adf36 : add dword ptr [rax], eax ; cmp dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ac206 : add dword ptr [rax], eax ; cmp dl, bl ; jmp qword ptr [rcx]
0x00000000001b1e96 : add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001afa36 : add dword ptr [rax], eax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b2d26 : add dword ptr [rax], eax ; fadd dword ptr [rbx - 0xa] ; jmp rdi
0x00000000001af976 : add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001ac126 : add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rbx]
0x00000000001ac166 : add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00000000001ac1a6 : add dword ptr [rax], eax ; fcomp st(1) ; jmp qword ptr [rcx]
0x00000000001ade2e : add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b01b6 : add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001ae7a6 : add dword ptr [rax], eax ; fdivr st(5) ; hlt ; jmp qword ptr [rcx]
0x0000000000199cce : add dword ptr [rax], eax ; fprem ; call rsp
0x00000000001ae146 : add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00000000001afdf6 : add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001978de : add dword ptr [rax], eax ; hlt ; int1 ; call rsp
0x000000000019add6 : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000197ec6 : add dword ptr [rax], eax ; in al, 0x46 ; jmp rsp
0x0000000000197a26 : add dword ptr [rax], eax ; in al, 0x74 ; int1 ; jmp rsp
0x00000000001ab1be : add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x0000000000198016 : add dword ptr [rax], eax ; insd dword ptr [rdi], dx ; call rsp
0x000000000019ada6 : add dword ptr [rax], eax ; ja 0x19adad ; call rsp
0x0000000000197b7e : add dword ptr [rax], eax ; je 0x197bca ; call rsp
0x0000000000198a06 : add dword ptr [rax], eax ; je 0x198a06 ; jmp rsp
0x0000000000199506 : add dword ptr [rax], eax ; je 0x1994f5 ; idiv edi ; hlt ; ret 1
0x000000000019977e : add dword ptr [rax], eax ; je 0x199796 ; clc ; jmp rsp
0x0000000000047056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00000000001b0006 : add dword ptr [rax], eax ; jno 0x1b0005 ; jmp qword ptr [rcx]
0x00000000001b05f6 : add dword ptr [rax], eax ; jnp 0x1b05f5 ; jmp qword ptr [rcx]
0x00000000001ade5e : add dword ptr [rax], eax ; jo 0x1ade46 ; hlt ; jmp qword ptr [rcx]
0x00000000001aff2e : add dword ptr [rax], eax ; jo 0x1aff2d ; jmp qword ptr [rcx]
0x00000000001b07ae : add dword ptr [rax], eax ; jo 0x1b073c ; cmc ; jmp rax
0x00000000001adfee : add dword ptr [rax], eax ; jrcxz 0x1adfec ; call qword ptr [rsi]
0x00000000001ae006 : add dword ptr [rax], eax ; jrcxz 0x1ae004 ; jmp qword ptr [rcx]
0x00000000001acfb6 : add dword ptr [rax], eax ; js 0x1acf52 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad656 : add dword ptr [rax], eax ; js 0x1ad607 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0186 : add dword ptr [rax], eax ; js 0x1b0202 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0336 : add dword ptr [rax], eax ; js 0x1b03b5 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0626 : add dword ptr [rax], eax ; js 0x1b06aa ; cmc ; jmp qword ptr [rcx]
0x00000000001acc0e : add dword ptr [rax], eax ; loopne 0x1acc7d ; stc ; call qword ptr [rax]
0x00000000001acdbe : add dword ptr [rax], eax ; loopne 0x1acd57 ; hlt ; call qword ptr [rcx]
0x00000000001ad2ae : add dword ptr [rax], eax ; loopne 0x1ad251 ; hlt ; jmp qword ptr [rcx]
0x00000000001af72e : add dword ptr [rax], eax ; loopne 0x1af78a ; cmc ; call qword ptr [rdx]
0x00000000001afece : add dword ptr [rax], eax ; loopne 0x1aff46 ; cmc ; jmp qword ptr [rcx]
0x00000000001b010e : add dword ptr [rax], eax ; loopne 0x1b0189 ; cmc ; jmp qword ptr [rcx]
0x0000000000197e6e : add dword ptr [rax], eax ; mov ah, 0x32 ; jmp rsp
0x00000000001aed5e : add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000001acc4e : add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00000000001afe9e : add dword ptr [rax], eax ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00000000001acbee : add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00000000001ae286 : add dword ptr [rax], eax ; mov al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1f6 : add dword ptr [rax], eax ; mov bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ade76 : add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00000000001aff76 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000009e23c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009e181 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000000001997ee : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; adc edi, eax ; call rsp
0x0000000000197df6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and dh, bl ; jmp rsp
0x000000000019794e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; int1 ; call rsp
0x00000000001ad546 : add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00000000001b1d8e : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001ad22e : add dword ptr [rax], eax ; nop ; cdq ; hlt ; jmp qword ptr [rcx]
0x00000000001ae59e : add dword ptr [rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00000000001afdae : add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad66e : add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ac2c6 : add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00000000001afe26 : add dword ptr [rax], eax ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b32f6 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000001b6e96 : add dword ptr [rax], eax ; or byte ptr [rdx - 9], ch ; jmp rsi
0x0000000000198656 : add dword ptr [rax], eax ; or dh, dh ; jmp rsp
0x00000000001b58a6 : add dword ptr [rax], eax ; or dl, ah ; sti ; call rsi
0x00000000001ac1d6 : add dword ptr [rax], eax ; or dl, bl ; jmp qword ptr [rcx]
0x00000000001b2076 : add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001af506 : add dword ptr [rax], eax ; pop rax ; cmc ; jmp rax
0x00000000001ade46 : add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b03e6 : add dword ptr [rax], eax ; pop rax ; js 0x1b03e5 ; jmp qword ptr [rbx]
0x000000000009e2bb : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001b1e4e : add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b290e : add dword ptr [rax], eax ; push rax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001ae3ae : add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b00ae : add dword ptr [rax], eax ; push rax ; jb 0x1b00ad ; jmp qword ptr [rcx]
0x00000000001afd4e : add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001af9ee : add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001ace0e : add dword ptr [rax], eax ; push rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x0000000000198ef6 : add dword ptr [rax], eax ; push rsp ; adc edi, esi ; jmp rsp
0x0000000000197e1e : add dword ptr [rax], eax ; push rsp ; and al, 0xf3 ; jmp rsp
0x000000000019878e : add dword ptr [rax], eax ; push rsp ; and al, 0xf6 ; call rsp
0x00000000001bad26 : add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001999e6 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000197a9e : add dword ptr [rax], eax ; push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000198dae : add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x0000000000199556 : add dword ptr [rax], eax ; push rsp ; out 0xf7, al ; jmp rsp
0x00000000001b9f1e : add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00000000001aee4e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x0000000000088d02 : add dword ptr [rax], eax ; ret
0x0000000000198cd6 : add dword ptr [rax], eax ; ret 0xfff6
0x00000000001b2ace : add dword ptr [rax], eax ; sar byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001b057e : add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001aec66 : add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001ab3d6 : add dword ptr [rax], eax ; sbb al, dh ; call rcx
0x00000000001afc06 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001ae916 : add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001b2186 : add dword ptr [rax], eax ; sbb byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x00000000001ac24e : add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001b1dbe : add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001aff16 : add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0156 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001aedd6 : add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019955e : add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x00000000001afdc6 : add dword ptr [rax], eax ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0036 : add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b53d6 : add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x0000000000198886 : add dword ptr [rax], eax ; test byte ptr [rbp - 0xa], bl ; call rsp
0x0000000000199366 : add dword ptr [rax], eax ; test byte ptr [rbx - 9], ah ; jmp rsp
0x00000000001983d6 : add dword ptr [rax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00000000001982d6 : add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf5 ; call rsp
0x0000000000198706 : add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf6 ; call rsp
0x00000000001998de : add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x0000000000198406 : add dword ptr [rax], eax ; xchg eax, esp ; cmc ; jmp rsp
0x000000000019ab96 : add dword ptr [rax], eax ; xchg eax, esp ; fdivr st(2) ; jmp rsp
0x0000000000199aae : add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x000000000019acc6 : add dword ptr [rax], eax ; xor al, 0x73 ; sti ; call rsp
0x000000000019755e : add dword ptr [rax], eax ; xor al, 0x81 ; out dx, eax ; jmp rsp
0x000000000019827e : add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x0000000000197616 : add dword ptr [rax], eax ; xor al, 0x94 ; out dx, eax ; call rsp
0x0000000000199d06 : add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00000000001994d6 : add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x0000000000199526 : add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000001976c6 : add dword ptr [rax], eax ; xor al, 0xfb ; out dx, eax ; call rsp
0x00000000001b05de : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000008d8f1 : add dword ptr [rax], edi ; ret
0x0000000000020ccc : add dword ptr [rax], edi ; ret 0xaf72
0x0000000000098ef7 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000970ea : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00000000000a9dec : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x0000000000116fff : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00000000000c350b : add dword ptr [rbp + 1], ecx ; ret
0x0000000000048060 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x000000000003d33d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000095070 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x000000000004c5b1 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000e3acb : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000105149 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000009696c : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x00000000000967d4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009687c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000015abc2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000d47c2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000000271e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000011c3f8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000000d5044 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000012eea8 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00000000000d5041 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cf05 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x000000000009afc1 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00000000000d670a : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000123042 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000033391 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000b6559 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000d61bf : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d7dd4 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000001bb884 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001a44a2 : add dword ptr [rbx], eax ; mov edi, 0x380e0a01 ; ret
0x00000000001a46da : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x000000000019bd13 : add dword ptr [rbx], eax ; ret 0xe01
0x00000000001bb881 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001317d1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000099194 : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000000abb7f : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000943d0 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000be749 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000023dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000024298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00000000000e32c0 : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000b12c1 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x000000000002d712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x0000000000139f4c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000046987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000081542 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00000000000a1f16 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006c208 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004bccc : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c2545 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000022d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000012330f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009a764 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x0000000000099dc7 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x0000000000031491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000123114 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000010d275 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00000000000c1b69 : add dword ptr [rcx - 0x7f], eax ; ret
0x000000000008d2e7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001b32f5 : add dword ptr [rcx], 0 ; or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x0000000000129f8b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x0000000000198885 : add dword ptr [rcx], 0xf65d8400 ; call rsp
0x00000000000ab8eb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000122d2b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x000000000019755d : add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00000000000d6605 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d664f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000109123 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e754b : add dword ptr [rcx], edi ; ret
0x00000000000d89b9 : add dword ptr [rcx], edi ; ret 0xe875
0x00000000000e5243 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x0000000000080204 : add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x000000000013b5a0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013b560 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013b5ef : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000187a6f : add dword ptr [rdi + 1], ecx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00000000001739ca : add dword ptr [rdi + 3], esi ; ret
0x0000000000094e07 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000001af493 : add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001aa353 : add dword ptr [rdi], 2 ; ret
0x00000000001bac63 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ad77b : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000124580 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d4fb8 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002de35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000025942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000c1801 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000a9e4c : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000a9e37 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000343b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000167ede : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000e3a12 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000005d530 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000eb309 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000011ee13 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000046dbc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000ebb1b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00000000000a9d15 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000aa210 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000a1ed4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000019bd0f : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000000a9a5c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006b417 : add dword ptr [rdx + 4], 1 ; ret
0x000000000006b478 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009f00d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000108b2b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001a344e : add dword ptr [rdx + rax], -0xc ; ret
0x00000000000ca583 : add dword ptr [rdx - 0x76b7ffd1], esp ; ret 0x8d48
0x00000000001a47ad : add dword ptr [rdx], 0x43 ; ret
0x00000000001a6b0e : add dword ptr [rdx], 0x4b ; ret
0x00000000001ba12c : add dword ptr [rdx], 0x51 ; ret
0x00000000001af104 : add dword ptr [rdx], 0x53 ; ret
0x00000000001adb8d : add dword ptr [rdx], 0x54 ; ret
0x00000000001b21db : add dword ptr [rdx], 0x5b ; ret
0x000000000019efb4 : add dword ptr [rdx], 0x63 ; ret
0x000000000019f6f4 : add dword ptr [rdx], 0x6f ; ret
0x00000000001a2414 : add dword ptr [rdx], 0x77 ; ret
0x000000000019f21d : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a1c8c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000001a1a64 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000001a6b04 : add dword ptr [rdx], 2 ; ret
0x00000000001b4fec : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x000000000012311f : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000019d9a9 : add dword ptr [rdx], ecx ; ret
0x000000000012311e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007cba8 : add dword ptr [rip + 0x348bb5], 1 ; ret
0x00000000000a1e65 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001a65ef : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a085e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0874 ; ret
0x00000000001a086c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000a1ee7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a8260 : add dword ptr [rsi], 0x77 ; ret
0x00000000001a38fe : add dword ptr [rsi], 0xa ; ret
0x00000000001ab700 : add dword ptr [rsi], 2 ; ret
0x00000000001a3970 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000001a60c5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001af29e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000098fbe : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d674c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd6763 ; je 0xd66f3 ; pop rbx ; ret
0x00000000001ade2d : add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x000000000009cf04 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00000000001aedbd : add dword ptr ds:[rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000343b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001aed5d : add dword ptr ds:[rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000001aedd5 : add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000014cc57 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001ad545 : add dword ptr es:[rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x000000000019832d : add dword ptr fs:[rax], eax ; add al, 0x21 ; cmc ; jmp rsp
0x00000000000d664e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000001ae62d : add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001ae59d : add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x000000000008afab : add eax, 0x10 ; ret
0x000000000008e7a1 : add eax, 0x10e4a ; ret
0x0000000000133e52 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x000000000002cb3a : add eax, 0x15f406 ; ret
0x0000000000020932 : add eax, 0x16b154 ; ret
0x0000000000020942 : add eax, 0x16d066 ; ret
0x00000000000beb40 : add eax, 0x16e ; ret
0x000000000008af5f : add eax, 0x1713c ; ret
0x0000000000088cff : add eax, 0x1777c ; ret
0x000000000008e63b : add eax, 0x1b330 ; ret
0x000000000008da97 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00000000001bc605 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001a90f4 : add eax, 0x2300e44 ; ret 0xe0a
0x00000000001a5054 : add eax, 0x2300e4a ; ret
0x00000000001a7204 : add eax, 0x2300e55 ; ret
0x000000000008e015 : add eax, 0x26 ; ret
0x0000000000140335 : add eax, 0x2840d6 ; call qword ptr [rax]
0x000000000013fd22 : add eax, 0x2846e9 ; call qword ptr [rax]
0x0000000000137792 : add eax, 0x28b701 ; add rsp, 8 ; ret
0x0000000000137762 : add eax, 0x28b799 ; add rsp, 8 ; ret
0x0000000000137702 : add eax, 0x28b881 ; add rsp, 8 ; ret
0x0000000000137732 : add eax, 0x28b8a9 ; add rsp, 8 ; ret
0x000000000008ce43 : add eax, 0x29000000 ; ret
0x00000000000c1bba : add eax, 0x2907fec1 ; ret 0x8944
0x00000000000c1cfa : add eax, 0x2941c229 ; ret 0x6b45
0x0000000000127e02 : add eax, 0x29b1e1 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b9ca : add eax, 0x29c3ed ; add rsp, 8 ; ret
0x000000000012b9b1 : add eax, 0x29c406 ; test eax, eax ; je 0x12b9c9 ; ret
0x000000000012adca : add eax, 0x29cf71 ; pop rbx ; ret
0x000000000012ad92 : add eax, 0x29cfa9 ; pop rbx ; ret
0x000000000012acd3 : add eax, 0x29d068 ; pop rbx ; ret
0x000000000012774b : add eax, 0x2a0314 ; test eax, eax ; je 0x127761 ; ret
0x00000000001203e2 : add eax, 0x2a4491 ; ret
0x000000000011faa0 : add eax, 0x2a4dbb ; add rsp, 8 ; ret
0x0000000000114ef9 : add eax, 0x2b2222 ; pop rbp ; ret
0x0000000000109752 : add eax, 0x2b9719 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001013d0 : add eax, 0x2c4e4b ; add rsp, 0x18 ; ret
0x000000000010137c : add eax, 0x2c4edf ; pop rbp ; pop r12 ; ret
0x0000000000100e38 : add eax, 0x2c5393 ; add rsp, 8 ; ret
0x0000000000100dd9 : add eax, 0x2c5412 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000167f64 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fd906 : add eax, 0x2c6e95 ; mov rdx, rax ; jmp 0xfd8a6
0x00000000000fd870 : add eax, 0x2c6f2b ; add rsp, 8 ; ret
0x00000000000feefb : add eax, 0x2c71f0 ; add rsp, 8 ; ret
0x00000000000fe9c9 : add eax, 0x2c7652 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd73f : add eax, 0x2c8854 ; ret
0x00000000000fd57f : add eax, 0x2c8a14 ; ret
0x00000000000fd3ac : add eax, 0x2c8be7 ; add rsp, 8 ; ret
0x00000000001a60c3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000bac2e : add eax, 0x30ad8d ; add rsp, 8 ; ret
0x000000000008cc27 : add eax, 0x338c5c ; add rsp, 8 ; ret
0x0000000000083560 : add eax, 0x33f97b ; mov qword ptr [rax], rdi ; ret
0x0000000000081166 : add eax, 0x341c65 ; xor edi, edi ; call qword ptr [rax]
0x0000000000080f41 : add eax, 0x341e8a ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000083571 : add eax, 0x34224e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cb12 : add eax, 0x347a09 ; ret
0x000000000007cc16 : add eax, 0x348b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006ac85 : add eax, 0x35aa76 ; pop rbx ; pop rbp ; ret
0x0000000000115682 : add eax, 0x37c19 ; ret
0x0000000000115772 : add eax, 0x37ec9 ; ret
0x00000000000368bc : add eax, 0x38c7cb ; mov eax, edx ; ret
0x0000000000036881 : add eax, 0x38c802 ; ret
0x0000000000036871 : add eax, 0x38c816 ; ret
0x00000000001b1a59 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x000000000003b0e2 : add eax, 0x38d36f ; add rsp, 8 ; ret
0x000000000002d9cd : add eax, 0x39541e ; mov qword ptr [rax], rdx ; ret
0x0000000000029c92 : add eax, 0x39ac59 ; ret
0x0000000000021a52 : add eax, 0x3a68b9 ; ret
0x0000000000021a42 : add eax, 0x3a68d9 ; ret
0x0000000000134114 : add eax, 0x3d8d4800 ; ret
0x0000000000138a15 : add eax, 0x3d8d4800 ; ret 0x535
0x00000000000f53b7 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000016a498 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000166148 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000a5246 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000124582 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009ddaa : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x00000000001874b5 : add eax, 0x510fff2 ; jmp qword ptr [rax]
0x0000000000188ddd : add eax, 0x518fff5 ; cmc ; call rax
0x0000000000188de9 : add eax, 0x518fff5 ; cmc ; jmp rax
0x000000000016a519 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166189 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000188e61 : add eax, 0x580fff5 ; cmc ; call rax
0x00000000001057f0 : add eax, 0x5b000000 ; pop rbp ; ret
0x000000000006e576 : add eax, 0x5b000000 ; ret
0x00000000001323aa : add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x2e629
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x000000000018021d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000007ec18 : add eax, 0x5c415d5b ; ret
0x00000000000ef0dd : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000012a502 : add eax, 0x61a3e ; ret
0x0000000000188e6d : add eax, 0x628fff5 ; cmc ; call qword ptr [rcx]
0x00000000001bc169 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000001bb465 : add eax, 0x6f980002 ; clc ; call rcx
0x000000000019acc5 : add eax, 0x73340001 ; sti ; call rsp
0x00000000001bb51d : add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x00000000000d2677 : add eax, 0x740e3941 ; ret
0x00000000000b92ba : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000b9266 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000002e50f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008ee3b : add eax, 0x80 ; ret
0x000000000003d3bd : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000a5a4e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000d89b3 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000a9d0f : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000e2704 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000f787b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001448fd : add eax, 0x83480000 ; ret 0x4910
0x0000000000147451 : add eax, 0x83480000 ; ret 0xe910
0x0000000000144851 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000d485d : add eax, 0x83480f75 ; ret
0x000000000016a49b : add eax, 0x8428d48 ; ret
0x000000000006bd9a : add eax, 0x89480012 ; ret 0x8948
0x000000000012eefb : add eax, 0x894c0000 ; ret
0x000000000006f34e : add eax, 0x89c08500 ; ret 0x8389
0x0000000000114dc9 : add eax, 0x89c78944 ; ret
0x0000000000026b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026e6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000a70f2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000137756 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000137786 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000093890 : add eax, 0xb3db ; ret
0x0000000000093861 : add eax, 0xb63a ; ret
0x00000000000938a4 : add eax, 0xbcb07 ; ret
0x000000000008ceec : add eax, 0xbcd7f ; ret
0x000000000008cb5c : add eax, 0xbcfdf ; ret
0x000000000008e7e2 : add eax, 0xbee69 ; ret
0x000000000008a6ec : add eax, 0xbf30f ; ret
0x000000000008914f : add eax, 0xc ; ret
0x000000000013fc2e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000016e89a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000ab0ed : add eax, 0xc20ce ; ret
0x00000000000abcc9 : add eax, 0xc31b2 ; ret
0x000000000016a51d : add eax, 0xc428d48 ; ret
0x00000000000a688d : add eax, 0xc478d48 ; ret
0x00000000000abcd1 : add eax, 0xc5a6a ; ret
0x00000000000310d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000008ee9e : add eax, 0xd ; ret
0x00000000000a76cd : add eax, 0xd478d48 ; ret
0x000000000008c83f : add eax, 0xd999c ; ret
0x000000000008eccf : add eax, 0xda08c ; ret
0x000000000008a5df : add eax, 0xda44c ; ret
0x000000000008edef : add eax, 0xdb77c ; ret
0x000000000008e029 : add eax, 0xdf812 ; ret
0x000000000008e031 : add eax, 0xe1f9a ; ret
0x0000000000088eec : add eax, 0xe6dbf ; ret
0x0000000000086d54 : add eax, 0xe8000000 ; ret
0x0000000000138955 : add eax, 0xe8000000 ; ret 0xef5c
0x000000000009d7fe : add eax, 0xe9000000 ; ret
0x00000000000abcb5 : add eax, 0xe916 ; ret
0x00000000000d3a16 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000ab0e5 : add eax, 0xf596 ; ret
0x0000000000102f42 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000102f67 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000001030b0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103149 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015abb3 : add eax, 0xf7f0ff3 ; ret
0x000000000004c8ad : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d6d0 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000115641 : add eax, 0xfff8984a ; ret
0x0000000000115731 : add eax, 0xfff89eaa ; ret
0x00000000001157bb : add eax, 0xfff941a0 ; ret
0x000000000013620e : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00000000000569f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00000000000f5e87 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x000000000010901b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000108dcc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000a9dea : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008ec7b : add eax, 1 ; ret
0x00000000000218e5 : add eax, 2 ; push rax ; call rbx
0x00000000000ab388 : add eax, 2 ; ret
0x00000000000ab3a1 : add eax, 3 ; ret
0x00000000000d660b : add eax, 8 ; ret
0x0000000000020be9 : add eax, dword ptr [0] ; ret
0x0000000000040f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b2775 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000007edc3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000007dabb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000001a0885 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00000000000e001d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000082744 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1208 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000121ac8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000144a9d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001475f1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ac1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001324ae : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012ec2b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000108726 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000114c17 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000101cac : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000010348d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000001034e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103564 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103664 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000ab3e3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fcf33 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000001215a4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000a9e47 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000001377df : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000001144e5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dd212 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000003af9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000802e3 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001249d5 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000054f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed1 ; ret 0xe680
0x00000000000fd077 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000aa070 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aa090 : add eax, dword ptr [rax] ; ret
0x00000000001a9c43 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00000000001a3652 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000012301d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12302e ; ret
0x0000000000167f29 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000074d14 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000019c50a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a140a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000010a1ba : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000125b0d : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x00000000001975e5 : add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x0000000000033e90 : add eax, dword ptr [rdi + 0x20] ; ret
0x00000000000663b5 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000014320a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000142b2e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000109f96 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000168029 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001aadf0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00000000001a2052 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001b9afa : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x000000000019fb72 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a344a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000001af29a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000000aa141 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000504c8 : add eax, eax ; ret
0x000000000013e416 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008499a : add eax, ebp ; jmp rax
0x0000000000094ba0 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000001020a3 : add eax, ebx ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000115807 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059823 : add eax, ecx ; jmp rax
0x000000000008dd4a : add eax, ecx ; ret
0x000000000009e665 : add eax, edi ; add rax, r8 ; ret
0x000000000008dd47 : add eax, edi ; add rax, rcx ; ret
0x00000000000bf504 : add eax, edi ; jmp rax
0x000000000008c8ab : add eax, edi ; ret
0x0000000000149a5b : add eax, edi ; sub rax, r8 ; ret
0x0000000000149cb0 : add eax, edi ; sub rax, rdx ; ret
0x00000000000f5e5d : add eax, edx ; cmp rdi, rsi ; ja 0xf5e58 ; ret
0x000000000002ec9a : add eax, edx ; jmp rax
0x000000000012dc8e : add eax, edx ; ret
0x000000000008ad06 : add eax, edx ; sub rax, rdi ; ret
0x00000000000fd075 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002ebbc : add eax, esi ; jmp rax
0x00000000000bbb17 : add eax, esi ; ret
0x00000000000504c7 : add eax, r8d ; ret
0x0000000000050198 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001bac65 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00000000000baf0b : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000012b014 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000001bb8b3 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000000e4e28 : add ebp, eax ; ret 0xf3a9
0x00000000001a1891 : add ebp, ebp ; call qword ptr [rsi]
0x00000000001bb8b5 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bb8a5 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000003182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000cf88e : add ebx, 1 ; mov rdx, rax ; jmp 0xcf835
0x0000000000142c32 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000001735b9 : add ebx, dword ptr [rbp + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b0
0x000000000012354d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001a3668 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000125ad9 : add ebx, dword ptr [rip + 0xf48002a] ; ret 0xff81
0x0000000000113e3c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000048471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000fde5b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x0000000000003792 : add ebx, ebp ; in al, -0x12 ; jne 0x3778 ; ret 0x975
0x0000000000101271 : add ebx, ebp ; ret
0x000000000006045d : add ebx, ebp ; ret 0x894c
0x000000000018ba11 : add ebx, edi ; call rax
0x000000000018ba0d : add ebx, edi ; dec eax ; add ebx, edi ; call rax
0x000000000018ba15 : add ebx, edi ; jmp rax
0x000000000015ad73 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000010988f : add ebx, esi ; ret
0x0000000000139b9e : add ebx, esp ; call r14
0x000000000008e734 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8e729 ; ret
0x00000000000f4f9f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001233ad : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000a1f6a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011d598 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e45a : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d47c5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000110d24 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000011eb19 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000096281 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x000000000011e279 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000960af : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000026b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000724b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000010876d : add ecx, dword ptr [rax - 0x42] ; ret
0x000000000012356c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000fe664 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009dd8a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000082d7e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ecd8 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000111217 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x0000000000024205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000038f4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000003d37d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000142ef1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000015aae2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a51e4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000f97e9 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000001126a4 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000a1f6b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000b86b9 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000b7378 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00000000000539a3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00000000001a72b2 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a63b8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001baa1d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000a5a10 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001ad77f : add ecx, dword ptr [rdx] ; ret
0x00000000001a46db : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x000000000002be48 : add ecx, eax ; jmp rcx
0x00000000001503cb : add ecx, ebx ; jmp r9
0x0000000000047c96 : add ecx, ebx ; jmp rcx
0x0000000000101864 : add ecx, ebx ; ret
0x0000000000101578 : add ecx, ebx ; ret 0x3944
0x000000000003329c : add ecx, edi ; jmp rcx
0x0000000000063e4a : add ecx, edx ; jmp rcx
0x00000000000aa0e4 : add ecx, esi ; jmp rcx
0x00000000001321dd : add edi, 0x10 ; jmp rcx
0x000000000012b36f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d54a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000134c84 : add edi, 0x58 ; jmp rcx
0x00000000001343e4 : add edi, 0x68 ; jmp rcx
0x0000000000131667 : add edi, 0xc8 ; jmp rcx
0x000000000009dd64 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000d0a1b : add edi, 1 ; test dl, dl ; jne 0xd0a09 ; ret
0x000000000009dd75 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009dd88 : add edi, 3 ; mov rax, rdi ; ret
0x000000000009dd95 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009dda8 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009dd32 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000171f7f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000001a44a3 : add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00000000000208f4 : add edi, ebp ; call rax
0x00000000001861c8 : add edi, ebp ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001861cc : add edi, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a67d1 : add edi, ebp ; jmp rsi
0x0000000000194221 : add edi, ebx ; call qword ptr [rax]
0x00000000000e0e9d : add edi, ebx ; jmp rdi
0x00000000001503c8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000019a3e1 : add edi, edx ; call rsp
0x0000000000123385 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa2 : add edi, esi ; jmp rdi
0x0000000000194879 : add edi, esp ; call qword ptr [rax]
0x0000000000194859 : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00000000001948fd : add edi, esp ; jmp rax
0x0000000000123311 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000043417 : add edx, dword ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000009e568 : add edx, eax ; jl 0x9e5d7 ; add rax, rdi ; ret
0x000000000009e578 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009e598 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009e5b8 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009dd1c : add edx, eax ; jmp r10
0x00000000000210b8 : add edx, eax ; jmp rdx
0x00000000000490b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000e06b7 : add edx, ecx ; jmp rdx
0x00000000000f59d4 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187429 : add edx, esi ; call qword ptr [rax]
0x0000000000187409 : add edx, esi ; call rax
0x0000000000187405 : add edx, esi ; jmp qword ptr [rax - 0x2f000dff]
0x0000000000187421 : add edx, esi ; jmp rax
0x00000000000c46b5 : add edx, esi ; jmp rdx
0x00000000000bacd5 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000187425 : add edx, esi ; push rax ; add edx, esi ; call qword ptr [rax]
0x0000000000133435 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a9099 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001a21c2 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000001364e4 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136996 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001af392 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000012d1b2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000002a697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x000000000009e23a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009e2b9 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004606b : add esi, eax ; jmp qword ptr [rax]
0x000000000002e8f2 : add esi, eax ; jmp rsi
0x000000000013b1f3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001bb885 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001ae919 : add esi, ebp ; call qword ptr [rdi]
0x00000000001a4cc1 : add esi, ebp ; call qword ptr [rsi]
0x000000000015ac93 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001423f3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f600c : add esi, ebx ; ret
0x0000000000035f99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000016fc9c : add esi, edi ; fadd st(3) ; ret
0x00000000000aa129 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000033413 : add esi, edi ; jmp rsi
0x00000000001503c5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001a9bb9 : add esi, edx ; call rdi
0x000000000018746d : add esi, edx ; inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x0000000000187465 : add esi, edx ; inc eax ; add esi, edx ; jmp rax
0x0000000000187451 : add esi, edx ; jmp qword ptr [rax]
0x0000000000187469 : add esi, edx ; jmp rax
0x00000000000d66db : add esi, esi ; ret
0x000000000006e948 : add esi, esi ; ret 0x7420
0x000000000012df88 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000087954 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013b7f6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003adae : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583e : add esp, 0x10 ; pop rbx ; ret
0x0000000000085ec7 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9441 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008db8f : add esp, 0x100 ; ret
0x000000000008a78d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006ad23 : add esp, 0x1000 ; pop rbx ; ret
0x000000000006ad31 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00000000000359dd : add esp, 0x108 ; ret
0x00000000000f76be : add esp, 0x120 ; pop rbx ; ret
0x0000000000035d8b : add esp, 0x140 ; pop rbx ; ret
0x00000000000353ab : add esp, 0x148 ; ret
0x000000000011f5c0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fc83d : add esp, 0x18 ; mov eax, edx ; ret
0x000000000006b316 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000139f96 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013b76c : add esp, 0x18 ; movzx eax, al ; ret
0x000000000009e89b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012bf12 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003b175 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab50 : add esp, 0x18 ; ret
0x00000000000cb6b2 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f6cb7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000004a803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc8 : add esp, 0x20 ; pop rbx ; ret
0x0000000000132f79 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6c64 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8e : add esp, 0x28 ; jmp rax
0x00000000000206bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044c95 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad3 : add esp, 0x28 ; ret
0x000000000006ac51 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fbb15 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000120e4a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ac9b : add esp, 0x30 ; pop rbx ; ret
0x0000000000120e79 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd4e8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c8af7 : add esp, 0x38 ; ret
0x0000000000035e0c : add esp, 0x40 ; pop rbx ; ret
0x0000000000109818 : add esp, 0x40 ; ret
0x0000000000132d05 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104578 : add esp, 0x408 ; ret
0x000000000004a67c : add esp, 0x440 ; pop rbx ; ret
0x00000000000f7d72 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000012eb17 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000124584 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c93d2 : add esp, 0x48 ; ret
0x00000000000abf5c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013fc2b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000fbe4f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f6557 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6b10 : add esp, 0x60 ; pop rbx ; ret
0x00000000000e7e91 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137b7c : add esp, 0x68 ; ret
0x0000000000136270 : add esp, 0x70 ; pop rbx ; ret
0x000000000010514d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000054e4e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000759a0 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006ba61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007df30 : add esp, 0x80 ; mov rax, r8 ; ret
0x0000000000045383 : add esp, 0x80 ; pop rbx ; ret
0x000000000006b4b9 : add esp, 0x80 ; ret
0x0000000000039edf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000358d3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b99 : add esp, 0x90 ; pop rbx ; ret
0x0000000000036951 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209af : add esp, 0x98 ; ret
0x0000000000135f74 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfd : add esp, 0xa8 ; ret
0x00000000000bba56 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006b62d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000c738e : add esp, 0xd0 ; pop rbx ; ret
0x000000000003569a : add esp, 0xd0 ; ret
0x000000000010437e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf4 : add esp, 0xd8 ; ret
0x0000000000132473 : add esp, 8 ; add eax, 2 ; ret
0x000000000008ccad : add esp, 8 ; jmp rax
0x000000000012329d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000500df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c44 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009e1cd : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bf284 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003a1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000084e0f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000139d1c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012e9f7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b6 : add esp, 8 ; movzx eax, al ; ret
0x00000000001269ea : add esp, 8 ; movzx eax, ax ; ret
0x000000000012dc89 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000032dc1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035133 : add esp, 8 ; ret
0x000000000013fa71 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000013b864 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d51 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e9d4b : add esp, 8 ; xor eax, eax ; ret
0x00000000001b22ac : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x00000000001947f5 : add esp, edi ; call rax
0x0000000000194875 : add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x0000000000194895 : add esp, edi ; push rax ; add bh, ah ; call rax
0x000000000011c3f7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00000000001ad77a : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001afefd : add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001afe3d : add qword ptr [r8], r8 ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afee5 : add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afe55 : add qword ptr [r8], r8 ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afd35 : add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001aff2d : add qword ptr [r8], r8 ; jo 0x1aff2e ; jmp qword ptr [rcx]
0x00000000001afecd : add qword ptr [r8], r8 ; loopne 0x1aff47 ; cmc ; jmp qword ptr [rcx]
0x00000000001afe9d : add qword ptr [r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00000000001aff15 : add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000198015 : add qword ptr [r8], rax ; insd dword ptr [rdi], dx ; call rsp
0x000000000010d274 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x0000000000023c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00000000001afbed : add qword ptr [rax], r8 ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afbd5 : add qword ptr [rax], r8 ; call 0x221af14f
0x00000000001afc35 : add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001afdf5 : add qword ptr [rax], r8 ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001afdad : add qword ptr [rax], r8 ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afe25 : add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afd4d : add qword ptr [rax], r8 ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afc05 : add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afdc5 : add qword ptr [rax], r8 ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x000000000011e61c : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001af9bd : add qword ptr [rax], rax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001afa35 : add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001af975 : add qword ptr [rax], rax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001af9ed : add qword ptr [rax], rax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001af492 : add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000167edd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000001afe9c : add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x000000000009dd1b : add r10, rax ; jmp r10
0x000000000015ad72 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ad02 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ac92 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000019a3e0 : add r15d, edx ; call rsp
0x0000000000149680 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145b14 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d765d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000001231f1 : add r8b, byte ptr [r8] ; jne 0x123247 ; mov eax, r8d ; ret
0x000000000009dec4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009de34 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019a74d : add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x0000000000054f37 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed2 ; ret 0xe680
0x0000000000142ef0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000001503ca : add r9, r11 ; jmp r9
0x0000000000026e73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000001228d5 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000ec9d9 : add r9b, r13b ; ret
0x0000000000026e90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000014c832 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000167f63 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a9de9 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ab390 : add rax, 1 ; ret
0x00000000000ab387 : add rax, 2 ; ret
0x00000000000ab3a0 : add rax, 3 ; ret
0x0000000000020be8 : add rax, qword ptr [0] ; ret
0x0000000000033e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143209 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000142b2d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000020be7 : add rax, qword ptr fs:[0] ; ret
0x0000000000084999 : add rax, r13 ; jmp rax
0x000000000002ebbb : add rax, r14 ; jmp rax
0x000000000009e667 : add rax, r8 ; ret
0x000000000009de84 : add rax, r9 ; jmp rax
0x0000000000115806 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059822 : add rax, rcx ; jmp rax
0x000000000008dd49 : add rax, rcx ; ret
0x000000000009e664 : add rax, rdi ; add rax, r8 ; ret
0x000000000008dd46 : add rax, rdi ; add rax, rcx ; ret
0x00000000000bf503 : add rax, rdi ; jmp rax
0x000000000008c8aa : add rax, rdi ; ret
0x0000000000149a5a : add rax, rdi ; sub rax, r8 ; ret
0x0000000000149caf : add rax, rdi ; sub rax, rdx ; ret
0x000000000002ec99 : add rax, rdx ; jmp rax
0x000000000008ad05 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004da50 : add rax, rsi ; jmp rax
0x00000000000cf88d : add rbx, 1 ; mov rdx, rax ; jmp 0xcf836
0x00000000001735b8 : add rbx, qword ptr [r13 + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b1
0x0000000000139b9d : add rbx, r12 ; call r14
0x00000000000d0d42 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x0000000000047c95 : add rcx, r11 ; jmp rcx
0x000000000002be47 : add rcx, r8 ; jmp rcx
0x0000000000063888 : add rcx, rax ; jmp rcx
0x000000000003329b : add rcx, rdi ; jmp rcx
0x0000000000063e49 : add rcx, rdx ; jmp rcx
0x00000000000aa0e3 : add rcx, rsi ; jmp rcx
0x00000000001321dc : add rdi, 0x10 ; jmp rcx
0x000000000012b36e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d549 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000134c83 : add rdi, 0x58 ; jmp rcx
0x00000000001343e3 : add rdi, 0x68 ; jmp rcx
0x0000000000131666 : add rdi, 0xc8 ; jmp rcx
0x000000000009dd63 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000d0a1a : add rdi, 1 ; test dl, dl ; jne 0xd0a0a ; ret
0x000000000009dd74 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009dd87 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000171f7e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e0e9c : add rdi, r11 ; jmp rdi
0x00000000000208f3 : add rdi, rbp ; call rax
0x00000000001503c7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000123384 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa1 : add rdi, rsi ; jmp rdi
0x00000000000c26ac : add rdx, r8 ; jmp rdx
0x00000000000490b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009e567 : add rdx, rax ; jl 0x9e5d8 ; add rax, rdi ; ret
0x000000000009e566 : add rdx, rax ; jl 0x9e5d9 ; add rax, rdi ; ret
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x00000000000e06b6 : add rdx, rcx ; jmp rdx
0x00000000000c46b4 : add rdx, rsi ; jmp rdx
0x0000000000133434 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002e8f1 : add rsi, rax ; jmp rsi
0x000000000013b1f2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000033412 : add rsi, rdi ; jmp rsi
0x0000000000087953 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013b7f5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003adad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b9440 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008db8e : add rsp, 0x100 ; ret
0x000000000006ad22 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359dc : add rsp, 0x108 ; ret
0x00000000000f76bd : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d8a : add rsp, 0x140 ; pop rbx ; ret
0x00000000000353aa : add rsp, 0x148 ; ret
0x000000000011f5bf : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fc83c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000139f95 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013b76b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4f : add rsp, 0x18 ; ret
0x00000000000cb6b1 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc7 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f6c63 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad2 : add rsp, 0x28 ; ret
0x000000000006ac50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fbb14 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000120e49 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ac9a : add rsp, 0x30 ; pop rbx ; ret
0x00000000000cd4e7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c8af6 : add rsp, 0x38 ; ret
0x0000000000035e0b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000109817 : add rsp, 0x40 ; ret
0x0000000000104577 : add rsp, 0x408 ; ret
0x000000000004a67b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f7d71 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000124583 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c93d1 : add rsp, 0x48 ; ret
0x00000000000abf5b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fbe4e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f6556 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6b0f : add rsp, 0x60 ; pop rbx ; ret
0x0000000000137b7b : add rsp, 0x68 ; ret
0x000000000013626f : add rsp, 0x70 ; pop rbx ; ret
0x000000000010514c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000007599f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045382 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b4b8 : add rsp, 0x80 ; ret
0x00000000000358d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b98 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000135f73 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfc : add rsp, 0xa8 ; ret
0x00000000000c738d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035699 : add rsp, 0xd0 ; ret
0x000000000010437d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf3 : add rsp, 0xd8 ; ret
0x0000000000132472 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008ccac : add rsp, 8 ; jmp rax
0x00000000000500de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009e1cc : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bf283 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000084e0e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000139d1b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012e9f6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001269e9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012dc88 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035132 : add rsp, 8 ; ret
0x000000000013fa70 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013b863 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e9d4a : add rsp, 8 ; xor eax, eax ; ret
0x00000000000938ee : add sil, sil ; ret 0x7404
0x00000000001948f4 : add spl, dil ; call qword ptr [rax]
0x0000000000108de3 : add word ptr [rax], 1 ; ret
0x0000000000108b2a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000194b41 : and ah, bh ; jmp rax
0x0000000000114efa : and ah, byte ptr [rdx] ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000001981c1 : and ah, dh ; call rsp
0x00000000001ae630 : and ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000019d36d : and al, 0 ; add al, ah ; jl 0x19d362 ; call qword ptr [rcx]
0x00000000000a2721 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000096131 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019d40d : and al, 0 ; add byte ptr [rax], al ; jle 0x19d402 ; jmp qword ptr [rsi]
0x00000000000960c2 : and al, 0 ; je 0x960d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6b3d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f1b20 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013630b : and al, 0x10 ; call qword ptr [r10]
0x00000000000c7f60 : and al, 0x10 ; call rax
0x0000000000134fcf : and al, 0x10 ; call rcx
0x000000000008114a : and al, 0x10 ; call rdi
0x0000000000034f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000010e2f2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000102241 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000074fe6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012b43a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000010e1ee : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000081033 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000026a19 : and al, 0x14 ; jmp 0x26830
0x0000000000026a18 : and al, 0x14 ; jmp 0x26831
0x000000000007ec49 : and al, 0x14 ; pop r12 ; ret
0x000000000004305c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046dba : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000836eb : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000e35d0 : and al, 0x18 ; call 0x1f8a4
0x000000000003dfe4 : and al, 0x18 ; call 0x3c0a8
0x000000000012beda : and al, 0x18 ; call qword ptr [rax]
0x0000000000024073 : and al, 0x18 ; call r12
0x000000000002082c : and al, 0x18 ; call rax
0x0000000000131b97 : and al, 0x18 ; call rcx
0x000000000012bc09 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137270 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009dd4d : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000081145 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000021858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000c8701 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000acab7 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000038381 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00000000000750c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000acd67 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000ac7ff : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ef459 : and al, 0x18 ; mov rdx, rax ; jmp 0xef497
0x00000000000ef458 : and al, 0x18 ; mov rdx, rax ; jmp 0xef498
0x000000000013611c : and al, 0x1c ; call qword ptr [r10]
0x000000000012bde8 : and al, 0x1c ; call qword ptr [rax]
0x0000000000142bb5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000e50d7 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007f5e5 : and al, 0x20 ; add al, ch ; ret
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e2a56 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000080d11 : and al, 0x20 ; call qword ptr [rax]
0x0000000000028abc : and al, 0x20 ; call r14
0x0000000000023e53 : and al, 0x20 ; call r15
0x000000000008108d : and al, 0x20 ; call rax
0x00000000000ac4cb : and al, 0x20 ; call rbx
0x000000000013199f : and al, 0x20 ; call rcx
0x00000000000ac12b : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012b3ba : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x137649
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000b9b3f : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x000000000019a4f8 : and al, 0x22 ; cli ; call rsp
0x0000000000183384 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000003ce68 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012b3bf : and al, 0x28 ; call 0x137644
0x000000000012b3be : and al, 0x28 ; call 0x137645
0x00000000000335db : and al, 0x28 ; call 0x1f8a4
0x00000000000335da : and al, 0x28 ; call 0x1f8a5
0x000000000002436c : and al, 0x28 ; call rax
0x00000000000ac000 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000081088 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000084403 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000001374b4 : and al, 0x2a ; call qword ptr [rax]
0x000000000012bc0e : and al, 0x2c ; call qword ptr [rax]
0x00000000001ade5c : and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade48 ; hlt ; jmp qword ptr [rcx]
0x00000000000f3508 : and al, 0x2f ; mov qword ptr [rsp + 0x40], rax ; call 0x1f7f9
0x000000000004015f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012c37d : and al, 0x30 ; call qword ptr [rax]
0x0000000000024807 : and al, 0x30 ; call r12
0x0000000000025592 : and al, 0x30 ; call r14
0x0000000000025352 : and al, 0x30 ; call r15
0x0000000000024d07 : and al, 0x30 ; call rax
0x00000000000248bb : and al, 0x30 ; call rbx
0x0000000000038fe9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000013b6f9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000ba46e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ac9ac : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000005d9df : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000d46c1 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282b1 : and al, 0x38 ; call r14
0x0000000000025b5a : and al, 0x38 ; call r15
0x000000000002804a : and al, 0x38 ; call rbx
0x0000000000111fa7 : and al, 0x38 ; jmp 0x111f71
0x0000000000111fa6 : and al, 0x38 ; jmp 0x111f72
0x0000000000142a99 : and al, 0x38 ; jne 0x142a80 ; add rsp, 0x48 ; ret
0x0000000000142a98 : and al, 0x38 ; jne 0x142a81 ; add rsp, 0x48 ; ret
0x00000000000fd165 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000101ad4 : and al, 0x39 ; ret
0x000000000009e096 : and al, 0x39 ; ret 0x2574
0x0000000000137275 : and al, 0x3a ; call qword ptr [rax]
0x00000000001aed5c : and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000000e10ba : and al, 0x40 ; add rax, rdx ; jmp rax
0x00000000000f350d : and al, 0x40 ; call 0x1f7f4
0x00000000000f350c : and al, 0x40 ; call 0x1f7f5
0x000000000002686a : and al, 0x40 ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000126ec1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000129925 : and al, 0x41 ; call rsp
0x00000000000fc83b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cb6c2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5d5e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000006f1b2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001097b5 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000109816 : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000083a33 : and al, 0x48 ; call rax
0x000000000014292d : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00000000000abac4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f35ce : and al, 0x48 ; mov qword ptr [r14], rbx ; call 0x1f8af
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bb1fd : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000095f3c : and al, 0x48 ; test esi, esi ; jne 0x95f53 ; jmp 0x95f0d
0x000000000019fe5c : and al, 0x4f ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6a
0x00000000001966f8 : and al, 0x50 ; jmp 0x1966fe
0x0000000000199f10 : and al, 0x52 ; stc ; call rsp
0x000000000019a710 : and al, 0x56 ; cli ; jmp rsp
0x000000000007ec44 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000012c94b : and al, 0x60 ; call rax
0x0000000000189204 : and al, 0x63 ; cmc ; call qword ptr [rbx]
0x00000000001892d8 : and al, 0x63 ; cmc ; call rsi
0x00000000001892e8 : and al, 0x63 ; cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x00000000000f97e7 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000000bb202 : and al, 0x68 ; call r12
0x0000000000083d3b : and al, 0x68 ; call rax
0x00000000000850cb : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000197120 : and al, 0x6e ; out dx, al ; call rsp
0x0000000000142e3d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000acc6d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000ac6e3 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000001b205c : and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000c113b : and al, 0x71 ; jmp 0xbf36f
0x00000000000f510d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000001a2c5c : and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x000000000003ea8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5062 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000de56f : and al, 0x83 ; ret 0x4801
0x0000000000187b6c : and al, 0x84 ; call qword ptr [rsi]
0x00000000000f2824 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00000000000b5c13 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b63bb : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000818d6 : and al, 0x89 ; ret 0xb48b
0x00000000000f137f : and al, 0x89 ; ret 0xe883
0x0000000000023ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000dfbe3 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001a465c : and al, 0x97 ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000029a6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b4bc4 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000da4f9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000001a4a5c : and al, 0x9b ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00000000000da660 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000dfb4b : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000da7bc : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000f6a95 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000fd262 : and al, 0xb0 ; ret
0x000000000012ef57 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000008da98 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000003583b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab4d : and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000142be0 : and al, 0xc ; add rsp, 0x38 ; ret
0x000000000006aa55 : and al, 0xc ; call 0xf6d04
0x00000000000f5ef7 : and al, 0xc ; call rax
0x000000000019aa60 : and al, 0xc3 ; cli ; jmp rsp
0x000000000018844c : and al, 0xc4 ; call qword ptr [rcx]
0x0000000000188444 : and al, 0xc4 ; jmp qword ptr [rdi]
0x00000000000021d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00000000000dfb39 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000013bc5b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000196c10 : and al, 0xd4 ; in eax, dx ; jmp rsp
0x0000000000071868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000fa961 : and al, 0xe8 ; cdq ; ret
0x0000000000034f9c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035009 : and al, 0xe8 ; ret
0x000000000004a218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000186e31 : and al, 0xf0 ; jmp qword ptr [rax - 0x1f000fdb]
0x00000000000350c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bad46 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000bad4c : and al, 0xf0 ; ret
0x00000000001a8721 : and al, 0xf1 ; jmp rcx
0x00000000001aa4a1 : and al, 0xf2 ; jmp qword ptr [rcx]
0x0000000000197e21 : and al, 0xf3 ; jmp rsp
0x00000000000cceea : and al, 0xf3 ; ret
0x0000000000198791 : and al, 0xf6 ; call rsp
0x00000000001998e1 : and al, 0xf8 ; jmp rsp
0x00000000000939f6 : and al, 0xf8 ; jne 0x938d2 ; ret
0x000000000004a1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a1d7 : and al, 0xf8 ; ret
0x000000000004a18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000004a191 : and al, 0xfc ; ret
0x00000000000351a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00000000000351ab : and al, 0xfe ; ret
0x00000000000be636 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000019a2a5 : and al, 2 ; add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00000000001be410 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000037304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a5b58 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b9456 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afec : and al, 8 ; add rsp, 0x18 ; ret
0x000000000012dab7 : and al, 8 ; call qword ptr [rax]
0x0000000000088672 : and al, 8 ; call qword ptr [rdx]
0x000000000010e1f3 : and al, 8 ; call rax
0x0000000000102158 : and al, 8 ; call rbx
0x000000000012c92f : and al, 8 ; call rcx
0x000000000003505a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000013a8bf : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000001fc01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006de25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013a9fc : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000011f36b : and al, 8 ; mov rdi, r13 ; call r12
0x0000000000139fbf : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000037d66 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000391a6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000034f3b : and al, 8 ; ret
0x00000000000cb7ec : and al, 8 ; test rax, rax ; je 0xcb7fc ; call rax
0x00000000000cb7eb : and al, 8 ; test rax, rax ; je 0xcb7fd ; call rax
0x000000000013b6fe : and al, 8 ; xor eax, eax ; call rdx
0x0000000000194630 : and al, bl ; sti ; jmp rax
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000da37d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000001ad13d : and al, byte ptr [rcx] ; add al, dh ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x0000000000197a9d : and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x0000000000103eda : and al, byte ptr [rdi + 0x3948fffa] ; ret
0x0000000000088eba : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000002de32 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd92 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd32 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd72 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000194b09 : and bh, ah ; call qword ptr [rax]
0x000000000005683e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000195320 : and bh, byte ptr [rbp - 4] ; jmp qword ptr [rdx + 0x22fffc7c]
0x0000000000195330 : and bh, byte ptr [rbx - 4] ; jmp qword ptr [rdx + 0x22fffc7a]
0x0000000000195338 : and bh, byte ptr [rdx - 4] ; jmp qword ptr [rdx + 0x22fffc79]
0x0000000000189d34 : and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x189d38 ; jmp qword ptr [rdx]
0x0000000000189d2c : and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x0000000000189ccc : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189cd0 ; jmp qword ptr [rdx]
0x0000000000189d68 : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d6c ; jmp qword ptr [rdx]
0x000000000019a4f9 : and bh, dl ; call rsp
0x00000000001b4f00 : and bl, 0xf6 ; jmp qword ptr [rdi]
0x0000000000194688 : and bl, ah ; sti ; jmp qword ptr [rax]
0x00000000000a6137 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000001adc10 : and bl, bl ; hlt ; call qword ptr [rbx]
0x0000000000195848 : and bl, byte ptr [rsi - 0x626d0004] ; cld ; jmp qword ptr [rdx]
0x00000000001965b1 : and bl, ch ; call rsp
0x000000000010db5f : and bl, ch ; ret
0x0000000000087af2 : and bl, ch ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000003542f : and bl, dh ; ret
0x000000000010fd10 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000076b8a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a93b6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007b1a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000010fe8d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000086e8b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000010e87d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10e89d
0x000000000010fd11 : and byte ptr [rax + 0x39], cl ; ret
0x000000000007fcd9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000004ae2c : and byte ptr [rax + 1], cl ; ret
0x000000000009e596 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000ab0ef : and byte ptr [rax + rax], cl ; ret
0x0000000000107eab : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000025111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000bb2c2 : and byte ptr [rax - 0x75], cl ; je 0xbb2f3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000815e3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000076b8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000f2696 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006dfe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010e9dd : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf10e
0x0000000000088a9b : and byte ptr [rax - 0x77], cl ; jae 0x88ab1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b463 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000bfa51 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000140472 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000bdfb6 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x000000000004698c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000118a55 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000022d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000002c374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x000000000013365b : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; ret 0xffee
0x0000000000022b96 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000789d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000195030 : and byte ptr [rax - 4], al ; jmp qword ptr [rax + 0x20fffc41]
0x0000000000194f98 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x000000000019431c : and byte ptr [rax - 5], 0xff ; shl byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00000000000ebdd0 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000eaf36 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00000000000ccf2b : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000aa10c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ccf10 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000125e8a : and byte ptr [rax], al ; jmp 0x125e53
0x0000000000194fdc : and byte ptr [rax], bh ; cld ; jmp qword ptr [rax + 0x20fffc39]
0x00000000001949d0 : and byte ptr [rax], ch ; cld ; jmp rax
0x00000000000a726c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a93b7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000137afe : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x00000000000d61bc : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000194380 : and byte ptr [rbp - 0x795f0005], al ; sti ; jmp qword ptr [rax]
0x00000000000d51fc : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000194f70 : and byte ptr [rbp - 4], dl ; jmp qword ptr [rax + 0x20fffc54]
0x0000000000032fc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1b6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019c50d : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a140d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a3655 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000001abdfd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x00000000001942d4 : and byte ptr [rbx + rdi*8], bh ; inc dword ptr [rax] ; sti ; call rax
0x000000000005a2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000004dc5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00000000001943cc : and byte ptr [rbx - 0x5f9a0003], ah ; std ; call qword ptr [rcx]
0x000000000006e0d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001af9c0 : and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195038 : and byte ptr [rbx - 4], al ; jmp qword ptr [rax + 0x20fffc44]
0x0000000000194350 : and byte ptr [rbx - 5], dh ; jmp qword ptr [rax + 0x20fffb74]
0x0000000000194fe4 : and byte ptr [rbx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3c]
0x000000000002981c : and byte ptr [rcx + 0x39], cl ; ret
0x000000000007b1a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x000000000019f0e6 : and byte ptr [rcx + 0xa], al ; ret
0x000000000012b3bb : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x137648
0x000000000004a805 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000b9b40 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x000000000004a215 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000013c3d8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000022c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x0000000000194ff4 : and byte ptr [rcx - 4], al ; jmp qword ptr [rax + 0x20fffc42]
0x0000000000194360 : and byte ptr [rcx - 5], bh ; jmp qword ptr [rax + 0x20fffb7a]
0x00000000001acffd : and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001acf9d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acfb5 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000f76c0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001ad015 : and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00000000001a1890 : and byte ptr [rcx], al ; in eax, dx ; call qword ptr [rsi]
0x0000000000194a54 : and byte ptr [rcx], ch ; cld ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000132f7b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c6b38 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001a6d50 : and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001a5880 : and byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00000000001afe40 : and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000195004 : and byte ptr [rdi - 4], al ; jmp qword ptr [rax + 0x20fffc48]
0x0000000000195290 : and byte ptr [rdi - 4], dh ; jmp rax
0x0000000000194f60 : and byte ptr [rdi - 4], dl ; jmp qword ptr [rax + 0x20fffc56]
0x0000000000194370 : and byte ptr [rdi - 5], bh ; jmp qword ptr [rax + 0x20fffb80]
0x0000000000194a70 : and byte ptr [rdi], ah ; cld ; jmp rax
0x000000000002de15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000022c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5e29 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000022d78 : and byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000016fd60 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000126150 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00000000000fde9d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000fde3c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000195018 : and byte ptr [rdi], dh ; cld ; jmp qword ptr [rax + 0x20fffc38]
0x0000000000194278 : and byte ptr [rdi], dl ; sti ; call qword ptr [rax]
0x0000000000194378 : and byte ptr [rdx - 0x7c5f0005], al ; sti ; jmp qword ptr [rax]
0x00000000001b0080 : and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b1e80 : and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x0000000000195020 : and byte ptr [rdx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3b]
0x0000000000194a3c : and byte ptr [rip + 0x2f00fffc], ch ; cld ; call rax
0x0000000000194fd4 : and byte ptr [rip + 0x36a0fffc], dh ; cld ; jmp qword ptr [rax]
0x0000000000195028 : and byte ptr [rip + 0x3ea0fffc], bh ; cld ; jmp qword ptr [rax]
0x0000000000173732 : and byte ptr [rip + 0x5be17500], ah ; ret
0x000000000016d8fa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001b9afd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x000000000019fb75 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000000d7129 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x0000000000002c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001945f0 : and byte ptr [rsi - 0x482e0003], dh ; std ; call rcx
0x0000000000195040 : and byte ptr [rsi - 4], al ; jmp qword ptr [rax + 0x20fffc47]
0x0000000000194f68 : and byte ptr [rsi - 4], dl ; jmp qword ptr [rax + 0x20fffc55]
0x0000000000194358 : and byte ptr [rsi - 5], dh ; jmp qword ptr [rax + 0x20fffb77]
0x0000000000194fec : and byte ptr [rsi], bh ; cld ; jmp qword ptr [rax + 0x20fffc3f]
0x00000000000fe731 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000195958 : and byte ptr [rsp + rdi*8 - 0x35c6f01], ah ; call qword ptr [rax]
0x00000000001acf9c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000ab382 : and ch, 0xf ; je 0xab3a9 ; add rax, 2 ; ret
0x0000000000181285 : and ch, bl ; call rdx
0x0000000000181289 : and ch, bl ; jmp rsp
0x00000000000ab36d : and cl, 0xf ; je 0xab395 ; ret
0x000000000000395a : and cl, ah ; ret
0x0000000000194684 : and cl, ah ; sti ; jmp qword ptr [rax]
0x0000000000047254 : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000943d8 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e11d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000118a15 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000051158 : and cl, ch ; ret 0xfffa
0x0000000000197df9 : and dh, bl ; jmp rsp
0x00000000000834f9 : and dh, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b1e09 : and dh, dh ; jmp qword ptr [rsi]
0x00000000000db9ff : and dh, dh ; ret
0x000000000008e747 : and dh, dh ; ret 0x7504
0x00000000001aa411 : and dh, dl ; jmp qword ptr [rcx]
0x000000000005683d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000001ac1f0 : and dl, bl ; jmp qword ptr [rcx]
0x0000000000188748 : and dl, byte ptr [rax - 0xc] ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x0000000000188934 : and dl, byte ptr [rax - 0xc] ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x0000000000188840 : and dl, byte ptr [rax - 0xc] ; jmp qword ptr [rcx + 0x22fff452]
0x00000000001885d0 : and dl, byte ptr [rax - 0xc] ; jmp qword ptr [rdx]
0x000000000018894c : and dl, byte ptr [rax - 0xc] ; jmp rax
0x0000000000188800 : and dl, byte ptr [rax - 0xc] ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00000000001887e4 : and dl, byte ptr [rax - 0xc] ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x0000000000188630 : and dl, byte ptr [rdx - 0xc] ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00000000000d2387 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000004fff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000184ea2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000072cbf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006f779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000018940c : and dword ptr [rcx - 0x6982000b], ebx ; cmc ; jmp qword ptr [rbx]
0x0000000000123526 : and dword ptr [rcx - 0xa], eax ; ret
0x0000000000042203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000b037b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000035f66 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000077ef0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000360c8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001a8870 : and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x0000000000181f59 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a5c5b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000184ea1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001739b6 : and eax, 0 ; add bl, dh ; ret
0x0000000000020beb : and eax, 0 ; ret
0x00000000000fb723 : and eax, 0x100f ; ret
0x000000000003518a : and eax, 0x200 ; ret
0x0000000000181359 : and eax, 0x25e0ffeb ; jmp 0x181365
0x000000000018135d : and eax, 0x25e0ffeb ; jmp 0x181369
0x0000000000181361 : and eax, 0x25e0ffeb ; jmp 0x18136d
0x0000000000181365 : and eax, 0x25e0ffeb ; jmp 0x181371
0x0000000000181369 : and eax, 0x25e0ffeb ; jmp 0x181375
0x000000000018136d : and eax, 0x25e0ffeb ; jmp 0x181379
0x0000000000181371 : and eax, 0x25e0ffeb ; jmp 0x18137d
0x0000000000181375 : and eax, 0x25e0ffeb ; jmp 0x181381
0x0000000000181351 : and eax, 0x270effeb ; jmp 0x18135d
0x0000000000181350 : and eax, 0x270effeb ; jmp 0x18135e
0x00000000001402db : and eax, 0x281660 ; ret
0x0000000000106824 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000cc676 : and eax, 0x2d0 ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008cca7 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002084d : and eax, 0x30 ; call rax
0x0000000000039fc9 : and eax, 0x30 ; call rdx
0x0000000000035322 : and eax, 0x30 ; jmp rax
0x000000000002f6d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004d398 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000aa06d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000aa08d : and eax, 0x3fc00 ; ret
0x00000000000aa04c : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000001a2a2c : and eax, 0x4000001 ; ret 0x18f
0x000000000010217f : and eax, 0x49fff1d7 ; mov edi, dword ptr [rbp] ; call rbx
0x0000000000173733 : and eax, 0x5be17500 ; ret
0x000000000018876c : and eax, 0x79fff451 ; push rdx ; hlt ; jmp qword ptr [rdx]
0x000000000002df22 : and eax, 0x7f ; ret
0x00000000000aa0c0 : and eax, 0x7ff80000 ; ret
0x0000000000034b44 : and eax, 0x80 ; ret
0x0000000000034c07 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000077402 : and eax, 0x804 ; ret
0x00000000000fde5d : and eax, 0x83489066 ; ret 0x3c01
0x00000000000d8a29 : and eax, 0x8348d231 ; ret 0x4801
0x00000000000f031f : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000809a3 : and eax, 0x950f4100 ; ret
0x0000000000114567 : and eax, 0xc ; cmp eax, 4 ; je 0x114578 ; ret
0x0000000000114738 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000006d360 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001739c5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000106961 : and eax, 0xfff ; or eax, edi ; ret
0x000000000011882d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000001187c8 : and eax, 0xffffff ; ret
0x0000000000122433 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000010126f : and eax, 1 ; jmp 0x10123b
0x00000000000d6708 : and eax, 1 ; pop rbx ; ret
0x000000000002ded2 : and eax, 1 ; ret
0x00000000000d6608 : and eax, 2 ; add eax, 8 ; ret
0x000000000002dd52 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d6654 : and eax, 2 ; ret
0x000000000004846c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ddf2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd12 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034e74 : and eax, 8 ; ret
0x000000000013d2a2 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d8e1a : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00000000001ad2f5 : and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ad2dd : and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000168009 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000036558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000002d17 : and eax, ebp ; clc ; ret
0x00000000001998a9 : and eax, edi ; jmp rsp
0x0000000000034852 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034792 : and eax, edx ; ret
0x00000000000347e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002e0ed : and eax, esi ; ret
0x00000000001998a8 : and eax, r15d ; jmp rsp
0x0000000000072cc0 : and ebp, edi ; pop rbx ; ret
0x0000000000198331 : and ebp, esi ; jmp rsp
0x0000000000114502 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x114515 ; ret
0x00000000000d674f : and ebx, 8 ; je 0xd66f0 ; pop rbx ; ret
0x000000000003afb8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x000000000016ee75 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016e5a8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000758c0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000007fd5b : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000000efc3b : and ecx, dword ptr [rax - 0x75] ; je 0xefc6c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012c09e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000857ac : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000000ffbe5 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000007cc4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000126c56 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000fed79 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00000000000fedd2 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x0000000000126c7d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x000000000002df32 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000759b3 : and edx, 1 ; mov eax, edx ; ret
0x0000000000002bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004a1ee : and esi, 0xe0837fff ; jg 0x4a207 ; ret 0x5488
0x00000000001aa489 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001b1d61 : and esi, esi ; jmp qword ptr [rsi]
0x000000000011a0e1 : and esp, dword ptr [rdi - 0x76b7ffd6] ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x0000000000194b05 : and esp, edi ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00000000000dd70d : and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x0000000000035f65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000360c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000083572 : and r14b, byte ptr [rax + r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000036557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034851 : and rax, rdx ; movq xmm0, rax ; ret
0x0000000000034bcb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034bc8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000959fa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008df80 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008df90 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008dfa0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008df70 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008debf : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000095bf3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008ec75 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008aba6 : bsf eax, edx ; ret
0x000000000008ad02 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000095d10 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008abf2 : bsf rax, rdx ; ret
0x000000000009e661 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008c8a7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009e530 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009e540 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009e550 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008cb2b : bsr eax, esi ; add rax, rdi ; ret
0x000000000008ca39 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008c935 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008c8a6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008cb2a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008ca38 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008c934 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000134dad : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001187a2 : bswap eax ; ret
0x0000000000002bfb : bswap ebx ; clc ; ret
0x0000000000064055 : call 0x11064057
0x0000000000064582 : call 0x11064584
0x0000000000064d3c : call 0x11064d3e
0x0000000000065126 : call 0x11065128
0x0000000000066b8b : call 0x11066b8d
0x000000000006903b : call 0x1106903d
0x000000000006a04f : call 0x1106a051
0x000000000019b068 : call 0x111998c8
0x00000000001a6b88 : call 0x111a6869
0x000000000008826e : call 0x114492
0x00000000001a3a18 : call 0x121a279f
0x000000000013243e : call 0x12e712
0x000000000019cd88 : call 0x1319b6e1
0x000000000019e198 : call 0x1319cb64
0x000000000012b34c : call 0x137642
0x0000000000035f40 : call 0x140ca753
0x000000000011fa06 : call 0x143ef7
0x000000000019ce38 : call 0x1819b797
0x00000000000283a9 : call 0x1c506f9
0x0000000000133535 : call 0x1f7e2
0x00000000000f350f : call 0x1f7f2
0x00000000000f350e : call 0x1f7f3
0x0000000000023659 : call 0x1f8a2
0x00000000000c8383 : call 0x1f8a9
0x00000000000f35d3 : call 0x1f8aa
0x00000000000346c0 : call 0x1f8ae
0x00000000000dfd9b : call 0x1f8b0
0x000000000004d5bc : call 0x2104d5be
0x000000000004dbeb : call 0x2104dbed
0x000000000004dc99 : call 0x2104dc9b
0x000000000004e0e1 : call 0x2104e0e3
0x000000000004e0f0 : call 0x2104e0f2
0x000000000004f9b4 : call 0x2104f9b6
0x000000000004fb2c : call 0x2104fb2e
0x00000000001aa488 : call 0x221a96b3
0x00000000001afbd8 : call 0x221af14c
0x00000000001b0598 : call 0x221afb1a
0x00000000001af118 : call 0x241ae648
0x0000000000093c04 : call 0x247dc75d
0x00000000001a7158 : call 0x281a6b89
0x0000000000021958 : call 0x2dc42
0x000000000003ed01 : call 0x2dc48
0x000000000002668b : call 0x2dc49
0x00000000001323b1 : call 0x2e622
0x000000000010c2da : call 0x356f7
0x00000000000bd49f : call 0x39772
0x00000000000ef0f8 : call 0x3b3c2
0x000000000005fabe : call 0x3bd42
0x000000000003dfe6 : call 0x3c0a6
0x00000000000db184 : call 0x42d03acd
0x00000000000db2fc : call 0x42d03c45
0x00000000000db1d4 : call 0x43d03b1d
0x00000000000db34c : call 0x43d03c95
0x00000000000d1504 : call 0x480d2110
0x00000000000afa13 : call 0x4ccd8f2a
0x00000000000b21db : call 0x4ccdb5f2
0x00000000000b4ebb : call 0x4ccde3d2
0x0000000000076a44 : call 0x4d177
0x000000000015a2fa : call 0x4f94b2f8
0x000000000015a2f9 : call 0x4f94b2f9
0x000000000015cdca : call 0x4f94ddc8
0x000000000015cdc9 : call 0x4f94ddc9
0x000000000015f8ea : call 0x4f9508e8
0x000000000015f8e9 : call 0x4f9508e9
0x00000000001295f3 : call 0x558b2
0x00000000000e39f9 : call 0x66d0c309
0x00000000000e3f57 : call 0x66d0c867
0x00000000000e40b9 : call 0x66d0c9c9
0x0000000000195b8a : call 0x71d897
0x0000000000065d5f : call 0x71fd2
0x000000000011718e : call 0x73442
0x00000000000ccddd : call 0x750ccee6
0x00000000000fd692 : call 0x76598
0x000000000004b517 : call 0x777f2
0x000000000005f111 : call 0x7b3a2
0x0000000000085f01 : call 0x82182
0x00000000000bce7d : call 0x89162
0x000000000009e8d3 : call 0x8ab72
0x000000000004ea7c : call 0x8ad12
0x00000000000e4430 : call 0x8e694
0x00000000000b96eb : call 0x8e806
0x00000000000dd8c4 : call 0x938c6
0x000000000011e899 : call 0x95bb8
0x00000000000202f6 : call 0xa9eb6
0x00000000000203fa : call 0xa9fd6
0x00000000000f584e : call 0xcc697
0x00000000000f587b : call 0xcc6b7
0x00000000000f3457 : call 0xef752
0x0000000000106dfd : call 0xf106e06
0x0000000000106e1d : call 0xf106e26
0x00000000000ff4b3 : call 0xf17d541
0x000000000010004a : call 0xf17e0d8
0x000000000006aa57 : call 0xf6d02
0x000000000011d8d9 : call 0xf6d06
0x00000000001001ca : call 0xfc3e2
0x000000000012b9c4 : call 0xfc828
0x00000000000bb3e2 : call 0xfcdec09
0x00000000000fe859 : call 0xfe678
0x000000000003508d : call 0xffffffff816a131d
0x000000000011dfb9 : call 0xffffffff835adfc4
0x00000000001224f7 : call 0xffffffff895be787
0x00000000000baf19 : call 0xffffffff89cdd840
0x00000000000bb08a : call 0xffffffff89cdd9b1
0x00000000000bb283 : call 0xffffffff89cddbaa
0x00000000001829c3 : call 0xffffffffaedac839
0x00000000000ba8ba : call 0xffffffffc234f102
0x0000000000051feb : call 0xffffffffc23e67f5
0x00000000000819fb : call 0xffffffffc241620c
0x000000000012ddb5 : call 0xffffffffc2879e43
0x0000000000047641 : call 0xffffffffc28db769
0x00000000000821e8 : call 0xffffffffc2916a01
0x00000000000cd50c : call 0xffffffffc295d517
0x00000000000f016b : call 0xffffffffc2984975
0x000000000010eabf : call 0xffffffffc29a36c9
0x0000000000122a9e : call 0xffffffffc29b311a
0x000000000012f654 : call 0xffffffffc29c3e65
0x00000000000d58cd : call 0xffffffffc2e1683c
0x00000000000a5a94 : call 0xffffffffc30a5aa4
0x00000000000a9c86 : call 0xffffffffc30f29dc
0x00000000000a9c9f : call 0xffffffffc30f29f5
0x00000000000470a0 : call 0xffffffffc33db8aa
0x000000000010d970 : call 0xffffffffc34a217a
0x000000000010dc0c : call 0xffffffffc34a2416
0x00000000000ac5ac : call 0xffffffffc3670712
0x000000000010f588 : call 0xffffffffc39a4192
0x000000000016adc5 : call 0xffffffffc39cbcde
0x000000000016be45 : call 0xffffffffc39ccd5e
0x00000000000372fd : call 0xffffffffc3b2824e
0x000000000008edb7 : call 0xffffffffc3d97708
0x0000000000088ec7 : call 0xffffffffc4011818
0x000000000008a6c7 : call 0xffffffffc4013018
0x00000000000b253c : call 0xffffffffc7446d49
0x00000000000c677d : call 0xffffffffde966787
0x0000000000034f57 : call 0xffffffffe28511e7
0x00000000001b89d8 : call 0xffffffffe81b81be
0x000000000005cba9 : call 0xfffffffffa0e517b
0x000000000010dba1 : call 0xffffffffff9623ae
0x000000000013611e : call qword ptr [r10]
0x000000000007d8af : call qword ptr [r15]
0x00000000001876b3 : call qword ptr [rax + 0x10fff229]
0x0000000000194fbb : call qword ptr [rax + 0x10fffc53]
0x0000000000194fb3 : call qword ptr [rax + 0x10fffc54]
0x0000000000194fab : call qword ptr [rax + 0x10fffc55]
0x0000000000194fa3 : call qword ptr [rax + 0x10fffc56]
0x0000000000194f9b : call qword ptr [rax + 0x10fffc57]
0x000000000019597b : call qword ptr [rax + 0x10fffc9f]
0x0000000000195973 : call qword ptr [rax + 0x10fffca0]
0x000000000019596b : call qword ptr [rax + 0x10fffca1]
0x0000000000195963 : call qword ptr [rax + 0x10fffca2]
0x000000000019595b : call qword ptr [rax + 0x10fffca3]
0x0000000000195993 : call qword ptr [rax + 0x10fffca4]
0x000000000019449f : call qword ptr [rax + 0x10fffda3]
0x00000000001944a7 : call qword ptr [rax + 0x10fffda4]
0x00000000001944af : call qword ptr [rax + 0x10fffda5]
0x000000000019462b : call qword ptr [rax + 0x20fffbe5]
0x0000000000194a6b : call qword ptr [rax + 0x20fffc34]
0x00000000001949cb : call qword ptr [rax + 0x20fffc35]
0x0000000000194d83 : call qword ptr [rax + 0x20fffc5c]
0x0000000000194b6b : call qword ptr [rax + 0x20fffc5f]
0x000000000019526f : call qword ptr [rax + 0x20fffc84]
0x0000000000195057 : call qword ptr [rax + 0x20fffc87]
0x0000000000195767 : call qword ptr [rax + 0x20fffcab]
0x0000000000073ed7 : call qword ptr [rax + 0x80]
0x0000000000194b3f : call qword ptr [rax - 0x1f0003e0]
0x0000000000194aeb : call qword ptr [rax - 0x1f0003e7]
0x0000000000194973 : call qword ptr [rax - 0x1f00040c]
0x000000000019491f : call qword ptr [rax - 0x1f000413]
0x00000000001947a7 : call qword ptr [rax - 0x1f000438]
0x0000000000194753 : call qword ptr [rax - 0x1f00043f]
0x000000000019430f : call qword ptr [rax - 0x1f0004a4]
0x000000000018896f : call qword ptr [rax - 0x1f000bae]
0x000000000018853f : call qword ptr [rax - 0x1f000bb4]
0x0000000000174c8f : call qword ptr [rax - 0x2f00148e]
0x00000000000348fc : call qword ptr [rax - 0x3d]
0x00000000001871ff : call qword ptr [rax - 0x4f000e16]
0x00000000001871df : call qword ptr [rax - 0x4f000e17]
0x00000000001871bf : call qword ptr [rax - 0x4f000e18]
0x000000000019449b : call qword ptr [rax - 0x6f00025e]
0x00000000001949c7 : call qword ptr [rax - 0x6f0003cd]
0x00000000001874b7 : call qword ptr [rax]
0x000000000017378e : call qword ptr [rbx]
0x0000000000186cfb : call qword ptr [rcx - 0x12]
0x00000000001944df : call qword ptr [rcx - 0x2e00024b]
0x00000000001884cf : call qword ptr [rcx]
0x0000000000195eab : call qword ptr [rdi + rbp*2 - 0x745c0000]
0x000000000019a1e3 : call qword ptr [rdi + rbx + 2]
0x000000000007d8b0 : call qword ptr [rdi]
0x0000000000194c17 : call qword ptr [rdx + 0x22fffc61]
0x0000000000195143 : call qword ptr [rdx + 0x22fffc82]
0x000000000019584b : call qword ptr [rdx + 0x22fffc9d]
0x000000000019563b : call qword ptr [rdx + 0x22fffca9]
0x0000000000088674 : call qword ptr [rdx]
0x0000000000194bb3 : call qword ptr [rsi + 0x26fffc5e]
0x000000000019509f : call qword ptr [rsi + 0x26fffc86]
0x0000000000195597 : call qword ptr [rsi + 0x26fffcad]
0x00000000000093a8 : call qword ptr [rsi]
0x0000000000188798 : call qword ptr [rsp + rsi*8 - 1]
0x0000000000024075 : call r12
0x0000000000021be2 : call r14
0x0000000000023e55 : call r15
0x000000000006cb4b : call r8
0x0000000000113d6f : call r9
0x000000000011eebc : call rax
0x000000000002da78 : call rbx
0x000000000002b398 : call rcx
0x0000000000023e56 : call rdi
0x0000000000039fce : call rdx
0x0000000000021be3 : call rsi
0x0000000000024076 : call rsp
0x000000000012eef9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x000000000002c534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001ad231 : cdq ; hlt ; jmp qword ptr [rcx]
0x000000000003a6a4 : cdq ; idiv rsi ; ret
0x0000000000184700 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000711f3 : cdq ; or eax, 0xc2890000 ; jmp 0x7118f
0x00000000001885f8 : cdq ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00000000000fa963 : cdq ; ret
0x0000000000127ad3 : cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fb5fe : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000012356d : cdqe ; shr rax, 4 ; ret
0x0000000000061d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000000818d3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000fcf28 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000517ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000002b0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x000000000005715d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000abe18 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000070cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000094e33 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x0000000000098ef6 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x0000000000033390 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000c1800 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000a9d14 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000122435 : clc ; add eax, 0x10 ; ret
0x00000000000c1bb9 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x000000000012d1b1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009e666 : clc ; add rax, r8 ; ret
0x000000000008dd48 : clc ; add rax, rcx ; ret
0x0000000000115882 : clc ; add rsp, 8 ; ret
0x00000000001b2018 : clc ; and dh, dh ; jmp qword ptr [rsi]
0x000000000002df21 : clc ; and eax, 0x7f ; ret
0x00000000001187c7 : clc ; and eax, 0xffffff ; ret
0x00000000001187a1 : clc ; bswap eax ; ret
0x00000000001bacf2 : clc ; call qword ptr [rax]
0x00000000001ba992 : clc ; call qword ptr [rbx]
0x00000000001bb772 : clc ; call qword ptr [rcx]
0x00000000001bb34a : clc ; call qword ptr [rdi]
0x00000000001ba272 : clc ; call qword ptr [rdx]
0x00000000001bb46a : clc ; call rcx
0x00000000001997f2 : clc ; call rsp
0x0000000000122411 : clc ; cmc ; je 0x12240d ; pop rbx ; ret
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016ee19 : clc ; cmp rcx, rax ; jne 0x16ee4b ; xor eax, eax ; ret
0x000000000016ee18 : clc ; cmp rcx, rax ; jne 0x16ee4c ; xor eax, eax ; ret
0x000000000016fc59 : clc ; cmp rcx, rax ; jne 0x16fc8b ; xor eax, eax ; ret
0x000000000016fc58 : clc ; cmp rcx, rax ; jne 0x16fc8c ; xor eax, eax ; ret
0x000000000003a6a2 : clc ; cqo ; idiv rsi ; ret
0x0000000000086d20 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000078b0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fda03 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002db97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013f4c2 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000962d5 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fe37f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00000000001051e5 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000004d6d4 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed90 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000137819 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000075f7d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000019977a : clc ; dec esp ; iretd ; add dword ptr [rax], eax ; je 0x19979a ; clc ; jmp rsp
0x0000000000199aaa : clc ; inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x00000000000ff1a9 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000002b76b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000001998da : clc ; inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x0000000000026cfe : clc ; jg 0x26c8d ; ret 0x5c77
0x00000000001b9f22 : clc ; jmp qword ptr [rbx]
0x00000000001ba2ba : clc ; jmp qword ptr [rcx]
0x000000000019985a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x00000000000bf505 : clc ; jmp rax
0x0000000000199782 : clc ; jmp rsp
0x0000000000171c3a : clc ; jne 0x171d47 ; ret
0x0000000000171c39 : clc ; jne 0x171d48 ; ret
0x00000000000939f7 : clc ; jne 0x938d1 ; ret
0x00000000001147f4 : clc ; leave ; ret
0x0000000000185518 : clc ; loope 0x18551d ; jmp qword ptr [rdi]
0x0000000000185598 : clc ; loope 0x18559d ; jmp qword ptr [rdi]
0x0000000000185618 : clc ; loope 0x18561d ; jmp qword ptr [rdi]
0x0000000000185698 : clc ; loope 0x18569d ; jmp qword ptr [rdi]
0x0000000000185718 : clc ; loope 0x18571d ; jmp qword ptr [rdi]
0x0000000000185798 : clc ; loope 0x18579d ; jmp qword ptr [rdi]
0x00000000000fe6d8 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009de68 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000183362 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000019d998 : clc ; mov cl, ch ; jmp rsp
0x0000000000151e17 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152787 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a087 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152987 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000159ff7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152b87 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000159f67 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000151e33 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009efdc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000004a1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000002121c : clc ; neg eax ; ret
0x000000000008a817 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000008a7c1 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00000000001afee8 : clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000009e966 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000967ab : clc ; pop rbx ; ret
0x000000000007469a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000141daf : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c7dfd : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000484c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000114f81 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000072cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007b595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000199a82 : clc ; push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x00000000001b95a8 : clc ; push rdi ; call qword ptr [rdx]
0x0000000000002bd1 : clc ; ret
0x0000000000193732 : clc ; ret 0x6e1f
0x00000000001187b1 : clc ; ror ax, 8 ; ret
0x00000000000038ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003a633 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000001184ab : clc ; sar rax, 6 ; ret
0x00000000000d4381 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001b1ec8 : clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001aa1c8 : clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x0000000000048a2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000118847 : clc ; shr eax, 0x18 ; ret
0x00000000001735ce : clc ; std ; ja 0x17359e ; call 0x1f8ae
0x0000000000194981 : clc ; sti ; call rax
0x00000000001876b0 : clc ; sub edx, esi ; call qword ptr [rax + 0x10fff229]
0x0000000000149a5c : clc ; sub rax, r8 ; ret
0x0000000000149cb1 : clc ; sub rax, rdx ; ret
0x000000000002b392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00000000001ac234 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00000000001a05ac : cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x000000000019744d : cld ; add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00000000000cce72 : cld ; add byte ptr [rax], al ; ret
0x0000000000127763 : cld ; add ch, byte ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000aa06f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aa08f : cld ; add eax, dword ptr [rax] ; ret
0x00000000001afd34 : cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afc34 : cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001afa34 : cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000194fba : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000194fb2 : cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000194faa : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000194fa2 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000194f9a : cld ; call qword ptr [rax + 0x10fffc57]
0x000000000019597a : cld ; call qword ptr [rax + 0x10fffc9f]
0x0000000000195972 : cld ; call qword ptr [rax + 0x10fffca0]
0x000000000019596a : cld ; call qword ptr [rax + 0x10fffca1]
0x0000000000195962 : cld ; call qword ptr [rax + 0x10fffca2]
0x000000000019595a : cld ; call qword ptr [rax + 0x10fffca3]
0x0000000000195992 : cld ; call qword ptr [rax + 0x10fffca4]
0x0000000000194a6a : cld ; call qword ptr [rax + 0x20fffc34]
0x00000000001949ca : cld ; call qword ptr [rax + 0x20fffc35]
0x0000000000194d82 : cld ; call qword ptr [rax + 0x20fffc5c]
0x0000000000194b6a : cld ; call qword ptr [rax + 0x20fffc5f]
0x000000000019526e : cld ; call qword ptr [rax + 0x20fffc84]
0x0000000000195056 : cld ; call qword ptr [rax + 0x20fffc87]
0x0000000000195766 : cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000194b3e : cld ; call qword ptr [rax - 0x1f0003e0]
0x0000000000194aea : cld ; call qword ptr [rax - 0x1f0003e7]
0x00000000001949c6 : cld ; call qword ptr [rax - 0x6f0003cd]
0x000000000019480e : cld ; call qword ptr [rax]
0x0000000000194c16 : cld ; call qword ptr [rdx + 0x22fffc61]
0x0000000000195142 : cld ; call qword ptr [rdx + 0x22fffc82]
0x000000000019584a : cld ; call qword ptr [rdx + 0x22fffc9d]
0x000000000019563a : cld ; call qword ptr [rdx + 0x22fffca9]
0x0000000000194c36 : cld ; call qword ptr [rdx]
0x0000000000194bb2 : cld ; call qword ptr [rsi + 0x26fffc5e]
0x000000000019509e : cld ; call qword ptr [rsi + 0x26fffc86]
0x0000000000195596 : cld ; call qword ptr [rsi + 0x26fffcad]
0x0000000000194b92 : cld ; call qword ptr [rsi]
0x0000000000194afa : cld ; call rax
0x0000000000194c26 : cld ; call rdx
0x0000000000194bc2 : cld ; call rsi
0x0000000000194cee : cld ; call rsp
0x000000000005c467 : cld ; cmove rsi, r9 ; jmp 0x5c436
0x0000000000171d32 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d48 ; xor eax, eax ; ret
0x0000000000171d31 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d49 ; xor eax, eax ; ret
0x000000000013f4be : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000e2709 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e32ec : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x0000000000194cca : cld ; dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x0000000000035057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000196cf9 : cld ; in eax, dx ; call rsp
0x000000000019480a : cld ; inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x0000000000194ae6 : cld ; inc dword ptr [rax + 0x18] ; cld ; call qword ptr [rax - 0x1f0003e7]
0x0000000000194b3a : cld ; inc dword ptr [rax + 0x1f] ; cld ; call qword ptr [rax - 0x1f0003e0]
0x000000000019528a : cld ; inc dword ptr [rax + 0x20fffc81] ; ja 0x195298 ; jmp rax
0x00000000001949ae : cld ; inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000194a36 : cld ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x0000000000194a9e : cld ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x0000000000194a06 : cld ; inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x0000000000194a0a : cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x0000000000194b76 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019548a : cld ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00000000001948c6 : cld ; inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00000000001948ca : cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x000000000019485a : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000019555a : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x0000000000195772 : cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x0000000000195062 : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x000000000019527a : cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00000000001948a6 : cld ; inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00000000001947d2 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000001959be : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195762 : cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000195052 : cld ; inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x0000000000194d7e : cld ; inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x0000000000194f8e : cld ; inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00000000001949b2 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000194a56 : cld ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x000000000019526a : cld ; inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x0000000000194fce : cld ; inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00000000000aa127 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aa04e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001953fe : cld ; inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00000000000e33d9 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000121f19 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001951d6 : cld ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x0000000000194cea : cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x0000000000194c22 : cld ; inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x0000000000195646 : cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x0000000000195636 : cld ; inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x0000000000194bbe : cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00000000001955a2 : cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00000000001950aa : cld ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x0000000000194bae : cld ; inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x0000000000195592 : cld ; inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x000000000019509a : cld ; inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x0000000000194b1a : cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x0000000000194b06 : cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00000000001954c6 : cld ; inc eax ; ja 0x1954d0 ; push qword ptr [rax] ; ja 0x1954d4 ; call rax
0x000000000019557a : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000187395 : cld ; int1 ; call qword ptr [rax]
0x0000000000187391 : cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00000000000ce95b : cld ; je 0xce978 ; call 0x8ab75
0x00000000001952ca : cld ; jmp qword ptr [rax + 0x16fffc77]
0x0000000000195012 : cld ; jmp qword ptr [rax + 0x20fffc35]
0x0000000000194fd6 : cld ; jmp qword ptr [rax + 0x20fffc36]
0x000000000019501a : cld ; jmp qword ptr [rax + 0x20fffc38]
0x0000000000194fde : cld ; jmp qword ptr [rax + 0x20fffc39]
0x0000000000195022 : cld ; jmp qword ptr [rax + 0x20fffc3b]
0x0000000000194fe6 : cld ; jmp qword ptr [rax + 0x20fffc3c]
0x000000000019502a : cld ; jmp qword ptr [rax + 0x20fffc3e]
0x0000000000194fee : cld ; jmp qword ptr [rax + 0x20fffc3f]
0x0000000000195032 : cld ; jmp qword ptr [rax + 0x20fffc41]
0x0000000000194ff6 : cld ; jmp qword ptr [rax + 0x20fffc42]
0x000000000019503a : cld ; jmp qword ptr [rax + 0x20fffc44]
0x0000000000194ffe : cld ; jmp qword ptr [rax + 0x20fffc45]
0x0000000000195042 : cld ; jmp qword ptr [rax + 0x20fffc47]
0x0000000000195006 : cld ; jmp qword ptr [rax + 0x20fffc48]
0x0000000000194f7a : cld ; jmp qword ptr [rax + 0x20fffc53]
0x0000000000194f72 : cld ; jmp qword ptr [rax + 0x20fffc54]
0x0000000000194f6a : cld ; jmp qword ptr [rax + 0x20fffc55]
0x0000000000194f62 : cld ; jmp qword ptr [rax + 0x20fffc56]
0x0000000000194f5a : cld ; jmp qword ptr [rax + 0x20fffc57]
0x0000000000194f92 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x0000000000195952 : cld ; jmp qword ptr [rax + 0x20fffca4]
0x000000000019485e : cld ; jmp qword ptr [rax]
0x00000000001a862a : cld ; jmp qword ptr [rbx]
0x000000000019533a : cld ; jmp qword ptr [rdx + 0x22fffc79]
0x0000000000195332 : cld ; jmp qword ptr [rdx + 0x22fffc7a]
0x000000000019532a : cld ; jmp qword ptr [rdx + 0x22fffc7b]
0x0000000000195322 : cld ; jmp qword ptr [rdx + 0x22fffc7c]
0x000000000019531a : cld ; jmp qword ptr [rdx + 0x22fffc7d]
0x0000000000194c1a : cld ; jmp qword ptr [rdx]
0x0000000000194b8e : cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x0000000000194bb6 : cld ; jmp qword ptr [rsi]
0x00000000001947d6 : cld ; jmp rax
0x0000000000194c4a : cld ; jmp rdx
0x0000000000194ba6 : cld ; jmp rsi
0x0000000000194cd2 : cld ; jmp rsp
0x000000000016fa66 : cld ; jne 0x16fc9f ; xor eax, eax ; ret
0x0000000000171d35 : cld ; jne 0x171d45 ; xor eax, eax ; ret
0x0000000000171d34 : cld ; jne 0x171d46 ; xor eax, eax ; ret
0x0000000000171c55 : cld ; jne 0x171d47 ; ret
0x0000000000171c54 : cld ; jne 0x171d48 ; ret
0x000000000019580a : cld ; lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x0000000000194e0a : cld ; ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00000000001525a2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001527a5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001529a5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152ba5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009efee : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005f80b : cld ; mov ebx, 2 ; jmp 0x5baf8
0x000000000014cf68 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000001521d6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a216 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001523b6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a196 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152596 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a116 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000151ff6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a296 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009dd51 : cld ; mov rax, rdi ; ret
0x000000000004a18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000abe3a : cld ; pop rbx ; ret
0x0000000000194b16 : cld ; push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x0000000000194b02 : cld ; push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x0000000000194b72 : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x000000000019505e : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x000000000019576e : cld ; push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x0000000000195556 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000194d8a : cld ; push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x0000000000195402 : cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00000000001957be : cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00000000001959c2 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001947ee : cld ; push qword ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000194876 : cld ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00000000001954ca : cld ; push qword ptr [rax] ; ja 0x1954d0 ; call rax
0x00000000001952c6 : cld ; push qword ptr [rax] ; js 0x1952d0 ; jmp qword ptr [rax + 0x16fffc77]
0x0000000000194f56 : cld ; push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x0000000000194cce : cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00000000001951d2 : cld ; push qword ptr [rdi + rax*4 - 0x78bb0004] ; cld ; call rsp
0x0000000000194ce6 : cld ; push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x0000000000195642 : cld ; push qword ptr [rdx + 0x42fffca8] ; test al, 0xfc ; call rdx
0x0000000000195316 : cld ; push qword ptr [rdx] ; jle 0x195320 ; jmp qword ptr [rdx + 0x22fffc7d]
0x0000000000194bba : cld ; push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00000000001950a6 : cld ; push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x000000000019559e : cld ; push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x000000000019508e : cld ; push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x0000000000194896 : cld ; push rax ; add bh, ah ; call rax
0x00000000001b0034 : cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001948fa : cld ; push rax ; add edi, esp ; jmp rax
0x00000000001947f2 : cld ; push rax ; add esp, edi ; call rax
0x0000000000195286 : cld ; push rax ; cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00000000001957ba : cld ; push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x000000000019598e : cld ; push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x0000000000194996 : cld ; push rax ; sub edi, esp ; call rax
0x00000000001b0334 : cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b7 ; cmc ; jmp qword ptr [rcx]
0x000000000004a192 : cld ; ret
0x00000000000464a0 : cld ; ret 0x37
0x000000000019498d : cld ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000019494d : cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x0000000000182816 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000ba69e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a1 ; ret
0x0000000000198cd4 : cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00000000000d45b5 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45dc
0x00000000000857a9 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000003ad3d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000bba3d : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bb9be : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000085986 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000cc649 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000bc85b : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c2d6a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000074078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000123b2e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00000000000a9db2 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000026485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000a9a5b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000009f00c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c1cf9 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00000000000baf0a : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003791 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3779 ; ret 0x975
0x00000000000fe730 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000fedd1 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000001a5f2a : cli ; call qword ptr [rax]
0x00000000001a7172 : cli ; call qword ptr [rdi]
0x000000000008755a : cli ; call rax
0x00000000000e4433 : cli ; call rcx
0x000000000019a3e2 : cli ; call rsp
0x00000000000f59d5 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003aa01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000019a5fa : cli ; dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x000000000019a852 : cli ; dec dword ptr [rcx + rcx*2 + 0x66340002] ; cli ; call rsp
0x00000000000e328c : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000019a552 : cli ; dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x000000000019a74a : cli ; dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x000000000019aada : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x000000000019a59a : cli ; inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x000000000019a3da : cli ; inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x000000000014cf2b : cli ; jg 0x14cf3e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d41b : cli ; jg 0x14d42e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d7bb : cli ; jg 0x14d7ce ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000171e51 : cli ; jg 0x171e63 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009efc7 : cli ; jg 0x9efda ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009f71a : cli ; jg 0x9f72d ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009fe67 : cli ; jg 0x9fe7a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a9a26 : cli ; jg 0xa9a38 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018b586 : cli ; jmp qword ptr [rax - 0x4700059e]
0x000000000019edf2 : cli ; jmp qword ptr [rcx]
0x000000000019aa52 : cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x000000000019aa5a : cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00000000001a715a : cli ; jmp qword ptr [rdi]
0x000000000018a4ba : cli ; jmp rax
0x000000000019a47a : cli ; jmp rsp
0x000000000019a6da : cli ; lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x000000000019aa3a : cli ; lcall ptr [rsi + rdx*2 - 0x40abfffe] ; cli ; jmp rsp
0x000000000019a70a : cli ; ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x000000000019a8a2 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8ae ; call rsp
0x00000000001529a8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013b942 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000009dd37 : cli ; mov rax, rdi ; ret
0x0000000000063b65 : cli ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x000000000011c300 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008e138 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000145366 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ba716 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003d322 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000184c81 : cli ; push 0x6e ; ja 0x184c0e ; ret 0x48f
0x000000000018a4b6 : cli ; push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x000000000019a472 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x0000000000195950 : cli ; pushfq ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x000000000002cb2f : cli ; ret
0x00000000000bb9dc : cli ; ret 0x10
0x00000000000fc442 : cli ; ret 0x2c
0x0000000000183725 : cli ; ret 0xac65
0x00000000000d437e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000113ebb : cli ; setae al ; ret
0x000000000008ac49 : cli ; test rdx, rdx ; je 0x8ac69 ; bsf rax, rdx ; ret
0x000000000008ae18 : cli ; test rdx, rdx ; je 0x8ae49 ; bsf rax, rdx ; ret
0x000000000018236a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000c0d4e : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001bb886 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bb8a6 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x00000000001498d8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001aa49d : cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aa485 : cmc ; add byte ptr [rax], al ; call 0x221a96b6
0x00000000001aa484 : cmc ; add byte ptr [rax], al ; call 0x221a96b7
0x00000000000ab0e7 : cmc ; add byte ptr [rax], al ; ret
0x00000000001aa515 : cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aa52d : cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000199d05 : cmc ; add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x000000000017455a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188f1e : cmc ; call qword ptr [rax]
0x0000000000189206 : cmc ; call qword ptr [rbx]
0x0000000000188e72 : cmc ; call qword ptr [rcx]
0x00000000001891fa : cmc ; call qword ptr [rdi]
0x00000000001aec6a : cmc ; call qword ptr [rdx]
0x00000000001b015a : cmc ; call qword ptr [rsi]
0x0000000000188de2 : cmc ; call rax
0x00000000001b0de2 : cmc ; call rdi
0x0000000000189422 : cmc ; call rdx
0x00000000001892da : cmc ; call rsi
0x0000000000189032 : cmc ; call rsp
0x00000000000f36b1 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8a01 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000188f1a : cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000188f16 : cmc ; dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189046 : cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x000000000019832a : cmc ; dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00000000001983d2 : cmc ; dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00000000001893fe : cmc ; inc eax ; mov dr0, ebp ; call rsi
0x0000000000122412 : cmc ; je 0x12240c ; pop rbx ; ret
0x0000000000189412 : cmc ; jmp qword ptr [rbx]
0x000000000018940a : cmc ; jmp qword ptr [rcx]
0x00000000001aee52 : cmc ; jmp qword ptr [rdx]
0x0000000000188dee : cmc ; jmp rax
0x00000000001b0762 : cmc ; jmp rdi
0x0000000000198332 : cmc ; jmp rsp
0x0000000000101406 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000188dda : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x0000000000188de6 : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x0000000000188e5e : cmc ; lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x0000000000198402 : cmc ; ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x00000000001850a9 : cmc ; mov ch, 0xab ; ret
0x000000000015a19a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015222e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000171243 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006e291 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000181f57 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000007818d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001982d2 : cmc ; push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00000000001892ea : cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x000000000018904a : cmc ; push rsp ; cmc ; call rsp
0x0000000000188744 : cmc ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00000000000c8353 : cmc ; ret
0x0000000000194939 : cmc ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x0000000000171247 : cmc ; sub eax, edx ; ret
0x00000000001846e5 : cmc ; xlatb ; ret 0x4e27
0x00000000000e9e01 : cmova eax, edx ; ret
0x00000000000bbb11 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007d0b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008a8a7 : cmovae eax, ecx ; ret
0x000000000004a5c1 : cmovae eax, edi ; ret
0x0000000000107ecc : cmovae eax, esi ; ret
0x00000000000038a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007d0b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a5c0 : cmovae rax, rdi ; ret
0x0000000000107ecb : cmovae rax, rsi ; ret
0x000000000003ac7f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000006b2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f5d5b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000096db9 : cmove eax, ebx ; pop rbx ; ret
0x0000000000074f51 : cmove eax, ecx ; ret
0x000000000013b71a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008ec78 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000bb852 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f6b40 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000086d23 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002d90b : cmove eax, edx ; ret
0x00000000000d6061 : cmove eax, esi ; ret
0x000000000009de01 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00000000000b96e8 : cmove esi, ecx ; call 0x8e809
0x000000000005c469 : cmove esi, ecx ; jmp 0x5c434
0x0000000000074f50 : cmove r8, rcx ; ret
0x00000000000f5d5a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000096db8 : cmove rax, rbx ; pop rbx ; ret
0x00000000000abc74 : cmove rax, rcx ; ret
0x000000000013b719 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008ec89 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bb851 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000086d22 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002d90a : cmove rax, rdx ; ret
0x000000000005c468 : cmove rsi, r9 ; jmp 0x5c435
0x0000000000071bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x71bf9 ; ret
0x000000000007af3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x00000000000ca254 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079943 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aa04 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000110011 : cmovne eax, ecx ; ret
0x00000000000968db : cmovne eax, edi ; ret
0x000000000013fc66 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000088f53 : cmovne eax, edx ; ret
0x000000000010ffa4 : cmovne eax, esi ; ret
0x00000000001001c7 : cmovne ebx, eax ; call 0xfc3e5
0x000000000003aa03 : cmovne rax, rbx ; pop rbx ; ret
0x00000000000968da : cmovne rax, rdi ; ret
0x000000000013fc65 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000088f52 : cmovne rax, rdx ; ret
0x00000000001001c6 : cmovne rbx, rax ; call 0xfc3e6
0x000000000010e122 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000010e121 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000127e60 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x000000000004ed5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000059434 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x000000000009dd73 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000003a6f6 : cmovs eax, edx ; pop rbx ; ret
0x0000000000023b8c : cmovs eax, edx ; ret
0x000000000009a4d4 : cmovs ebp, dword ptr [rcx] ; ret
0x000000000007fb81 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000012ee58 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x0000000000099043 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000aa0a6 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000005c466 : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c437
0x0000000000194fdd : cmp ah, bh ; jmp qword ptr [rax + 0x20fffc39]
0x000000000019501d : cmp ah, bh ; jmp qword ptr [rax]
0x0000000000149bd3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149a48 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149aaf : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000001ae398 : cmp ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001021a1 : cmp al, 0x24 ; call rbx
0x000000000014292c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00000000001284a5 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001ade74 : cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x0000000000038fed : cmp al, 0x33 ; call rax
0x00000000000967a5 : cmp al, 0x3d ; jne 0x967df ; mov rax, rdi ; pop rbx ; ret
0x00000000000d0b2c : cmp al, 0x3f ; jne 0xd0af1 ; mov eax, 1 ; ret
0x00000000000d0b44 : cmp al, 0x3f ; jne 0xd0b0e ; mov eax, 1 ; ret
0x0000000000183360 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001af974 : cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001aff74 : cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000194e10 : cmp al, 0x51 ; cld ; jmp rdx
0x00000000001b2074 : cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008af60 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00000000000e0e9a : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x0000000000199524 : cmp al, 0xc3 ; add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000001a8074 : cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x0000000000188454 : cmp al, 0xdc ; ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x0000000000098fc0 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00000000001a7439 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001b2911 : cmp al, 0xf6 ; call qword ptr [rax]
0x0000000000194980 : cmp al, 0xfb ; call rax
0x00000000001942d5 : cmp al, 0xfb ; inc dword ptr [rax] ; sti ; call rax
0x000000000019744c : cmp al, 0xfc ; add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x0000000000194fe9 : cmp al, 0xfc ; jmp qword ptr [rax]
0x00000000000ad7c6 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016fa43 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5d40 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000713fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000005ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001f92c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000203de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a45 : cmp al, byte ptr [rax] ; ret
0x00000000000dd74c : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x0000000000197e1d : cmp al, byte ptr [rcx] ; add byte ptr [rsp - 0xd], dl ; jmp rsp
0x00000000000f00c9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x0000000000171706 : cmp al, byte ptr [rsi - 1] ; jne 0x17172c ; xor eax, eax ; ret
0x0000000000033504 : cmp al, ch ; xchg eax, esi ; ret
0x000000000008df76 : cmp al, dh ; ret
0x000000000008df75 : cmp al, r14b ; ret
0x0000000000034f16 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00000000001ae1a8 : cmp bh, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000195021 : cmp bh, ah ; jmp qword ptr [rax + 0x20fffc3b]
0x000000000010ff6a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001942d1 : cmp bh, bl ; jmp qword ptr [rax]
0x000000000010ffa2 : cmp bh, cl ; cmovne eax, esi ; ret
0x000000000019430d : cmp bl, bh ; call qword ptr [rax - 0x1f0004a4]
0x0000000000111fa8 : cmp bl, ch ; ret
0x0000000000062808 : cmp bl, ch ; ret 0x8148
0x000000000005fb89 : cmp bl, ch ; ret 0x858b
0x0000000000094123 : cmp bl, dh ; ret
0x0000000000130e53 : cmp bpl, byte ptr [r9] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000ab096 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000073d1b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000e6fd9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010eb89 : cmp byte ptr [r8], r9b ; je 0x10ebb3 ; mov rdx, r8 ; jmp 0x10eba3
0x000000000004b82a : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000f1bce : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008ebaf : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000024ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000134ce6 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008dfb7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000bb2c7 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000d96b7 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000025f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d8d51 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d8d50 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000335d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000102154 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000e8b3b : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000073d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000011184f : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f3636 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000efc40 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012b630 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012d24e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000133511 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000005e8b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000fe612 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016c018 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008dfa6 : cmp byte ptr [rax], ah ; ret
0x00000000000de53a : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001947d0 : cmp byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x000000000007b563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x00000000000368bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036874 : cmp byte ptr [rax], al ; ret
0x000000000010e87f : cmp byte ptr [rax], bh ; je 0x10e8ae ; mov rdx, rax ; jmp 0x10e89b
0x00000000001382d9 : cmp byte ptr [rax], bl ; je 0x1382e4 ; ret
0x000000000010eb8a : cmp byte ptr [rax], cl ; je 0x10ebb2 ; mov rdx, r8 ; jmp 0x10eba2
0x00000000000e6fda : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088f50 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009e556 : cmp byte ptr [rax], dh ; ret
0x000000000010e87e : cmp byte ptr [rax], dil ; je 0x10e8af ; mov rdx, rax ; jmp 0x10e89c
0x000000000008df96 : cmp byte ptr [rax], dl ; ret
0x000000000008df95 : cmp byte ptr [rax], r10b ; ret
0x000000000008dfa5 : cmp byte ptr [rax], r12b ; ret
0x000000000009e555 : cmp byte ptr [rax], r14b ; ret
0x0000000000088f4f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ab09a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000ab099 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000010e880 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10e89a
0x0000000000142a9a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x00000000001053de : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000d7d28 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001afc38 : cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x000000000002cb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000cd4ea : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001aa9e4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001b3008 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000000ab097 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000072ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000bd899 : cmp byte ptr [rcx + 1], cl ; ret
0x00000000000d70c5 : cmp byte ptr [rcx + 8], 2 ; jne 0xd70a7 ; jmp 0xd7097
0x00000000000b1203 : cmp byte ptr [rcx - 0x17d7dbb4], cl ; ret
0x00000000000fd166 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000ead4c : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000040195 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000001ae7a5 : cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ae7bd : cmp byte ptr [rcx], al ; add al, dh ; std ; hlt ; jmp qword ptr [rcx]
0x000000000016c019 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a7154 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000001a7648 : cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x0000000000002054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000001afe58 : cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000003a6c8 : cmp byte ptr [rdi], 0 ; jne 0x3a6d6 ; pop rbx ; ret
0x00000000001b2a80 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rbx]
0x00000000000989a7 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x000000000007b528 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000db9e8 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000016e2ed : cmp byte ptr [rdi], dl ; ret
0x000000000016ee00 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016ede9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016edd2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016d88e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019a59d : cmp byte ptr [rdx], al ; add ah, dh ; cli ; jmp rsp
0x00000000001aa608 : cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00000000001afd38 : cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001aed18 : cmp byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000130e54 : cmp ch, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000149ab2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000019cbf9 : cmp ch, cl ; call qword ptr [rax]
0x000000000019cc29 : cmp ch, cl ; call qword ptr [rsi]
0x00000000000e0410 : cmp cl, 0x11 ; je 0xe0452 ; mov rdx, rax ; jmp 0xe03b6
0x00000000000bb088 : cmp cl, al ; call 0xffffffff89cdd9b3
0x00000000000804c6 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000d9fcf : cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000000001330a7 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010d262 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012a013 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000004727c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000d671e : cmp cl, byte ptr [rsi] ; je 0xd66bb ; pop rbx ; ret
0x000000000003ca26 : cmp cl, ch ; ret
0x00000000000df308 : cmp cl, ch ; ret 0xfffe
0x000000000010ffe3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001ae838 : cmp dh, bh ; hlt ; jmp rdi
0x000000000003a6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a06e5 : cmp dh, dh ; ret 0x7501
0x000000000011000f : cmp dh, dl ; cmovne eax, ecx ; ret
0x000000000010ff69 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001942d0 : cmp dil, bl ; jmp qword ptr [rax]
0x000000000010ffa1 : cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000077898 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x0000000000171e90 : cmp dl, 1 ; jb 0x171e9e ; mov byte ptr [rdi], cl ; ret
0x000000000009f00b : cmp dl, 1 ; jb 0x9f01d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009f75e : cmp dl, 1 ; jb 0x9f770 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009feab : cmp dl, 1 ; jb 0x9febd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a9a5a : cmp dl, 1 ; jb 0xa9a68 ; mov byte ptr [rdi], cl ; ret
0x000000000008a862 : cmp dl, 3 ; je 0x8a88f ; movsx eax, dl ; ret
0x000000000008a862 : cmp dl, 3 ; je 0x8a890 ; movsx eax, dl ; ret
0x000000000008a861 : cmp dl, 3 ; je 0x8a891 ; movsx eax, dl ; ret
0x00000000001adf38 : cmp dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ac208 : cmp dl, bl ; jmp qword ptr [rcx]
0x0000000000002b86 : cmp dl, byte ptr [rdi] ; ret
0x0000000000072aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x000000000009c4f3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000143553 : cmp dword ptr [rax - 8], eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001382d8 : cmp dword ptr [rax], 0x18 ; je 0x1382e5 ; ret
0x000000000002cae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x397faf], dl ; ret
0x000000000002d9d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000029c95 : cmp dword ptr [rax], eax ; ret
0x0000000000035304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x00000000000d4fb2 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd4f49
0x0000000000159cd8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000011ff33 : cmp dword ptr [rcx + 0x2a], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000009486e : cmp dword ptr [rcx + 0x39], ecx ; ret
0x00000000000381ec : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00000000001ae915 : cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001ae84d : cmp dword ptr [rcx], eax ; add byte ptr [rax], dl ; push rsp ; call rsi
0x00000000001277ad : cmp dword ptr [rdi + 0x10], 2 ; je 0x1277be ; ret
0x00000000000773e4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b576 ; ret
0x00000000000ba670 : cmp dword ptr [rdi + 8], edx ; jne 0xba653 ; ret
0x0000000000113e58 : cmp dword ptr [rdi], 0 ; je 0x113e6e ; ret
0x0000000000114f6f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000088371 : cmp dword ptr [rip + 0x33d4f0], 0 ; je 0x88389 ; ret
0x00000000000e012b : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000132bd0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x132be8 ; xor eax, eax ; ret
0x00000000001018fd : cmp dword ptr [rsi], 0 ; je 0x10190e ; pop rbx ; ret
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f6a93 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000001382d7 : cmp dword ptr fs:[rax], 0x18 ; je 0x1382e6 ; ret
0x0000000000003ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000004b512 : cmp eax, 0x1445f1 ; call 0x777f7
0x00000000001aec65 : cmp eax, 0x1c480001 ; cmc ; call qword ptr [rdx]
0x00000000001aed15 : cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00000000001aed2d : cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x000000000011fb22 : cmp eax, 0x2a7bd5 ; call rax
0x000000000011f2c3 : cmp eax, 0x2a83d8 ; call rax
0x00000000001008bb : cmp eax, 0x2c2950 ; ret
0x0000000000197e6d : cmp eax, 0x32b40001 ; jmp rsp
0x0000000000114966 : cmp eax, 0x3948002b ; ret 0x840f
0x0000000000195029 : cmp eax, 0x3ea0fffc ; cld ; jmp qword ptr [rax]
0x00000000000e012c : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe011a
0x00000000000ccfeb : cmp eax, 0x7275 ; jne 0xccfd4 ; xor eax, eax ; ret
0x0000000000075bdf : cmp eax, 0x89000056 ; ret 0x98eb
0x00000000000967a6 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00000000000c7e0a : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000000fae6d : cmp eax, 0xa1 ; je 0xfae90 ; neg eax ; pop rbx ; ret
0x00000000000bf4fe : cmp eax, 0xc8571 ; add rax, rdi ; jmp rax
0x00000000000bd49a : cmp eax, 0xd00ef ; call 0x39777
0x0000000000122410 : cmp eax, 0xf5 ; je 0x12240e ; pop rbx ; ret
0x00000000001735cd : cmp eax, 0xfd ; ja 0x17359f ; call 0x1f8af
0x00000000000b593a : cmp eax, 0xff ; cmove eax, edx ; ret
0x0000000000141dae : cmp eax, 0xff ; je 0x141dc9 ; add rsp, 8 ; ret
0x0000000000072cba : cmp eax, 0xff ; je 0x72ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072cfe : cmp eax, 0xff ; je 0x72d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b594 : cmp eax, 0xff ; je 0x7b5a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf77 : cmp eax, 0xff ; je 0x7bf88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000114f80 : cmp eax, 0xff ; jne 0x114f7f ; xor eax, eax ; leave ; ret
0x00000000000484c4 : cmp eax, 0xff ; jne 0x484b9 ; mov rax, rdx ; ret
0x0000000000074699 : cmp eax, 0xff ; jne 0x746a6 ; pop rbx ; ret
0x000000000007bfcf : cmp eax, 0xff ; jne 0x7bfc0 ; pop rbx ; ret
0x0000000000104acf : cmp eax, 0xfffff000 ; ja 0x104ae8 ; ret
0x000000000010678f : cmp eax, 0xfffff000 ; ja 0x1067a8 ; ret
0x00000000001069d1 : cmp eax, 0xfffff000 ; ja 0x1069e7 ; ret
0x0000000000106a83 : cmp eax, 0xfffff000 ; ja 0x106a98 ; ret
0x0000000000106abd : cmp eax, 0xfffff000 ; ja 0x106ad8 ; ret
0x000000000010766e : cmp eax, 0xfffff000 ; ja 0x107687 ; ret
0x00000000001077ee : cmp eax, 0xfffff000 ; ja 0x107807 ; ret
0x0000000000107c88 : cmp eax, 0xfffff000 ; ja 0x107c97 ; ret
0x0000000000107d2a : cmp eax, 0xfffff000 ; ja 0x107d3f ; ret
0x0000000000107dda : cmp eax, 0xfffff000 ; ja 0x107def ; ret
0x0000000000114c3b : cmp eax, 0xfffff000 ; ja 0x114c50 ; ret
0x0000000000114ce8 : cmp eax, 0xfffff000 ; ja 0x114d12 ; ret
0x00000000001169ad : cmp eax, 0xfffff000 ; ja 0x1169c8 ; ret
0x0000000000116a5d : cmp eax, 0xfffff000 ; ja 0x116a78 ; ret
0x0000000000035429 : cmp eax, 0xfffff000 ; ja 0x35458 ; ret
0x0000000000035731 : cmp eax, 0xfffff000 ; ja 0x35748 ; ret
0x000000000003579d : cmp eax, 0xfffff000 ; ja 0x357b8 ; ret
0x00000000000357e7 : cmp eax, 0xfffff000 ; ja 0x357f7 ; ret
0x00000000000bb888 : cmp eax, 0xfffff000 ; ja 0xbb8a0 ; ret
0x00000000000c7828 : cmp eax, 0xfffff000 ; ja 0xc7840 ; pop rbx ; ret
0x00000000000c8aa2 : cmp eax, 0xfffff000 ; ja 0xc8ab7 ; ret
0x00000000000cb431 : cmp eax, 0xfffff000 ; ja 0xcb447 ; ret
0x00000000000cb4cb : cmp eax, 0xfffff000 ; ja 0xcb4df ; ret
0x00000000000cb5bc : cmp eax, 0xfffff000 ; ja 0xcb5cf ; ret
0x00000000000cc714 : cmp eax, 0xfffff000 ; ja 0xcc727 ; ret
0x00000000000cc784 : cmp eax, 0xfffff000 ; ja 0xcc797 ; ret
0x00000000000cc9d8 : cmp eax, 0xfffff000 ; ja 0xcc9e7 ; ret
0x00000000000cca58 : cmp eax, 0xfffff000 ; ja 0xcca67 ; ret
0x00000000000f6006 : cmp eax, 0xfffff000 ; ja 0xf6018 ; ret
0x00000000000f6055 : cmp eax, 0xfffff000 ; ja 0xf6068 ; ret
0x00000000000f60a6 : cmp eax, 0xfffff000 ; ja 0xf60b8 ; ret
0x00000000000f60fe : cmp eax, 0xfffff000 ; ja 0xf6118 ; ret
0x00000000000f6162 : cmp eax, 0xfffff000 ; ja 0xf6178 ; ret
0x00000000000f61bb : cmp eax, 0xfffff000 ; ja 0xf61d0 ; ret
0x00000000000f639a : cmp eax, 0xfffff000 ; ja 0xf63b0 ; ret
0x00000000000f6a64 : cmp eax, 0xfffff000 ; ja 0xf6aa8 ; ret
0x00000000000faee3 : cmp eax, 0xfffff000 ; ja 0xfaef8 ; ret
0x00000000000faf37 : cmp eax, 0xfffff000 ; ja 0xfaf48 ; ret
0x00000000000fb68b : cmp eax, 0xfffff000 ; ja 0xfb69f ; ret
0x00000000000fbbaf : cmp eax, 0xfffff000 ; ja 0xfbbc7 ; ret
0x00000000000fc45b : cmp eax, 0xfffff000 ; ja 0xfc46f ; ret
0x00000000000fc50b : cmp eax, 0xfffff000 ; ja 0xfc51f ; ret
0x00000000000fc5b6 : cmp eax, 0xfffff000 ; ja 0xfc5c7 ; ret
0x00000000000fc626 : cmp eax, 0xfffff000 ; ja 0xfc637 ; ret
0x00000000000fc6a7 : cmp eax, 0xfffff000 ; ja 0xfc6b7 ; ret
0x00000000000fc757 : cmp eax, 0xfffff000 ; ja 0xfc767 ; ret
0x00000000000fcca7 : cmp eax, 0xfffff000 ; ja 0xfccb8 ; ret
0x00000000000fe3c8 : cmp eax, 0xfffff000 ; ja 0xfe3e0 ; ret
0x00000000000fe45c : cmp eax, 0xfffff000 ; ja 0xfe470 ; ret
0x00000000000fe4fc : cmp eax, 0xfffff000 ; ja 0xfe510 ; ret
0x00000000000fe550 : cmp eax, 0xfffff000 ; ja 0xfe568 ; ret
0x00000000001008ea : cmp eax, 0xfffff001 ; jae 0x1008f9 ; ret
0x0000000000100b58 : cmp eax, 0xfffff001 ; jae 0x100b67 ; ret
0x0000000000100b88 : cmp eax, 0xfffff001 ; jae 0x100b97 ; ret
0x0000000000100bc1 : cmp eax, 0xfffff001 ; jae 0x100c00 ; ret
0x0000000000100c18 : cmp eax, 0xfffff001 ; jae 0x100c27 ; ret
0x0000000000100c48 : cmp eax, 0xfffff001 ; jae 0x100c57 ; ret
0x0000000000100c7b : cmp eax, 0xfffff001 ; jae 0x100c8a ; ret
0x0000000000100ca8 : cmp eax, 0xfffff001 ; jae 0x100cb7 ; ret
0x0000000000100cd8 : cmp eax, 0xfffff001 ; jae 0x100ce7 ; ret
0x0000000000100d08 : cmp eax, 0xfffff001 ; jae 0x100d17 ; ret
0x0000000000100d38 : cmp eax, 0xfffff001 ; jae 0x100d47 ; ret
0x00000000001053fb : cmp eax, 0xfffff001 ; jae 0x10540a ; ret
0x0000000000105428 : cmp eax, 0xfffff001 ; jae 0x105437 ; ret
0x0000000000105458 : cmp eax, 0xfffff001 ; jae 0x105467 ; ret
0x000000000010548b : cmp eax, 0xfffff001 ; jae 0x10549a ; ret
0x00000000001054bb : cmp eax, 0xfffff001 ; jae 0x1054ca ; ret
0x00000000001054e8 : cmp eax, 0xfffff001 ; jae 0x1054f7 ; ret
0x000000000010551b : cmp eax, 0xfffff001 ; jae 0x10552a ; ret
0x0000000000105548 : cmp eax, 0xfffff001 ; jae 0x105557 ; ret
0x0000000000105578 : cmp eax, 0xfffff001 ; jae 0x105587 ; ret
0x00000000001055ab : cmp eax, 0xfffff001 ; jae 0x1055ba ; ret
0x00000000001055d8 : cmp eax, 0xfffff001 ; jae 0x1055e7 ; ret
0x000000000010560b : cmp eax, 0xfffff001 ; jae 0x10561a ; ret
0x00000000001066f8 : cmp eax, 0xfffff001 ; jae 0x106707 ; ret
0x0000000000106728 : cmp eax, 0xfffff001 ; jae 0x106737 ; ret
0x0000000000106858 : cmp eax, 0xfffff001 ; jae 0x106867 ; ret
0x0000000000106898 : cmp eax, 0xfffff001 ; jae 0x1068a7 ; ret
0x00000000001068c8 : cmp eax, 0xfffff001 ; jae 0x1068d7 ; ret
0x00000000001068f8 : cmp eax, 0xfffff001 ; jae 0x106907 ; ret
0x0000000000106928 : cmp eax, 0xfffff001 ; jae 0x106937 ; ret
0x0000000000106b4b : cmp eax, 0xfffff001 ; jae 0x106b5a ; ret
0x0000000000106b78 : cmp eax, 0xfffff001 ; jae 0x106b87 ; ret
0x0000000000106ba8 : cmp eax, 0xfffff001 ; jae 0x106bb7 ; ret
0x0000000000106bd8 : cmp eax, 0xfffff001 ; jae 0x106be7 ; ret
0x0000000000106c1b : cmp eax, 0xfffff001 ; jae 0x106c2a ; ret
0x0000000000106c48 : cmp eax, 0xfffff001 ; jae 0x106c57 ; ret
0x0000000000106c78 : cmp eax, 0xfffff001 ; jae 0x106c87 ; ret
0x0000000000106ca8 : cmp eax, 0xfffff001 ; jae 0x106cb7 ; ret
0x0000000000106cd8 : cmp eax, 0xfffff001 ; jae 0x106ce7 ; ret
0x0000000000106d08 : cmp eax, 0xfffff001 ; jae 0x106d17 ; ret
0x0000000000106d38 : cmp eax, 0xfffff001 ; jae 0x106d47 ; ret
0x0000000000106d68 : cmp eax, 0xfffff001 ; jae 0x106d77 ; ret
0x0000000000106d98 : cmp eax, 0xfffff001 ; jae 0x106da7 ; ret
0x0000000000106dcb : cmp eax, 0xfffff001 ; jae 0x106dda ; ret
0x0000000000106e04 : cmp eax, 0xfffff001 ; jae 0x106e46 ; ret
0x0000000000106e58 : cmp eax, 0xfffff001 ; jae 0x106e67 ; ret
0x0000000000106e8b : cmp eax, 0xfffff001 ; jae 0x106e9a ; ret
0x0000000000106eb8 : cmp eax, 0xfffff001 ; jae 0x106ec7 ; ret
0x0000000000106ee8 : cmp eax, 0xfffff001 ; jae 0x106ef7 ; ret
0x0000000000106f18 : cmp eax, 0xfffff001 ; jae 0x106f27 ; ret
0x0000000000106f48 : cmp eax, 0xfffff001 ; jae 0x106f57 ; ret
0x0000000000106f78 : cmp eax, 0xfffff001 ; jae 0x106f87 ; ret
0x0000000000106fab : cmp eax, 0xfffff001 ; jae 0x106fba ; ret
0x0000000000106fdb : cmp eax, 0xfffff001 ; jae 0x106fea ; ret
0x0000000000107008 : cmp eax, 0xfffff001 ; jae 0x107017 ; ret
0x0000000000107038 : cmp eax, 0xfffff001 ; jae 0x107047 ; ret
0x000000000010706b : cmp eax, 0xfffff001 ; jae 0x10707a ; ret
0x000000000010709b : cmp eax, 0xfffff001 ; jae 0x1070aa ; ret
0x00000000001070cb : cmp eax, 0xfffff001 ; jae 0x1070da ; ret
0x0000000000107104 : cmp eax, 0xfffff001 ; jae 0x107146 ; ret
0x0000000000107158 : cmp eax, 0xfffff001 ; jae 0x107167 ; ret
0x0000000000107194 : cmp eax, 0xfffff001 ; jae 0x1071d6 ; ret
0x00000000001071e8 : cmp eax, 0xfffff001 ; jae 0x1071f7 ; ret
0x0000000000107218 : cmp eax, 0xfffff001 ; jae 0x107227 ; ret
0x0000000000107254 : cmp eax, 0xfffff001 ; jae 0x107296 ; ret
0x00000000001072a8 : cmp eax, 0xfffff001 ; jae 0x1072b7 ; ret
0x00000000001072db : cmp eax, 0xfffff001 ; jae 0x1072ea ; ret
0x0000000000107308 : cmp eax, 0xfffff001 ; jae 0x107317 ; ret
0x0000000000107338 : cmp eax, 0xfffff001 ; jae 0x107347 ; ret
0x000000000010736b : cmp eax, 0xfffff001 ; jae 0x10737a ; ret
0x00000000001073a1 : cmp eax, 0xfffff001 ; jae 0x1073e0 ; ret
0x00000000001073f8 : cmp eax, 0xfffff001 ; jae 0x107407 ; ret
0x000000000010742b : cmp eax, 0xfffff001 ; jae 0x10743a ; ret
0x000000000010745b : cmp eax, 0xfffff001 ; jae 0x10746a ; ret
0x00000000001074b1 : cmp eax, 0xfffff001 ; jae 0x1074f0 ; ret
0x0000000000107508 : cmp eax, 0xfffff001 ; jae 0x107517 ; ret
0x0000000000107541 : cmp eax, 0xfffff001 ; jae 0x107580 ; ret
0x0000000000107598 : cmp eax, 0xfffff001 ; jae 0x1075a7 ; ret
0x00000000001075c8 : cmp eax, 0xfffff001 ; jae 0x1075d7 ; ret
0x00000000001075fb : cmp eax, 0xfffff001 ; jae 0x10760a ; ret
0x0000000000107628 : cmp eax, 0xfffff001 ; jae 0x107637 ; ret
0x0000000000107724 : cmp eax, 0xfffff001 ; jae 0x107766 ; ret
0x0000000000107781 : cmp eax, 0xfffff001 ; jae 0x1077c0 ; ret
0x00000000001078a1 : cmp eax, 0xfffff001 ; jae 0x1078e0 ; ret
0x0000000000107904 : cmp eax, 0xfffff001 ; jae 0x107946 ; ret
0x000000000010795b : cmp eax, 0xfffff001 ; jae 0x10796a ; ret
0x0000000000107988 : cmp eax, 0xfffff001 ; jae 0x107997 ; ret
0x00000000001079b8 : cmp eax, 0xfffff001 ; jae 0x1079c7 ; ret
0x00000000001079eb : cmp eax, 0xfffff001 ; jae 0x1079fa ; ret
0x0000000000107f44 : cmp eax, 0xfffff001 ; jae 0x107f86 ; ret
0x0000000000107fa4 : cmp eax, 0xfffff001 ; jae 0x107fe6 ; ret
0x0000000000107ff8 : cmp eax, 0xfffff001 ; jae 0x108007 ; ret
0x0000000000108028 : cmp eax, 0xfffff001 ; jae 0x108037 ; ret
0x0000000000108058 : cmp eax, 0xfffff001 ; jae 0x108067 ; ret
0x0000000000108088 : cmp eax, 0xfffff001 ; jae 0x108097 ; ret
0x00000000001080bb : cmp eax, 0xfffff001 ; jae 0x1080ca ; ret
0x00000000001080eb : cmp eax, 0xfffff001 ; jae 0x1080fa ; ret
0x0000000000108118 : cmp eax, 0xfffff001 ; jae 0x108127 ; ret
0x0000000000108148 : cmp eax, 0xfffff001 ; jae 0x108157 ; ret
0x0000000000108178 : cmp eax, 0xfffff001 ; jae 0x108187 ; ret
0x00000000001081a8 : cmp eax, 0xfffff001 ; jae 0x1081b7 ; ret
0x000000000013faab : cmp eax, 0xfffff001 ; jae 0x13faba ; ret
0x000000000013fafb : cmp eax, 0xfffff001 ; jae 0x13fb0a ; ret
0x0000000000035768 : cmp eax, 0xfffff001 ; jae 0x35777 ; ret
0x0000000000035e28 : cmp eax, 0xfffff001 ; jae 0x35e37 ; ret
0x0000000000047b22 : cmp eax, 0xfffff001 ; jae 0x47b35 ; xor eax, eax ; ret
0x000000000006b368 : cmp eax, 0xfffff001 ; jae 0x6b377 ; ret
0x000000000006b39b : cmp eax, 0xfffff001 ; jae 0x6b3aa ; ret
0x00000000000bb968 : cmp eax, 0xfffff001 ; jae 0xbb977 ; ret
0x00000000000bea58 : cmp eax, 0xfffff001 ; jae 0xbea67 ; ret
0x00000000000bea88 : cmp eax, 0xfffff001 ; jae 0xbea97 ; ret
0x00000000000cb388 : cmp eax, 0xfffff001 ; jae 0xcb397 ; ret
0x00000000000cb57b : cmp eax, 0xfffff001 ; jae 0xcb58a ; ret
0x00000000000cb658 : cmp eax, 0xfffff001 ; jae 0xcb667 ; ret
0x00000000000cb6e1 : cmp eax, 0xfffff001 ; jae 0xcb720 ; ret
0x00000000000cb741 : cmp eax, 0xfffff001 ; jae 0xcb780 ; ret
0x00000000000cbb42 : cmp eax, 0xfffff001 ; jae 0xcbb51 ; ret
0x00000000000cbbc8 : cmp eax, 0xfffff001 ; jae 0xcbbd7 ; ret
0x00000000000cc6d8 : cmp eax, 0xfffff001 ; jae 0xcc6e7 ; ret
0x00000000000cc878 : cmp eax, 0xfffff001 ; jae 0xcc887 ; ret
0x00000000000cc8a8 : cmp eax, 0xfffff001 ; jae 0xcc8b7 ; ret
0x00000000000cc908 : cmp eax, 0xfffff001 ; jae 0xcc917 ; ret
0x00000000000cc938 : cmp eax, 0xfffff001 ; jae 0xcc947 ; ret
0x00000000000cc968 : cmp eax, 0xfffff001 ; jae 0xcc977 ; ret
0x00000000000cc998 : cmp eax, 0xfffff001 ; jae 0xcc9a7 ; ret
0x00000000000e9b88 : cmp eax, 0xfffff001 ; jae 0xe9b97 ; ret
0x00000000000e9bb8 : cmp eax, 0xfffff001 ; jae 0xe9bc7 ; ret
0x00000000000e9be8 : cmp eax, 0xfffff001 ; jae 0xe9bf7 ; ret
0x00000000000e9c18 : cmp eax, 0xfffff001 ; jae 0xe9c27 ; ret
0x00000000000e9c48 : cmp eax, 0xfffff001 ; jae 0xe9c57 ; ret
0x00000000000e9c78 : cmp eax, 0xfffff001 ; jae 0xe9c87 ; ret
0x00000000000e9ca8 : cmp eax, 0xfffff001 ; jae 0xe9cb7 ; ret
0x00000000000e9cd8 : cmp eax, 0xfffff001 ; jae 0xe9ce7 ; ret
0x00000000000f4e94 : cmp eax, 0xfffff001 ; jae 0xf4ed6 ; ret
0x00000000000f4ef4 : cmp eax, 0xfffff001 ; jae 0xf4f36 ; ret
0x00000000000f5f68 : cmp eax, 0xfffff001 ; jae 0xf5f77 ; ret
0x00000000000f6208 : cmp eax, 0xfffff001 ; jae 0xf6217 ; ret
0x00000000000f6238 : cmp eax, 0xfffff001 ; jae 0xf6247 ; ret
0x00000000000f6308 : cmp eax, 0xfffff001 ; jae 0xf6317 ; ret
0x00000000000f6338 : cmp eax, 0xfffff001 ; jae 0xf6347 ; ret
0x00000000000f63f8 : cmp eax, 0xfffff001 ; jae 0xf6407 ; ret
0x00000000000f6428 : cmp eax, 0xfffff001 ; jae 0xf6437 ; ret
0x00000000000f6461 : cmp eax, 0xfffff001 ; jae 0xf64a0 ; ret
0x00000000000f6681 : cmp eax, 0xfffff001 ; jae 0xf66c0 ; ret
0x00000000000f66e1 : cmp eax, 0xfffff001 ; jae 0xf6720 ; ret
0x00000000000f6738 : cmp eax, 0xfffff001 ; jae 0xf6747 ; ret
0x00000000000f6bc8 : cmp eax, 0xfffff001 ; jae 0xf6bd7 ; ret
0x00000000000f6d11 : cmp eax, 0xfffff001 ; jae 0xf6d50 ; ret
0x00000000000f6d68 : cmp eax, 0xfffff001 ; jae 0xf6d77 ; ret
0x00000000000f6d98 : cmp eax, 0xfffff001 ; jae 0xf6da7 ; ret
0x00000000000f6dc8 : cmp eax, 0xfffff001 ; jae 0xf6dd7 ; ret
0x00000000000f6df8 : cmp eax, 0xfffff001 ; jae 0xf6e07 ; ret
0x00000000000f6e28 : cmp eax, 0xfffff001 ; jae 0xf6e37 ; ret
0x00000000000f6e61 : cmp eax, 0xfffff001 ; jae 0xf6ea0 ; ret
0x00000000000f6eb8 : cmp eax, 0xfffff001 ; jae 0xf6ec7 ; ret
0x00000000000f6ee8 : cmp eax, 0xfffff001 ; jae 0xf6ef7 ; ret
0x00000000000f7718 : cmp eax, 0xfffff001 ; jae 0xf7727 ; ret
0x00000000000f7748 : cmp eax, 0xfffff001 ; jae 0xf7757 ; ret
0x00000000000f7778 : cmp eax, 0xfffff001 ; jae 0xf7787 ; ret
0x00000000000f77ab : cmp eax, 0xfffff001 ; jae 0xf77ba ; ret
0x00000000000f7d88 : cmp eax, 0xfffff001 ; jae 0xf7d97 ; ret
0x00000000000f7dbb : cmp eax, 0xfffff001 ; jae 0xf7dca ; ret
0x00000000000f7de8 : cmp eax, 0xfffff001 ; jae 0xf7df7 ; ret
0x00000000000f7e18 : cmp eax, 0xfffff001 ; jae 0xf7e27 ; ret
0x00000000000f7e48 : cmp eax, 0xfffff001 ; jae 0xf7e57 ; ret
0x00000000000f7e7b : cmp eax, 0xfffff001 ; jae 0xf7e8a ; ret
0x00000000000f7ea8 : cmp eax, 0xfffff001 ; jae 0xf7eb7 ; ret
0x00000000000f7ed8 : cmp eax, 0xfffff001 ; jae 0xf7ee7 ; ret
0x00000000000f7f08 : cmp eax, 0xfffff001 ; jae 0xf7f17 ; ret
0x00000000000fab41 : cmp eax, 0xfffff001 ; jae 0xfab80 ; ret
0x00000000000faeab : cmp eax, 0xfffff001 ; jae 0xfaeba ; ret
0x00000000000fb624 : cmp eax, 0xfffff001 ; jae 0xfb666 ; ret
0x00000000000fbd78 : cmp eax, 0xfffff001 ; jae 0xfbd87 ; ret
0x00000000000fbda8 : cmp eax, 0xfffff001 ; jae 0xfbdb7 ; ret
0x00000000000fbdd8 : cmp eax, 0xfffff001 ; jae 0xfbde7 ; ret
0x00000000000fc178 : cmp eax, 0xfffff001 ; jae 0xfc187 ; ret
0x00000000000fc358 : cmp eax, 0xfffff001 ; jae 0xfc367 ; ret
0x00000000000fc391 : cmp eax, 0xfffff001 ; jae 0xfc3d0 ; ret
0x00000000000fc3f1 : cmp eax, 0xfffff001 ; jae 0xfc430 ; ret
0x00000000000fc8e8 : cmp eax, 0xfffff001 ; jae 0xfc8f7 ; ret
0x00000000000fc988 : cmp eax, 0xfffff001 ; jae 0xfc997 ; ret
0x00000000000fc9c4 : cmp eax, 0xfffff001 ; jae 0xfca06 ; ret
0x00000000000fcb18 : cmp eax, 0xfffff001 ; jae 0xfcb27 ; ret
0x00000000000fcb48 : cmp eax, 0xfffff001 ; jae 0xfcb57 ; ret
0x00000000000fcb81 : cmp eax, 0xfffff001 ; jae 0xfcbc0 ; ret
0x00000000000fcbd8 : cmp eax, 0xfffff001 ; jae 0xfcbe7 ; ret
0x00000000000fcc11 : cmp eax, 0xfffff001 ; jae 0xfcc50 ; ret
0x00000000000fcc68 : cmp eax, 0xfffff001 ; jae 0xfcc77 ; ret
0x00000000000fcfd8 : cmp eax, 0xfffff001 ; jae 0xfcfe7 ; ret
0x00000000000fd008 : cmp eax, 0xfffff001 ; jae 0xfd017 ; ret
0x00000000000fd038 : cmp eax, 0xfffff001 ; jae 0xfd047 ; ret
0x00000000000fe588 : cmp eax, 0xfffff001 ; jae 0xfe597 ; ret
0x00000000000fe5b8 : cmp eax, 0xfffff001 ; jae 0xfe5c7 ; ret
0x0000000000114f58 : cmp eax, 0xfffffe93 ; call rax
0x00000000000aa17f : cmp eax, 2 ; je 0xaa197 ; xor eax, eax ; ret
0x0000000000139ea1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000da37e : cmp eax, 3 ; je 0xda398 ; xor eax, eax ; pop rbx ; ret
0x000000000011456a : cmp eax, 4 ; je 0x114575 ; ret
0x000000000019eafd : cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x0000000000079615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x00000000001bc604 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x0000000000102f41 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000000aafbe : cmp eax, dword ptr [rsi + 0x10] ; jne 0xab0b9 ; ret
0x00000000000aafd3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xab0b9 ; ret
0x00000000000aafe8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xab0b9 ; ret
0x00000000000ab003 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xab0b9 ; ret
0x00000000000ab01e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xab0b9 ; ret
0x00000000000ab033 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0b5 ; ret
0x00000000000ab048 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0b5 ; ret
0x00000000000ab053 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b5 ; ret
0x00000000000ab06e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0b5 ; ret
0x00000000000ab083 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0b5 ; ret
0x00000000000ab098 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0b5 ; ret
0x00000000000ab0a3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b5 ; ret
0x00000000000aafa3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xab0b9 ; ret
0x00000000000aaf73 : cmp eax, dword ptr [rsi + 4] ; jne 0xab0b9 ; ret
0x00000000000aaf88 : cmp eax, dword ptr [rsi + 8] ; jne 0xab0b9 ; ret
0x0000000000171c0a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x171d49 ; ret
0x0000000000171c23 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x171d49 ; ret
0x0000000000171d33 : cmp eax, dword ptr [rsi - 4] ; jne 0x171d47 ; xor eax, eax ; ret
0x0000000000171c53 : cmp eax, dword ptr [rsi - 4] ; jne 0x171d49 ; ret
0x0000000000171c38 : cmp eax, dword ptr [rsi - 8] ; jne 0x171d49 ; ret
0x00000000000aaf5d : cmp eax, dword ptr [rsi] ; jne 0xab0b8 ; ret
0x00000000001001c4 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfc3e8
0x000000000007cc49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x000000000009e07d : cmp eax, ecx ; je 0x9e065 ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000171723 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000113ddb : cmp eax, edx ; jb 0x113dd6 ; xor eax, eax ; ret
0x00000000001376f1 : cmp eax, edx ; je 0x137708 ; add rsp, 8 ; ret
0x00000000001229ca : cmp eax, edx ; jne 0x1229a9 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000048085 : cmp eax, edx ; jne 0x4807e ; xor eax, eax ; ret
0x0000000000087b8d : cmp eax, edx ; jne 0x87b47 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000010ddd9 : cmp eax, esi ; jb 0x10ddf1 ; mov eax, 1 ; ret
0x00000000000d6a98 : cmp eax, esi ; jge 0xd6a75 ; mov edx, eax ; jmp 0xd6a7e
0x0000000000130cd4 : cmp ebp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000019ebd9 : cmp ebp, edx ; call qword ptr [rbx]
0x0000000000114506 : cmp ebx, 0xa ; je 0x114511 ; ret
0x00000000000bf7df : cmp ebx, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007ec15 : cmp ebx, eax ; je 0x7ec26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017378a : cmp ebx, ebp ; jae 0x17379d ; call qword ptr [rbx]
0x000000000017378a : cmp ebx, ebp ; jae 0x1737a1 ; call qword ptr [rbx]
0x00000000001737b9 : cmp ebx, ebp ; jb 0x1737b3 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000048b7c : cmp ecx, 0xff ; jne 0x48b79 ; mov rax, rdx ; ret
0x00000000000f0285 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012b8b5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f35a9 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000024ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bbb10 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000009cf07 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x000000000009afc3 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x0000000000074f4e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000001fb03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x000000000016ee1b : cmp ecx, eax ; jne 0x16ee49 ; xor eax, eax ; ret
0x000000000016fc5b : cmp ecx, eax ; jne 0x16fc89 ; xor eax, eax ; ret
0x000000000016fc8f : cmp ecx, eax ; jne 0x16fc9c ; xor eax, eax ; ret
0x000000000013b2d3 : cmp ecx, edx ; jae 0x13b2e6 ; xor eax, eax ; ret
0x000000000013b313 : cmp ecx, edx ; jae 0x13b326 ; xor eax, eax ; ret
0x000000000009e028 : cmp ecx, edx ; je 0x9e029 ; cmp ecx, esi ; je 0x9e029 ; ret
0x000000000009e02c : cmp ecx, esi ; je 0x9e025 ; ret
0x00000000000ac069 : cmp edi, 0x7f ; ja 0xac07f ; mov eax, edi ; ret
0x0000000000095147 : cmp edi, 0xd ; je 0x95161 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001739c8 : cmp edi, 1 ; ja 0x1739d5 ; ret
0x0000000000109aed : cmp edi, 9 ; setbe al ; ret
0x000000000004a49a : cmp edi, eax ; jbe 0x4a498 ; nop ; pop rbx ; ret
0x00000000000504b5 : cmp edi, ecx ; ja 0x504a0 ; mov eax, r8d ; ret
0x0000000000199e41 : cmp edi, ecx ; jmp rsp
0x00000000000fc241 : cmp edi, edx ; ja 0xfc275 ; ret
0x00000000000f5e60 : cmp edi, esi ; ja 0xf5e55 ; ret
0x000000000004a5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000194fe5 : cmp edi, esp ; jmp qword ptr [rax + 0x20fffc3c]
0x0000000000195025 : cmp edi, esp ; jmp qword ptr [rax]
0x00000000000cc648 : cmp edx, 0 ; mov eax, edx ; jle 0xcc660 ; ret
0x00000000001187df : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000b89cd : cmp edx, 0x8944ffff ; ret 0x894d
0x000000000003aa00 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000d0af6 : cmp edx, 1 ; sete al ; ret
0x00000000000796a1 : cmp edx, dword ptr [rax + 0xf480034] ; ret 0x8948
0x000000000002da7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x00000000001147b2 : cmp edx, eax ; jne 0x114795 ; ret
0x00000000000833da : cmp edx, eax ; jne 0x833a5 ; ret
0x00000000000ab5b7 : cmp edx, eax ; jne 0xab5a7 ; xor eax, eax ; ret
0x00000000001228e6 : cmp edx, eax ; sbb eax, eax ; ret
0x000000000013b1bf : cmp edx, ecx ; je 0x13b1d5 ; ret
0x000000000008e738 : cmp edx, ecx ; jne 0x8e725 ; ret
0x00000000000ccee7 : cmp edx, ecx ; jne 0xccf14 ; ret
0x0000000000113eba : cmp edx, edi ; setae al ; ret
0x00000000001232d6 : cmp edx, esi ; jb 0x1232cd ; mov eax, 0xffffffff ; ret
0x000000000009e008 : cmp edx, esi ; je 0x9e005 ; ret
0x00000000000acf16 : cmp edx, esi ; je 0xacf27 ; test edx, edx ; jne 0xacf19 ; ret
0x0000000000073059 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x00000000000774f8 : cmp esi, 2 ; je 0x77510 ; mov dword ptr [rdi], edx ; ret
0x000000000002a695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x00000000000abc71 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000012dbfa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12dbf1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001945b0 : cmp esi, dword ptr [rsi - 0x482e0003] ; std ; call rcx
0x00000000001846e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000072d5a : cmp esi, ecx ; jb 0x72d57 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000149d68 : cmp esi, ecx ; jle 0x149cad ; ret
0x000000000007c00a : cmp esi, ecx ; jne 0x7c007 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000012334e : cmp esi, edx ; ja 0x12333d ; mov eax, 0xffffffff ; ret
0x000000000004821d : cmp esi, edx ; jne 0x48216 ; xor eax, eax ; ret
0x000000000019528d : cmp esp, 0xfc7720ff ; jmp rax
0x000000000019510d : cmp esp, 0xfc8162ff ; call rdx
0x000000000019508d : cmp esp, 0xfc8176ff ; jmp rsi
0x0000000000195289 : cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00000000001959dd : cmp esp, 0xff ; push rax ; test edi, esp ; call rax
0x0000000000194fe1 : cmp esp, edi ; jmp qword ptr [rax]
0x00000000000f5e2c : cmp esp, esi ; ja 0xf5dc8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e198 : cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000072aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x00000000000773e3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b577 ; ret
0x0000000000113e57 : cmp qword ptr [rdi], 0 ; je 0x113e6f ; ret
0x00000000001018fc : cmp qword ptr [rsi], 0 ; je 0x10190f ; pop rbx ; ret
0x0000000000094122 : cmp r11b, r14b ; ret
0x0000000000114505 : cmp r11d, 0xa ; je 0x114512 ; ret
0x00000000000f5e2b : cmp r12, rsi ; ja 0xf5dc9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c465 : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c438
0x000000000009e07c : cmp r8d, ecx ; je 0x9e066 ; ret
0x00000000000d6a97 : cmp r8d, esi ; jge 0xd6a76 ; mov edx, eax ; jmp 0xd6a7f
0x000000000001fb02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00000000000e040f : cmp r9b, 0x11 ; je 0xe0453 ; mov rdx, rax ; jmp 0xe03b7
0x000000000010e5d1 : cmp r9b, r13b ; ret
0x0000000000104ace : cmp rax, -0x1000 ; ja 0x104ae9 ; ret
0x000000000010678e : cmp rax, -0x1000 ; ja 0x1067a9 ; ret
0x00000000001069d0 : cmp rax, -0x1000 ; ja 0x1069e8 ; ret
0x0000000000106a82 : cmp rax, -0x1000 ; ja 0x106a99 ; ret
0x0000000000106abc : cmp rax, -0x1000 ; ja 0x106ad9 ; ret
0x000000000010766d : cmp rax, -0x1000 ; ja 0x107688 ; ret
0x00000000001077ed : cmp rax, -0x1000 ; ja 0x107808 ; ret
0x0000000000107c87 : cmp rax, -0x1000 ; ja 0x107c98 ; ret
0x0000000000107d29 : cmp rax, -0x1000 ; ja 0x107d40 ; ret
0x0000000000107dd9 : cmp rax, -0x1000 ; ja 0x107df0 ; ret
0x0000000000114c3a : cmp rax, -0x1000 ; ja 0x114c51 ; ret
0x0000000000114ce7 : cmp rax, -0x1000 ; ja 0x114d13 ; ret
0x00000000001169ac : cmp rax, -0x1000 ; ja 0x1169c9 ; ret
0x0000000000116a5c : cmp rax, -0x1000 ; ja 0x116a79 ; ret
0x0000000000035428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x0000000000035730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x000000000003579c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00000000000357e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00000000000bb887 : cmp rax, -0x1000 ; ja 0xbb8a1 ; ret
0x00000000000c7827 : cmp rax, -0x1000 ; ja 0xc7841 ; pop rbx ; ret
0x00000000000c8aa1 : cmp rax, -0x1000 ; ja 0xc8ab8 ; ret
0x00000000000cb430 : cmp rax, -0x1000 ; ja 0xcb448 ; ret
0x00000000000cb4ca : cmp rax, -0x1000 ; ja 0xcb4e0 ; ret
0x00000000000cb5bb : cmp rax, -0x1000 ; ja 0xcb5d0 ; ret
0x00000000000cc713 : cmp rax, -0x1000 ; ja 0xcc728 ; ret
0x00000000000cc783 : cmp rax, -0x1000 ; ja 0xcc798 ; ret
0x00000000000cc9d7 : cmp rax, -0x1000 ; ja 0xcc9e8 ; ret
0x00000000000cca57 : cmp rax, -0x1000 ; ja 0xcca68 ; ret
0x00000000000f6005 : cmp rax, -0x1000 ; ja 0xf6019 ; ret
0x00000000000f6054 : cmp rax, -0x1000 ; ja 0xf6069 ; ret
0x00000000000f60a5 : cmp rax, -0x1000 ; ja 0xf60b9 ; ret
0x00000000000f60fd : cmp rax, -0x1000 ; ja 0xf6119 ; ret
0x00000000000f6161 : cmp rax, -0x1000 ; ja 0xf6179 ; ret
0x00000000000f61ba : cmp rax, -0x1000 ; ja 0xf61d1 ; ret
0x00000000000f6399 : cmp rax, -0x1000 ; ja 0xf63b1 ; ret
0x00000000000f6a63 : cmp rax, -0x1000 ; ja 0xf6aa9 ; ret
0x00000000000faee2 : cmp rax, -0x1000 ; ja 0xfaef9 ; ret
0x00000000000faf36 : cmp rax, -0x1000 ; ja 0xfaf49 ; ret
0x00000000000fb68a : cmp rax, -0x1000 ; ja 0xfb6a0 ; ret
0x00000000000fbbae : cmp rax, -0x1000 ; ja 0xfbbc8 ; ret
0x00000000000fc45a : cmp rax, -0x1000 ; ja 0xfc470 ; ret
0x00000000000fc50a : cmp rax, -0x1000 ; ja 0xfc520 ; ret
0x00000000000fc5b5 : cmp rax, -0x1000 ; ja 0xfc5c8 ; ret
0x00000000000fc625 : cmp rax, -0x1000 ; ja 0xfc638 ; ret
0x00000000000fc6a6 : cmp rax, -0x1000 ; ja 0xfc6b8 ; ret
0x00000000000fc756 : cmp rax, -0x1000 ; ja 0xfc768 ; ret
0x00000000000fcca6 : cmp rax, -0x1000 ; ja 0xfccb9 ; ret
0x00000000000fe3c7 : cmp rax, -0x1000 ; ja 0xfe3e1 ; ret
0x00000000000fe45b : cmp rax, -0x1000 ; ja 0xfe471 ; ret
0x00000000000fe4fb : cmp rax, -0x1000 ; ja 0xfe511 ; ret
0x00000000000fe54f : cmp rax, -0x1000 ; ja 0xfe569 ; ret
0x00000000001008e9 : cmp rax, -0xfff ; jae 0x1008fa ; ret
0x0000000000100b57 : cmp rax, -0xfff ; jae 0x100b68 ; ret
0x0000000000100b87 : cmp rax, -0xfff ; jae 0x100b98 ; ret
0x0000000000100bc0 : cmp rax, -0xfff ; jae 0x100c01 ; ret
0x0000000000100c17 : cmp rax, -0xfff ; jae 0x100c28 ; ret
0x0000000000100c47 : cmp rax, -0xfff ; jae 0x100c58 ; ret
0x0000000000100c7a : cmp rax, -0xfff ; jae 0x100c8b ; ret
0x0000000000100ca7 : cmp rax, -0xfff ; jae 0x100cb8 ; ret
0x0000000000100cd7 : cmp rax, -0xfff ; jae 0x100ce8 ; ret
0x0000000000100d07 : cmp rax, -0xfff ; jae 0x100d18 ; ret
0x0000000000100d37 : cmp rax, -0xfff ; jae 0x100d48 ; ret
0x00000000001053fa : cmp rax, -0xfff ; jae 0x10540b ; ret
0x0000000000105427 : cmp rax, -0xfff ; jae 0x105438 ; ret
0x0000000000105457 : cmp rax, -0xfff ; jae 0x105468 ; ret
0x000000000010548a : cmp rax, -0xfff ; jae 0x10549b ; ret
0x00000000001054ba : cmp rax, -0xfff ; jae 0x1054cb ; ret
0x00000000001054e7 : cmp rax, -0xfff ; jae 0x1054f8 ; ret
0x000000000010551a : cmp rax, -0xfff ; jae 0x10552b ; ret
0x0000000000105547 : cmp rax, -0xfff ; jae 0x105558 ; ret
0x0000000000105577 : cmp rax, -0xfff ; jae 0x105588 ; ret
0x00000000001055aa : cmp rax, -0xfff ; jae 0x1055bb ; ret
0x00000000001055d7 : cmp rax, -0xfff ; jae 0x1055e8 ; ret
0x000000000010560a : cmp rax, -0xfff ; jae 0x10561b ; ret
0x00000000001066f7 : cmp rax, -0xfff ; jae 0x106708 ; ret
0x0000000000106727 : cmp rax, -0xfff ; jae 0x106738 ; ret
0x0000000000106857 : cmp rax, -0xfff ; jae 0x106868 ; ret
0x0000000000106897 : cmp rax, -0xfff ; jae 0x1068a8 ; ret
0x00000000001068c7 : cmp rax, -0xfff ; jae 0x1068d8 ; ret
0x00000000001068f7 : cmp rax, -0xfff ; jae 0x106908 ; ret
0x0000000000106927 : cmp rax, -0xfff ; jae 0x106938 ; ret
0x0000000000106b4a : cmp rax, -0xfff ; jae 0x106b5b ; ret
0x0000000000106b77 : cmp rax, -0xfff ; jae 0x106b88 ; ret
0x0000000000106ba7 : cmp rax, -0xfff ; jae 0x106bb8 ; ret
0x0000000000106bd7 : cmp rax, -0xfff ; jae 0x106be8 ; ret
0x0000000000106c1a : cmp rax, -0xfff ; jae 0x106c2b ; ret
0x0000000000106c47 : cmp rax, -0xfff ; jae 0x106c58 ; ret
0x0000000000106c77 : cmp rax, -0xfff ; jae 0x106c88 ; ret
0x0000000000106ca7 : cmp rax, -0xfff ; jae 0x106cb8 ; ret
0x0000000000106cd7 : cmp rax, -0xfff ; jae 0x106ce8 ; ret
0x0000000000106d07 : cmp rax, -0xfff ; jae 0x106d18 ; ret
0x0000000000106d37 : cmp rax, -0xfff ; jae 0x106d48 ; ret
0x0000000000106d67 : cmp rax, -0xfff ; jae 0x106d78 ; ret
0x0000000000106d97 : cmp rax, -0xfff ; jae 0x106da8 ; ret
0x0000000000106dca : cmp rax, -0xfff ; jae 0x106ddb ; ret
0x0000000000106e03 : cmp rax, -0xfff ; jae 0x106e47 ; ret
0x0000000000106e57 : cmp rax, -0xfff ; jae 0x106e68 ; ret
0x0000000000106e8a : cmp rax, -0xfff ; jae 0x106e9b ; ret
0x0000000000106eb7 : cmp rax, -0xfff ; jae 0x106ec8 ; ret
0x0000000000106ee7 : cmp rax, -0xfff ; jae 0x106ef8 ; ret
0x0000000000106f17 : cmp rax, -0xfff ; jae 0x106f28 ; ret
0x0000000000106f47 : cmp rax, -0xfff ; jae 0x106f58 ; ret
0x0000000000106f77 : cmp rax, -0xfff ; jae 0x106f88 ; ret
0x0000000000106faa : cmp rax, -0xfff ; jae 0x106fbb ; ret
0x0000000000106fda : cmp rax, -0xfff ; jae 0x106feb ; ret
0x0000000000107007 : cmp rax, -0xfff ; jae 0x107018 ; ret
0x0000000000107037 : cmp rax, -0xfff ; jae 0x107048 ; ret
0x000000000010706a : cmp rax, -0xfff ; jae 0x10707b ; ret
0x000000000010709a : cmp rax, -0xfff ; jae 0x1070ab ; ret
0x00000000001070ca : cmp rax, -0xfff ; jae 0x1070db ; ret
0x0000000000107103 : cmp rax, -0xfff ; jae 0x107147 ; ret
0x0000000000107157 : cmp rax, -0xfff ; jae 0x107168 ; ret
0x0000000000107193 : cmp rax, -0xfff ; jae 0x1071d7 ; ret
0x00000000001071e7 : cmp rax, -0xfff ; jae 0x1071f8 ; ret
0x0000000000107217 : cmp rax, -0xfff ; jae 0x107228 ; ret
0x0000000000107253 : cmp rax, -0xfff ; jae 0x107297 ; ret
0x00000000001072a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00000000001072da : cmp rax, -0xfff ; jae 0x1072eb ; ret
0x0000000000107307 : cmp rax, -0xfff ; jae 0x107318 ; ret
0x0000000000107337 : cmp rax, -0xfff ; jae 0x107348 ; ret
0x000000000010736a : cmp rax, -0xfff ; jae 0x10737b ; ret
0x00000000001073a0 : cmp rax, -0xfff ; jae 0x1073e1 ; ret
0x00000000001073f7 : cmp rax, -0xfff ; jae 0x107408 ; ret
0x000000000010742a : cmp rax, -0xfff ; jae 0x10743b ; ret
0x000000000010745a : cmp rax, -0xfff ; jae 0x10746b ; ret
0x00000000001074b0 : cmp rax, -0xfff ; jae 0x1074f1 ; ret
0x0000000000107507 : cmp rax, -0xfff ; jae 0x107518 ; ret
0x0000000000107540 : cmp rax, -0xfff ; jae 0x107581 ; ret
0x0000000000107597 : cmp rax, -0xfff ; jae 0x1075a8 ; ret
0x00000000001075c7 : cmp rax, -0xfff ; jae 0x1075d8 ; ret
0x00000000001075fa : cmp rax, -0xfff ; jae 0x10760b ; ret
0x0000000000107627 : cmp rax, -0xfff ; jae 0x107638 ; ret
0x0000000000107723 : cmp rax, -0xfff ; jae 0x107767 ; ret
0x0000000000107780 : cmp rax, -0xfff ; jae 0x1077c1 ; ret
0x00000000001078a0 : cmp rax, -0xfff ; jae 0x1078e1 ; ret
0x0000000000107903 : cmp rax, -0xfff ; jae 0x107947 ; ret
0x000000000010795a : cmp rax, -0xfff ; jae 0x10796b ; ret
0x0000000000107987 : cmp rax, -0xfff ; jae 0x107998 ; ret
0x00000000001079b7 : cmp rax, -0xfff ; jae 0x1079c8 ; ret
0x00000000001079ea : cmp rax, -0xfff ; jae 0x1079fb ; ret
0x0000000000107f43 : cmp rax, -0xfff ; jae 0x107f87 ; ret
0x0000000000107fa3 : cmp rax, -0xfff ; jae 0x107fe7 ; ret
0x0000000000107ff7 : cmp rax, -0xfff ; jae 0x108008 ; ret
0x0000000000108027 : cmp rax, -0xfff ; jae 0x108038 ; ret
0x0000000000108057 : cmp rax, -0xfff ; jae 0x108068 ; ret
0x0000000000108087 : cmp rax, -0xfff ; jae 0x108098 ; ret
0x00000000001080ba : cmp rax, -0xfff ; jae 0x1080cb ; ret
0x00000000001080ea : cmp rax, -0xfff ; jae 0x1080fb ; ret
0x0000000000108117 : cmp rax, -0xfff ; jae 0x108128 ; ret
0x0000000000108147 : cmp rax, -0xfff ; jae 0x108158 ; ret
0x0000000000108177 : cmp rax, -0xfff ; jae 0x108188 ; ret
0x00000000001081a7 : cmp rax, -0xfff ; jae 0x1081b8 ; ret
0x000000000013faaa : cmp rax, -0xfff ; jae 0x13fabb ; ret
0x000000000013fafa : cmp rax, -0xfff ; jae 0x13fb0b ; ret
0x0000000000035767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x0000000000035e27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x000000000006b367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x000000000006b39a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00000000000bb967 : cmp rax, -0xfff ; jae 0xbb978 ; ret
0x00000000000bea57 : cmp rax, -0xfff ; jae 0xbea68 ; ret
0x00000000000bea87 : cmp rax, -0xfff ; jae 0xbea98 ; ret
0x00000000000cb387 : cmp rax, -0xfff ; jae 0xcb398 ; ret
0x00000000000cb57a : cmp rax, -0xfff ; jae 0xcb58b ; ret
0x00000000000cb657 : cmp rax, -0xfff ; jae 0xcb668 ; ret
0x00000000000cb6e0 : cmp rax, -0xfff ; jae 0xcb721 ; ret
0x00000000000cb740 : cmp rax, -0xfff ; jae 0xcb781 ; ret
0x00000000000cbbc7 : cmp rax, -0xfff ; jae 0xcbbd8 ; ret
0x00000000000cc6d7 : cmp rax, -0xfff ; jae 0xcc6e8 ; ret
0x00000000000cc877 : cmp rax, -0xfff ; jae 0xcc888 ; ret
0x00000000000cc8a7 : cmp rax, -0xfff ; jae 0xcc8b8 ; ret
0x00000000000cc907 : cmp rax, -0xfff ; jae 0xcc918 ; ret
0x00000000000cc937 : cmp rax, -0xfff ; jae 0xcc948 ; ret
0x00000000000cc967 : cmp rax, -0xfff ; jae 0xcc978 ; ret
0x00000000000cc997 : cmp rax, -0xfff ; jae 0xcc9a8 ; ret
0x00000000000e9b87 : cmp rax, -0xfff ; jae 0xe9b98 ; ret
0x00000000000e9bb7 : cmp rax, -0xfff ; jae 0xe9bc8 ; ret
0x00000000000e9be7 : cmp rax, -0xfff ; jae 0xe9bf8 ; ret
0x00000000000e9c17 : cmp rax, -0xfff ; jae 0xe9c28 ; ret
0x00000000000e9c47 : cmp rax, -0xfff ; jae 0xe9c58 ; ret
0x00000000000e9c77 : cmp rax, -0xfff ; jae 0xe9c88 ; ret
0x00000000000e9ca7 : cmp rax, -0xfff ; jae 0xe9cb8 ; ret
0x00000000000e9cd7 : cmp rax, -0xfff ; jae 0xe9ce8 ; ret
0x00000000000f4e93 : cmp rax, -0xfff ; jae 0xf4ed7 ; ret
0x00000000000f4ef3 : cmp rax, -0xfff ; jae 0xf4f37 ; ret
0x00000000000f5f67 : cmp rax, -0xfff ; jae 0xf5f78 ; ret
0x00000000000f6207 : cmp rax, -0xfff ; jae 0xf6218 ; ret
0x00000000000f6237 : cmp rax, -0xfff ; jae 0xf6248 ; ret
0x00000000000f6307 : cmp rax, -0xfff ; jae 0xf6318 ; ret
0x00000000000f6337 : cmp rax, -0xfff ; jae 0xf6348 ; ret
0x00000000000f63f7 : cmp rax, -0xfff ; jae 0xf6408 ; ret
0x00000000000f6427 : cmp rax, -0xfff ; jae 0xf6438 ; ret
0x00000000000f6460 : cmp rax, -0xfff ; jae 0xf64a1 ; ret
0x00000000000f6680 : cmp rax, -0xfff ; jae 0xf66c1 ; ret
0x00000000000f66e0 : cmp rax, -0xfff ; jae 0xf6721 ; ret
0x00000000000f6737 : cmp rax, -0xfff ; jae 0xf6748 ; ret
0x00000000000f6bc7 : cmp rax, -0xfff ; jae 0xf6bd8 ; ret
0x00000000000f6d10 : cmp rax, -0xfff ; jae 0xf6d51 ; ret
0x00000000000f6d67 : cmp rax, -0xfff ; jae 0xf6d78 ; ret
0x00000000000f6d97 : cmp rax, -0xfff ; jae 0xf6da8 ; ret
0x00000000000f6dc7 : cmp rax, -0xfff ; jae 0xf6dd8 ; ret
0x00000000000f6df7 : cmp rax, -0xfff ; jae 0xf6e08 ; ret
0x00000000000f6e27 : cmp rax, -0xfff ; jae 0xf6e38 ; ret
0x00000000000f6e60 : cmp rax, -0xfff ; jae 0xf6ea1 ; ret
0x00000000000f6eb7 : cmp rax, -0xfff ; jae 0xf6ec8 ; ret
0x00000000000f6ee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00000000000f7717 : cmp rax, -0xfff ; jae 0xf7728 ; ret
0x00000000000f7747 : cmp rax, -0xfff ; jae 0xf7758 ; ret
0x00000000000f7777 : cmp rax, -0xfff ; jae 0xf7788 ; ret
0x00000000000f77aa : cmp rax, -0xfff ; jae 0xf77bb ; ret
0x00000000000f7d87 : cmp rax, -0xfff ; jae 0xf7d98 ; ret
0x00000000000f7dba : cmp rax, -0xfff ; jae 0xf7dcb ; ret
0x00000000000f7de7 : cmp rax, -0xfff ; jae 0xf7df8 ; ret
0x00000000000f7e17 : cmp rax, -0xfff ; jae 0xf7e28 ; ret
0x00000000000f7e47 : cmp rax, -0xfff ; jae 0xf7e58 ; ret
0x00000000000f7e7a : cmp rax, -0xfff ; jae 0xf7e8b ; ret
0x00000000000f7ea7 : cmp rax, -0xfff ; jae 0xf7eb8 ; ret
0x00000000000f7ed7 : cmp rax, -0xfff ; jae 0xf7ee8 ; ret
0x00000000000f7f07 : cmp rax, -0xfff ; jae 0xf7f18 ; ret
0x00000000000fab40 : cmp rax, -0xfff ; jae 0xfab81 ; ret
0x00000000000faeaa : cmp rax, -0xfff ; jae 0xfaebb ; ret
0x00000000000fb623 : cmp rax, -0xfff ; jae 0xfb667 ; ret
0x00000000000fbd77 : cmp rax, -0xfff ; jae 0xfbd88 ; ret
0x00000000000fbda7 : cmp rax, -0xfff ; jae 0xfbdb8 ; ret
0x00000000000fbdd7 : cmp rax, -0xfff ; jae 0xfbde8 ; ret
0x00000000000fc177 : cmp rax, -0xfff ; jae 0xfc188 ; ret
0x00000000000fc357 : cmp rax, -0xfff ; jae 0xfc368 ; ret
0x00000000000fc390 : cmp rax, -0xfff ; jae 0xfc3d1 ; ret
0x00000000000fc3f0 : cmp rax, -0xfff ; jae 0xfc431 ; ret
0x00000000000fc8e7 : cmp rax, -0xfff ; jae 0xfc8f8 ; ret
0x00000000000fc987 : cmp rax, -0xfff ; jae 0xfc998 ; ret
0x00000000000fc9c3 : cmp rax, -0xfff ; jae 0xfca07 ; ret
0x00000000000fcb17 : cmp rax, -0xfff ; jae 0xfcb28 ; ret
0x00000000000fcb47 : cmp rax, -0xfff ; jae 0xfcb58 ; ret
0x00000000000fcb80 : cmp rax, -0xfff ; jae 0xfcbc1 ; ret
0x00000000000fcbd7 : cmp rax, -0xfff ; jae 0xfcbe8 ; ret
0x00000000000fcc10 : cmp rax, -0xfff ; jae 0xfcc51 ; ret
0x00000000000fcc67 : cmp rax, -0xfff ; jae 0xfcc78 ; ret
0x00000000000fcfd7 : cmp rax, -0xfff ; jae 0xfcfe8 ; ret
0x00000000000fd007 : cmp rax, -0xfff ; jae 0xfd018 ; ret
0x00000000000fd037 : cmp rax, -0xfff ; jae 0xfd048 ; ret
0x00000000000fe587 : cmp rax, -0xfff ; jae 0xfe598 ; ret
0x00000000000fe5b7 : cmp rax, -0xfff ; jae 0xfe5c8 ; ret
0x00000000001735cc : cmp rax, 0xfd ; ja 0x1735a0 ; call 0x1f8b0
0x0000000000079614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x00000000001001c3 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfc3e9
0x000000000007cc48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x0000000000113dda : cmp rax, rdx ; jb 0x113dd7 ; xor eax, eax ; ret
0x0000000000113dd9 : cmp rax, rdx ; jb 0x113dd8 ; xor eax, eax ; ret
0x00000000001376f0 : cmp rax, rdx ; je 0x137709 ; add rsp, 8 ; ret
0x0000000000048084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x0000000000087b8c : cmp rax, rdx ; jne 0x87b48 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000019ebd8 : cmp rbp, rdx ; call qword ptr [rbx]
0x000000000007ec14 : cmp rbx, rax ; je 0x7ec27 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173789 : cmp rbx, rbp ; jae 0x17379e ; call qword ptr [rbx]
0x0000000000173789 : cmp rbx, rbp ; jae 0x1737a2 ; call qword ptr [rbx]
0x00000000001737b8 : cmp rbx, rbp ; jb 0x1737b4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000074f4d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016ee1a : cmp rcx, rax ; jne 0x16ee4a ; xor eax, eax ; ret
0x000000000016fc5a : cmp rcx, rax ; jne 0x16fc8a ; xor eax, eax ; ret
0x00000000001739c7 : cmp rdi, 1 ; ja 0x1739d6 ; ret
0x000000000004a499 : cmp rdi, r8 ; jbe 0x4a499 ; nop ; pop rbx ; ret
0x00000000000fc240 : cmp rdi, rdx ; ja 0xfc276 ; ret
0x00000000000f5e5f : cmp rdi, rsi ; ja 0xf5e56 ; ret
0x00000000000833d9 : cmp rdx, r8 ; jne 0x833a6 ; ret
0x00000000001147b1 : cmp rdx, rax ; jne 0x114796 ; ret
0x00000000000ab5b6 : cmp rdx, rax ; jne 0xab5a8 ; xor eax, eax ; ret
0x00000000001228e5 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000013b1be : cmp rdx, rcx ; je 0x13b1d6 ; ret
0x000000000008e737 : cmp rdx, rcx ; jne 0x8e726 ; ret
0x000000000008e736 : cmp rdx, rcx ; jne 0x8e727 ; ret
0x00000000000ccee6 : cmp rdx, rcx ; jne 0xccf15 ; ret
0x0000000000113eb9 : cmp rdx, rdi ; setae al ; ret
0x0000000000072d59 : cmp rsi, rcx ; jb 0x72d58 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c009 : cmp rsi, rcx ; jne 0x7c008 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000004821c : cmp rsi, rdx ; jne 0x48217 ; xor eax, eax ; ret
0x000000000010ffe2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000011000e : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014b8d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bbd7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006c3f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000014cad7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000082186 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000008d845 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014c7d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016e899 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000001aabe1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x000000000002b766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000196721 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x196725
0x0000000000146f06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c4d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c1d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000194b90 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; cld ; call qword ptr [rsi]
0x0000000000133536 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffee
0x0000000000194435 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsi
0x000000000006bc81 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000a2720 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001956d1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rsp
0x0000000000195551 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00000000001b0f11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001ad5b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x000000000012aff5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int 0x29
0x0000000000197aa1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000188065 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rax
0x00000000000038f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000001943fd : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rcx]
0x0000000000108a42 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001956d0 : cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; cld ; call rsp
0x00000000000038f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000173769 : cmpxchg dword ptr [rip + 0x252108], edx ; je 0x17377c ; ret
0x000000000003a6a3 : cqo ; idiv rsi ; ret
0x00000000001a1cb8 : cwde ; adc ebp, ebp ; call rsi
0x00000000000bde73 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001349ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000029a6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000036953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b4bc5 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000d479f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000da4fa : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000008473b : cwde ; add rax, rdx ; jmp rax
0x00000000001b1e98 : cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a7438 : cwde ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000000fb5ff : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000001bb348 : cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001bb468 : cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00000000001afa38 : cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000003afd : cwde ; ret
0x000000000009e8d4 : cwde ; ret 0xfffe
0x0000000000071384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x000000000012356e : cwde ; shr rax, 4 ; ret
0x00000000001ba3a9 : cwde ; sti ; jmp qword ptr [rdx]
0x00000000000a3c69 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000a1c51 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000a3c6a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a1c52 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000049ab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x0000000000087b35 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x0000000000086e87 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000059058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000008ab39 : dec byte ptr [rax - 0x77] ; ret
0x000000000003e054 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000d3c47 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000391aa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000005e793 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000080adc : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x000000000009ddc7 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x000000000019498f : dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000074039 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a3dea : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a1d92 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003e1ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000afc68 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d465c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000007f18d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000469c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x000000000008311d : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000005e794 : dec dword ptr [rax + 0x39] ; ret
0x000000000005c58f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000061b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000018892b : dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x0000000000186c4f : dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x0000000000186c4b : dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x0000000000063d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c558f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000005c337 : dec dword ptr [rax + 0x63] ; ret
0x00000000000ed0f9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000006c70b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000008cb29 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000127ff4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x000000000008ec84 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003aa02 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f5e8b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000086d21 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000051d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000141fa6 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005ebf5 : dec dword ptr [rax + 1] ; ret
0x00000000000360c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004b686 : dec dword ptr [rax - 0x39] ; ret
0x00000000000cd54c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000bf68c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000fb5fd : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000fda04 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000abe36 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000eb95d : dec dword ptr [rax - 0x73] ; mov word ptr [r8 - 0x77], cs ; ret
0x00000000001112bd : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000010e5ce : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000101edd : dec dword ptr [rax - 0x75] ; jge 0x101ee7 ; call rbx
0x0000000000102190 : dec dword ptr [rax - 0x75] ; jge 0x10219a ; call rbx
0x0000000000103d28 : dec dword ptr [rax - 0x75] ; jge 0x103d32 ; call rbx
0x00000000000eb06e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x0000000000048da7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000000815cf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e185d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x000000000007a8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00000000000b21d8 : dec dword ptr [rax - 0x77] ; call 0x4ccdb5f5
0x000000000008e928 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000fc2da : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013b39c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000139c79 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000b7403 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000173544 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rbx ; ret
0x0000000000057fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x0000000000033edd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfeb9
0x0000000000020fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x00000000000f3654 : dec dword ptr [rax - 0x77] ; iretd ; call 0x1f8ae
0x0000000000171f7a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000001335e0 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000002233e : dec dword ptr [rax - 0x77] ; ret
0x00000000000fc133 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fc22e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000e9d81 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000f2943 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000005ebeb : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000076f93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000005ed1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00000000000dfe9e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x0000000000036b2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00000000000369d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00000000000cd5dc : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000002facb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x000000000011ce8a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000013f4c3 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f33f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000355b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000057af2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000962d6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000134196 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000cf688 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000006af20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x0000000000069a42 : dec dword ptr [rax - 0x77] ; ret 0xb5e8
0x00000000001422af : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000593ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c8e9c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000005dffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x00000000001341d5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000094ba5 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dc460 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000086c8e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009c69c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x000000000002fb34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000002100a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x00000000001007be : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000012dc4a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000021002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00000000000f35e6 : dec dword ptr [rax - 0x77] ; xlatb ; call 0x1f8ae
0x0000000000080add : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000bb84d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000114eef : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c579d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f3f84 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000dff45 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x000000000010efe0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000088b10 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x000000000012a44f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000fe380 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006dcdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00000000001051e6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00000000001081ef : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000094e30 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000013f6b6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013f4bf : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000001735cb : dec dword ptr [rax - 0x7d] ; clc ; std ; ja 0x1735a1 ; call 0x1f8b1
0x00000000000312f1 : dec dword ptr [rax - 0x7d] ; ret
0x000000000007f13f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000025c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8811 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000004f7b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000d5975 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000be7a6 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000060ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000cf741 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000076a48 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000159cdc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000001870fb : dec dword ptr [rax] ; ret 0xfffd
0x0000000000186f67 : dec dword ptr [rax] ; sal eax, -1 ; pop rax ; ret
0x0000000000188f1b : dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000188f17 : dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00000000000f8333 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001374b0 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x0000000000187b37 : dec dword ptr [rbp - 0x21000c84] ; test esi, ebx ; call qword ptr [rax]
0x0000000000187f3b : dec dword ptr [rbp - 0x51] ; call qword ptr [rcx]
0x000000000010239e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d3b00 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000000ed7ee : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x0000000000097e0f : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013cb09 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00000000000f4ff2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dde8f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000142bdd : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000d4c38 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x000000000019a5fb : dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x00000000000dacd9 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00000000000ad415 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x0000000000187b9f : dec dword ptr [rbx - 0x7e] ; jmp rdx
0x000000000004dc0e : dec dword ptr [rcx + 0x29] ; ret
0x00000000000d2539 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x000000000004d7dc : dec dword ptr [rcx + 0x39] ; ret
0x00000000000820a2 : dec dword ptr [rcx + 0x39] ; ret 0x4a74
0x000000000004df52 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000010c2ab : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000faae1 : dec dword ptr [rcx + 0x458949ef] ; or al, ch ; ret
0x000000000002ebb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000000711ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x00000000000533f9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x0000000000197b7b : dec dword ptr [rcx + rbp + 0x43740001] ; call rsp
0x000000000019a853 : dec dword ptr [rcx + rcx*2 + 0x66340002] ; cli ; call rsp
0x0000000000080d0d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x000000000004b389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000013b4c6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x000000000005f10d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a6
0x000000000005a6d5 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000010c394 : dec dword ptr [rcx - 0x5dc27c3e] ; ret
0x000000000005c60a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000f8a13 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x0000000000101d15 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010219e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000101da8 : dec dword ptr [rcx - 0x75] ; jge 0x101db2 ; call rbx
0x0000000000101ecf : dec dword ptr [rcx - 0x75] ; jge 0x101ed9 ; call rbx
0x0000000000102012 : dec dword ptr [rcx - 0x75] ; jge 0x10201c ; call rbx
0x0000000000102182 : dec dword ptr [rcx - 0x75] ; jge 0x10218c ; call rbx
0x00000000001039a0 : dec dword ptr [rcx - 0x75] ; jge 0x1039aa ; call rbx
0x0000000000103ac8 : dec dword ptr [rcx - 0x75] ; jge 0x103ad2 ; call rbx
0x0000000000103c0b : dec dword ptr [rcx - 0x75] ; jge 0x103c15 ; call rbx
0x0000000000103d0c : dec dword ptr [rcx - 0x75] ; jge 0x103d16 ; call rbx
0x00000000001735e8 : dec dword ptr [rcx - 0x75] ; jge 0x173614 ; call 0x1f8af
0x00000000000f30d5 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010e983 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000ee3ac : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000142184 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000009ddc8 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00000000000488c5 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000e328d : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000002bc47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000000dd70f : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000004ea8e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000022f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x0000000000188517 : dec dword ptr [rcx - 0x7c000c25] ; fdiv st(3) ; jmp rax
0x00000000000662ef : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000662d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00000000000d7ca8 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x000000000018874b : dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x0000000000188683 : dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x000000000004504c : dec dword ptr [rcx] ; ret
0x0000000000109aee : dec dword ptr [rcx] ; setbe al ; ret
0x000000000018869f : dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x0000000000106962 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000011cbbd : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x0000000000079942 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000010a33d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a2ce ; loopne 0x10a34e ; ret
0x000000000002df46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x0000000000046271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009d955 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x000000000009d942 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x0000000000023b8b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000114d85 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b4d3a : dec dword ptr [rdi] ; ret 0xd0f7
0x0000000000120735 : dec dword ptr [rdi] ; ret 0xfe9
0x0000000000074151 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000068467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000013d419 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d8fb0 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x000000000012224e : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000013781a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009ce28 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009c93b : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000009c947 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x000000000012193c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000001715b0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d6ba1 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000000e9dfa : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000007305b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000e1f13 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x00000000000e270a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000bb3b0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00000000000dffd0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x0000000000075f7e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000e32ed : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000523bd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x00000000001052df : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000cd43d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001885db : dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x0000000000186d27 : dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x000000000005c147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x0000000000187bbf : dec dword ptr [rsi + rdi*2 - 0x7ee8000d] ; call qword ptr [rsi]
0x0000000000189c77 : dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00000000001884c7 : dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x0000000000189047 : dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000188627 : dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x000000000019832b : dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00000000001981bb : dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x000000000018ba0f : dec eax ; add ebx, edi ; call rax
0x0000000000186bb7 : dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x0000000000188607 : dec eax ; push rcx ; hlt ; call rdx
0x00000000001882c7 : dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00000000001882c3 : dec ecx ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x000000000018825b : dec ecx ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x0000000000049e3d : dec ecx ; ret
0x0000000000185cb7 : dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x0000000000185ca3 : dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000194ccb : dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x000000000019ada3 : dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x000000000019759b : dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x000000000019a553 : dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x0000000000196203 : dec esp ; add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00000000001983d3 : dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00000000001975e3 : dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x000000000019a74b : dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x0000000000197a9b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x0000000000195d13 : dec esp ; imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x000000000019977b : dec esp ; iretd ; add dword ptr [rax], eax ; je 0x199799 ; clc ; jmp rsp
0x0000000000198a53 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x000000000019aadb : dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x0000000000199553 : dec esp ; ret
0x0000000000196c0b : dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x000000000019671b : dec esp ; sahf ; add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x19672b
0x00000000001968b3 : dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00000000001966a3 : dec esp ; wait ; add byte ptr [rax], al ; jmp 0x1966b3
0x0000000000197cc3 : dec esp ; xor al, byte ptr [rcx] ; add byte ptr [rax + rdx*4], al ; jmp rsp
0x00000000000a3de9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000a1d91 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000006c896 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000025c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d7ca7 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000001b93d1 : div bh ; call qword ptr [rdx]
0x00000000000db9fd : div byte ptr [rax - 0xa] ; ret
0x0000000000095f3f : div byte ptr [rbp + 0xa] ; jmp 0x95f0a
0x000000000008ad12 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000009e171 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000fa0d7 : div byte ptr [rcx] ; shr al, 0x71 ; ret
0x0000000000064124 : div dh ; ret
0x0000000000053999 : div dh ; ret 0x4050
0x0000000000111b13 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00000000000f5e61 : div dword ptr [rdi - 0x14] ; ret
0x0000000000093a44 : div dword ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000006e290 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116c2f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781cf : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116d2c : div ebx ; pop rbx ; pop rbp ; ret
0x00000000000504c5 : div ecx ; add eax, r8d ; ret
0x00000000000aa12a : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000198db1 : div esi ; call rsp
0x000000000006e796 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e28f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116c2e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781ce : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116d2b : div rbx ; pop rbx ; pop rbp ; ret
0x0000000000186bb8 : enter -0x11a2, -1 ; pop rsi ; out dx, al ; call rsp
0x00000000001a2a28 : enter -0x12bd, -1 ; and eax, 0x4000001 ; ret 0x18f
0x000000000001f977 : enter -0x1401, -0x3b ; ret
0x00000000000d0aa1 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x00000000000edf60 : enter -0x1d2d, -0x7b ; ret 0x850f
0x0000000000045a23 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x000000000009e07e : enter -0x208c, -0xd ; ret
0x00000000000a06e1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000e7244 : enter -0x2e89, 0x39 ; ret
0x000000000001f967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000012ed61 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00000000000c6646 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000171724 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018ba10 : enter -0x4ff, -1 ; rol byte ptr [rcx], 1 ; sti ; jmp rax
0x00000000000a3c66 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a1c4e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a3de6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a1d8e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000034b68 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000048dab : enter -0x74b8, 0x14 ; ret
0x00000000000ac60d : enter -0x74b8, 5 ; ret
0x0000000000101df4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001316a7 : enter 0, 0 ; call rax
0x0000000000131669 : enter 0, 0 ; jmp rcx
0x000000000012c376 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000103ed8 : enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000007cc4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000034cbc : enter 0x280f, -0x3f ; ret
0x000000000004a13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008a57d : enter 0x31c3, -0x40 ; ret
0x0000000000086eae : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000134517 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000134474 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000134544 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000019bd0e : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x0000000000134deb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000134ccb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007e808 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000086f1b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000184e9c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003a68d : enter 0x948, -0x30 ; ret
0x00000000000e85d9 : enter 0xf41, -0x62 ; ret 0x844
0x000000000016e946 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000088fa1 : enter 0xf66, -0x15 ; ret
0x0000000000149aac : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000034cb8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x00000000000a74c4 : enter 5, 0 ; ret
0x00000000001a8805 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00000000001a8785 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x0000000000115ff6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000104380 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000114f75 : fadd dword ptr [rax] ; leave ; ret
0x00000000000824bf : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000013c87d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000001b2d28 : fadd dword ptr [rbx - 0xa] ; jmp rdi
0x0000000000070980 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b87bd : fadd dword ptr [rcx] ; add al, ah ; fdiv st(7) ; jmp rdi
0x00000000001bb883 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000074d17 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000004ed8b : fadd dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000c557e : fadd qword ptr [r9] ; ret
0x00000000001af114 : fadd qword ptr [rcx + 1] ; add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000000c557f : fadd qword ptr [rcx] ; ret
0x00000000000baf17 : fadd st(1) ; call 0xffffffff89cdd842
0x00000000000bb281 : fadd st(1) ; call 0xffffffff89cddbac
0x0000000000199504 : fadd st(2), st(0) ; add dword ptr [rax], eax ; je 0x1994f7 ; idiv edi ; hlt ; ret 1
0x0000000000171d48 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000016fc9e : fadd st(3) ; ret
0x0000000000105240 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016e491 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001734fc : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1bb7 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00000000000bcb0d : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001844d8 : fcmovb st(0), st(3) ; ret
0x000000000002c4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x0000000000188610 : fcom qword ptr [rcx - 0xc] ; jmp rsi
0x0000000000101d99 : fcomi st(1) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001884cd : fcomi st(3) ; call qword ptr [rcx]
0x00000000001ac2c9 : fcomi st(3) ; call qword ptr [rdi]
0x00000000001884e9 : fcomi st(3) ; call rcx
0x0000000000188479 : fcomi st(3) ; call rsp
0x00000000001884c5 : fcomi st(3) ; dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00000000001884e5 : fcomi st(3) ; inc dword ptr [rcx - 0x25] ; call rcx
0x0000000000188339 : fcomi st(3) ; jmp qword ptr [rdi]
0x00000000001adc11 : fcomi st(4) ; call qword ptr [rbx]
0x00000000001b4da9 : fcomi st(6) ; jmp rsi
0x0000000000033c3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006dfeb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000326ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083934 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000185259 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000010140b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001af978 : fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001834c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001ac128 : fcomp st(1) ; call qword ptr [rbx]
0x00000000001ac168 : fcomp st(1) ; call qword ptr [rsi]
0x0000000000101ecc : fcomp st(1) ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101edc ; call rbx
0x00000000001ac1a8 : fcomp st(1) ; jmp qword ptr [rcx]
0x00000000001882c9 : fcompi st(3) ; call qword ptr [rcx]
0x00000000001882c5 : fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x000000000018825d : fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x000000000009e080 : fcompi st(3) ; ret
0x00000000001ade79 : fcompi st(4) ; call qword ptr [rbx]
0x00000000001ade31 : fcompi st(4) ; jmp qword ptr [rcx]
0x000000000006ac45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001b01b8 : fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b2014 : fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6014 : fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00000000001a8079 : fdiv st(0) ; call qword ptr [rax]
0x0000000000102003 : fdiv st(1) ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102010 : fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x10201e ; call rbx
0x0000000000188509 : fdiv st(3) ; jmp qword ptr [rdi]
0x000000000018851d : fdiv st(3) ; jmp rax
0x00000000000ba674 : fdiv st(3) ; ret
0x000000000019471d : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x000000000010f51f : fdiv st(6) ; ret 0xf02
0x00000000001b87c1 : fdiv st(7) ; jmp rdi
0x00000000001a3848 : fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00000000001ae914 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001aed14 : fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x000000000019ab99 : fdivr st(2) ; jmp rsp
0x00000000000cd30f : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000194631 : fdivr st(3) ; jmp rax
0x0000000000194611 : fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000188489 : fdivr st(3), st(0) ; call qword ptr [rcx]
0x0000000000188459 : fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x0000000000188455 : fdivr st(3), st(0) ; ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x0000000000182815 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001ae7a8 : fdivr st(5) ; hlt ; jmp qword ptr [rcx]
0x00000000001aa514 : fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x000000000016c01d : fdivr st(7) ; ret
0x00000000000a4b1e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001b8999 : fdivrp st(7) ; jmp rdi
0x00000000000f6a92 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000000724b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000009bddc : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x0000000000114d7f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000012e189 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001b89d5 : fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00000000001b8995 : fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00000000000c288e : fiadd word ptr [r9] ; ret
0x00000000001a8d4d : fiadd word ptr [rax] ; add byte ptr [rax], al ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00000000001a8d65 : fiadd word ptr [rax] ; add byte ptr [rax], bl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x000000000012bf90 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000001999e5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00000000000c288f : fiadd word ptr [rcx] ; ret
0x0000000000102559 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001850a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000173988 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000e964b : fidiv dword ptr [rcx] ; shr al, 0x7d ; ret
0x0000000000142905 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e729f : fidivr dword ptr [rcx] ; ret 0x3673
0x00000000000ff7ee : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000047278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00000000001102b4 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00000000000ebaf5 : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00000000000bc83d : fild dword ptr [rcx + 1] ; ret
0x00000000001a8e45 : fild word ptr [rax] ; add byte ptr [rax + 0x64], cl ; int1 ; call qword ptr [rdx]
0x00000000000d1f17 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00000000000fb7d6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000504b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d28ce : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003d935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000145186 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000074140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000320c0 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000136d82 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011d59b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000aee47 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008e952 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000001f92a : fimul dword ptr [rcx + 0x5b58003a] ; pop rbp ; ret
0x000000000012e816 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000016adc2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cbce1
0x000000000016be42 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39ccd61
0x00000000000e84d3 : fimul dword ptr [rdi] ; popfq ; ret
0x000000000013b39f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000775ee : fimul word ptr [rax - 0x77] ; ret
0x00000000000af1b4 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000837f1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000004838e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x483e8
0x0000000000049f6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x49fc8
0x000000000003e057 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x0000000000037360 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x0000000000137dee : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000139c7c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000003e051 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000b85e1 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000103ac5 : fistp qword ptr [rbp - 0x74b6000f] ; jge 0x103ad5 ; call rbx
0x0000000000114965 : fistp qword ptr [rip + 0x3948002b] ; ret 0x840f
0x000000000007221f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000139d21 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000001369e8 : fistp word ptr [rbx - 0x17] ; mov ecx, 0x90ffee8e ; pop rbx ; ret
0x000000000007d882 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c4e28 : fisttp dword ptr [rax + 0x39] ; ret
0x0000000000173985 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000049011 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000010896e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2ba8ca ; pop rbx ; ret
0x00000000000ddeda : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x000000000004902b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000061f70 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000000f0324 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000047654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000003693f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000009c274 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000102a39 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f9c91 : fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000003e147 : fisttp qword ptr [rax + 0x29] ; ret
0x0000000000083d6e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000149b92 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000024ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000aebb4 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b7275 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008db6a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000010da42 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000010da45 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000033c4a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000c7f5c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000129921 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000010dad8 : fisttp word ptr [rax - 0x77] ; ret
0x000000000005905b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009e8f1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000173689 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000005e690 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000490af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000001380a2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000117187 : fisttp word ptr [rcx + rcx*4 - 0x1f] ; mov rsi, r12 ; call 0x73449
0x0000000000087557 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x0000000000129a23 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000014a59d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000010137d : fisttp word ptr [rsi + 0x2c] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000e9db8 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000016e861 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000114a9e : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000000e457c : fisub dword ptr [rsi - 0x7f] ; loop 0xe4587 ; add esi, esi ; ret
0x000000000016e561 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014cffc : fisubr word ptr [rcx] ; ret 0xfec5
0x00000000001a88fd : fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x0000000000098617 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x00000000000f59d3 : fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000183501 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034f9e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f39 : fld xword ptr [rsp + 8] ; ret
0x0000000000035029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035007 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000149bd0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008dea9 : fldenv dword ptr [rsi + 0xf] ; je 0x8df06 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000095b37 : fldenv dword ptr [rsi + 0xf] ; je 0x95b94 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016e8e1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008dda1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001972b1 : fldz ; call rsp
0x0000000000048434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000008700e : fmul dword ptr [rax + 0x21] ; ret
0x000000000007edff : fmul dword ptr [rax + 0x39] ; ret
0x0000000000087b2b : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00000000000b9264 : fmul dword ptr [rax + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x0000000000099046 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000ce8d2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000424d7 : fmul dword ptr [rax - 0x39] ; ret
0x000000000012f651 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c3e68
0x00000000000f37b2 : fmul dword ptr [rax - 0x75] ; jl 0xf37e3 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000074e11 : fmul dword ptr [rax - 0x77] ; ret
0x00000000000bde79 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7406 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775e : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000053620 : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000056341 : fmul dword ptr [rdi] ; ret
0x00000000000b8aac : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000047d63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ea8f0 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000c7eab : fmul qword ptr [rax - 0x7d] ; ret
0x000000000010dad5 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000003d6dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000089339 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008f27f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001aff14 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff17 ; jmp qword ptr [rcx]
0x000000000019ff14 : fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff22
0x00000000001a3a14 : fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000423d2 : fmul st(0) ; ret
0x0000000000188484 : fmul st(3) ; push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x0000000000042350 : fmulp st(1) ; ret
0x00000000000d0af3 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000002532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000035186 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000048062 : fnstsw dword ptr [rax + 1] ; ret
0x00000000001ac129 : fpatan ; call qword ptr [rbx]
0x00000000001ac169 : fpatan ; call qword ptr [rsi]
0x00000000001ac1a9 : fpatan ; jmp qword ptr [rcx]
0x0000000000033bd5 : fpatan ; ret
0x0000000000199cd1 : fprem ; call rsp
0x00000000001a6b89 : frndint ; call qword ptr [rax]
0x000000000016e661 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003505c : fscale ; fstp st(1) ; ret
0x0000000000194615 : fsincos ; call rax
0x00000000001946b5 : fsincos ; jmp qword ptr [rax]
0x00000000001946d5 : fsincos ; jmp rax
0x00000000001831e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000009628e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000035188 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000183560 : fstp st(0) ; ret 0xde5d
0x0000000000035130 : fstp st(1) ; add rsp, 8 ; ret
0x000000000003505e : fstp st(1) ; ret
0x0000000000034fa0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502d : fstp xword ptr [rdi] ; ret
0x0000000000035778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035458 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035189 : fsub dword ptr [rip + 0x200] ; ret
0x000000000016e961 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d58c9 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16840
0x00000000000a0ac4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000cc672 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000000a98bb : fsub qword ptr [rsi + 0xf] ; jmp 0xa9887
0x000000000016e761 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000890bc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000173bfb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ae148 : fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x0000000000101df2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001038fb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000103cfa : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000103368 : fsubp st(0) ; ret 0xffe8
0x0000000000103268 : fsubp st(0) ; ret 0xffe9
0x0000000000034fa2 : fsubp st(1) ; ret
0x00000000000c6781 : fsubp st(1) ; ret 0xffec
0x0000000000108aeb : fsubr dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001afdf8 : fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000000b926b : fsubr qword ptr [rcx] ; ret
0x0000000000196c41 : fsubr st(5) ; jmp rsp
0x0000000000084c62 : fsubrp st(4) ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x84c79 ; ret
0x0000000000185238 : fucom st(5) ; loop 0x185291 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000186e0d : fucomi st(7) ; jmp rsi
0x000000000007b5df : fucomp st(0) ; ret
0x00000000001a6109 : fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001a7069 : fucomp st(7) ; jmp qword ptr [rbx]
0x0000000000186e09 : fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x000000000006e50e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000075bdd : fucompi st(0) ; cmp eax, 0x89000056 ; ret 0x98eb
0x000000000007652d : fucompi st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x00000000000c856d : fucompi st(0) ; int 0xa3
0x00000000000be8fc : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x0000000000173547 : fucompi st(0) ; pop rbx ; ret
0x00000000000f3593 : fucompi st(0) ; push rdi ; ret 0xfff2
0x00000000000f84c8 : fucompi st(0) ; rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ef0f7 : fucompi st(0) ; ret
0x000000000010e9e0 : fucompi st(0) ; ret 0xf10e
0x0000000000057fd8 : fucompi st(0) ; ret 0xfc78
0x0000000000033ee0 : fucompi st(0) ; ret 0xfeb9
0x0000000000020fd8 : fucompi st(0) ; ret 0xffe8
0x0000000000119168 : fucompi st(0) ; ret 6
0x00000000000877c2 : fucompi st(0) ; sub byte ptr [rax - 0x76b70007], al ; ret
0x000000000008cb5d : fxch st(0), st(7) ; or eax, dword ptr [rax] ; ret
0x0000000000101edb : fyl2x ; dec dword ptr [rax - 0x75] ; jge 0x101ee9 ; call rbx
0x0000000000101ec0 : fyl2x ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000101ecd : fyl2x ; dec dword ptr [rcx - 0x75] ; jge 0x101edb ; call rbx
0x000000000013e418 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cd440 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001aa40d : hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001af72c : hlt ; add dword ptr [r8], r8d ; loopne 0x1af78c ; cmc ; call qword ptr [rdx]
0x0000000000199ccd : hlt ; add dword ptr [rax], eax ; fprem ; call rsp
0x00000000001ade2c : hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001ae62c : hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001aff2c : hlt ; add qword ptr [r8], r8 ; jo 0x1aff2f ; jmp qword ptr [rcx]
0x000000000010514b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000018896e : hlt ; call qword ptr [rax - 0x1f000bae]
0x000000000018853e : hlt ; call qword ptr [rax - 0x1f000bb4]
0x00000000001acbf2 : hlt ; call qword ptr [rax]
0x0000000000188686 : hlt ; call qword ptr [rbx]
0x00000000001885c6 : hlt ; call qword ptr [rcx]
0x00000000001acbaa : hlt ; call qword ptr [rsi]
0x00000000001ad54a : hlt ; call rax
0x0000000000188b8e : hlt ; call rdi
0x000000000018860a : hlt ; call rdx
0x00000000001ae852 : hlt ; call rsi
0x00000000001889c6 : hlt ; call rsp
0x000000000019a5a0 : hlt ; cli ; jmp rsp
0x00000000001aa52c : hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x000000000018904c : hlt ; cmc ; call rsp
0x00000000001aed2c : hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x000000000009e02b : hlt ; cmp ecx, esi ; je 0x9e026 ; ret
0x0000000000199e40 : hlt ; cmp edi, ecx ; jmp rsp
0x000000000018892a : hlt ; dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00000000000dd70e : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000018874a : hlt ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x0000000000188682 : hlt ; dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x000000000018869e : hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00000000001885da : hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x0000000000188626 : hlt ; dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00000000001981ba : hlt ; dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x0000000000188606 : hlt ; dec eax ; push rcx ; hlt ; call rdx
0x00000000001972b0 : hlt ; fldz ; call rsp
0x00000000001ae631 : hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001885d6 : hlt ; inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x0000000000188786 : hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00000000001889ca : hlt ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x000000000018869a : hlt ; inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x0000000000188936 : hlt ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00000000001885c2 : hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00000000001886e6 : hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x0000000000198182 : hlt ; inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x0000000000188562 : hlt ; inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x0000000000188566 : hlt ; inc eax ; hlt ; jmp rax
0x0000000000188992 : hlt ; inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x0000000000188996 : hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00000000001978e0 : hlt ; int1 ; call rsp
0x00000000000f5e2d : hlt ; ja 0xf5dc7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001835e8 : hlt ; jmp 0x1835bd
0x000000000018856e : hlt ; jmp qword ptr [rax + 0x22fff44c]
0x000000000018899e : hlt ; jmp qword ptr [rax + 0x26fff452]
0x00000000001ae14a : hlt ; jmp qword ptr [rbx]
0x0000000000188842 : hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00000000001acdaa : hlt ; jmp qword ptr [rcx]
0x000000000018868e : hlt ; jmp qword ptr [rdi]
0x0000000000188572 : hlt ; jmp qword ptr [rdx]
0x00000000001886f2 : hlt ; jmp qword ptr [rip + 0x22fff454]
0x00000000001889a2 : hlt ; jmp qword ptr [rsi]
0x0000000000188542 : hlt ; jmp rax
0x00000000001ac452 : hlt ; jmp rcx
0x00000000001ae83a : hlt ; jmp rdi
0x00000000001889a6 : hlt ; jmp rdx
0x0000000000188612 : hlt ; jmp rsi
0x0000000000198282 : hlt ; jmp rsp
0x0000000000171c25 : hlt ; jne 0x171d47 ; ret
0x0000000000171c24 : hlt ; jne 0x171d48 ; ret
0x00000000001b202c : hlt ; jo 0x1b2037 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x000000000018862a : hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00000000001885ca : hlt ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00000000001886ee : hlt ; lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00000000001885f6 : hlt ; lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x0000000000188802 : hlt ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x0000000000188662 : hlt ; ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00000000001887de : hlt ; ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x0000000000188632 : hlt ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00000000001a5c2c : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c28 ; jmp qword ptr [rcx]
0x000000000015a11a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015241e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e10b6 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x0000000000171233 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000188982 : hlt ; push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00000000001887ee : hlt ; push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00000000001887e6 : hlt ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x0000000000188782 : hlt ; push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x0000000000188546 : hlt ; push rax ; hlt ; jmp rax
0x0000000000188976 : hlt ; push rax ; push rdx ; hlt ; jmp rax
0x0000000000188742 : hlt ; push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x000000000019a750 : hlt ; push rdi ; cli ; jmp rsp
0x000000000009e00b : hlt ; ret
0x000000000019add8 : hlt ; ret 0xfffd
0x00000000000f3458 : hlt ; ret 0xffff
0x000000000019950c : hlt ; ret 1
0x0000000000194975 : hlt ; sti ; jmp rax
0x0000000000183723 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000171237 : hlt ; sub eax, edx ; ret
0x000000000009e8ce : hlt ; sub rsp, 8 ; call 0x8ab77
0x0000000000003cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d671b : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66be ; pop rbx ; ret
0x000000000007d8a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000b943e : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000104575 : idiv bh ; add rsp, 0x408 ; ret
0x0000000000189d32 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x189d3a ; jmp qword ptr [rdx]
0x0000000000189d2a : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x0000000000189cca : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189cd2 ; jmp qword ptr [rdx]
0x0000000000189d66 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d6e ; jmp qword ptr [rdx]
0x0000000000198cd2 : idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x0000000000189cc2 : idiv bh ; imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189cca ; jmp qword ptr [rdx]
0x0000000000189c76 : idiv bh ; jle 0x189c76 ; jmp rdx
0x0000000000189d36 : idiv bh ; jns 0x189d36 ; jmp qword ptr [rdx]
0x0000000000198a02 : idiv bh ; lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x0000000000189c6a : idiv bh ; loop 0x189cf3 ; idiv bh ; pop rsp ; jle 0x189c72 ; jmp rdx
0x0000000000189c72 : idiv bh ; loop 0x189cfb ; idiv bh ; jle 0x189c7a ; jmp rdx
0x0000000000189d2e : idiv bh ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000019878a : idiv bh ; mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x0000000000198702 : idiv bh ; mov esp, 0x94000178 ; adc al, 0xf6 ; call rsp
0x000000000019868a : idiv bh ; mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x0000000000198daa : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00000000000b93fa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000189c6e : idiv bh ; pop rsp ; jle 0x189c6e ; jmp rdx
0x0000000000189da6 : idiv bh ; ret 0xf678
0x0000000000189cc6 : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cc6 ; jmp qword ptr [rdx]
0x0000000000189cce : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cce ; jmp qword ptr [rdx]
0x0000000000189d6a : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189d6a ; jmp qword ptr [rdx]
0x0000000000189914 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000127e9e : idiv bh ; xor eax, eax ; ret
0x000000000019493d : idiv bl ; call qword ptr [rax]
0x0000000000023b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000199562 : idiv edi ; cld ; ret
0x00000000001268b8 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000019950a : idiv edi ; hlt ; ret 1
0x0000000000199532 : idiv edi ; insb byte ptr [rdi], dx ; ret
0x00000000001994f2 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000198f42 : idiv edi ; mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x0000000000199042 : idiv edi ; mov esp, 0x40001a6 ; sbb dh, bh ; call rsp
0x000000000019932a : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x000000000019952a : idiv edi ; push rsp ; ret
0x0000000000199542 : idiv edi ; pushfq ; ret
0x00000000001994da : idiv edi ; ret 1
0x00000000001994ea : idiv edi ; xchg eax, esp ; ret 1
0x000000000003a6a6 : idiv esi ; ret
0x000000000003a6a5 : idiv rsi ; ret
0x00000000001955b0 : imul byte ptr [rdx - 0x55790004] ; cld ; call qword ptr [rsi]
0x00000000000668fc : imul cl ; ret
0x00000000000a4318 : imul cl ; ret 8
0x0000000000130246 : imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000fdfd8 : imul eax ; ret 0xf6f7
0x00000000000ea357 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x0000000000195d15 : imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x00000000001a188d : imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00000000000c7339 : imul eax, dword ptr [rbp + 0x1f0ffff5], 0 ; pop rbx ; ret
0x000000000016fd91 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000055f36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x00000000000bc786 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000bca3f : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cf607 : imul eax, dword ptr [rdx], 0x75c08500 ; ret 0x858b
0x000000000010e0f5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000779c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101e39 : imul ebx, edx, -0xf ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010e095 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000088b4a : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b32fc : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000010dfcf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018934c : imul edi, dword ptr [rbx - 0xb], -1 ; jnp 0x18934f ; call rsi
0x0000000000189cc4 : imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189cc8 ; jmp qword ptr [rdx]
0x000000000009f76b : imul edi, dword ptr [rdx], 0x394c0032 ; ret 0x830f
0x0000000000076770 : imul edi, ebp, 0x89c085ff ; ret
0x00000000000c9ad3 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000120aa1 : imul edi, esi, 0x8348ffff ; ret
0x000000000010e0c5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a733 : imul edx, dword ptr [rdx + 0x38], 0x58d4800 ; ret 0x386a
0x0000000000002b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000bbb14 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000013d2a1 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a505c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001b9f1c : in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x0000000000003794 : in al, -0x12 ; jne 0x3776 ; ret 0x975
0x000000000019ab50 : in al, -0x2a ; cli ; call rsp
0x00000000001a7a1c : in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x000000000019955c : in al, -0x3d ; add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x0000000000187ed4 : in al, -0x45 ; call qword ptr [rdx]
0x00000000001a6a1c : in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x0000000000099d6d : in al, -0x7d ; ret 0x480f
0x000000000015a0fa : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008e73b : in al, -0xd ; ret
0x00000000001a52b1 : in al, -4 ; call qword ptr [rdx]
0x00000000001994f9 : in al, -9 ; inc esp ; ret 1
0x0000000000199519 : in al, -9 ; jmp qword ptr [rbx + rax*8]
0x0000000000199509 : in al, -9 ; push rsp ; ret 1
0x0000000000171c58 : in al, 0 ; add byte ptr [rax], al ; ret
0x0000000000106c01 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x00000000001971a5 : in al, 0 ; add byte ptr [rdx + rsi*2], al ; out dx, al ; call rsp
0x0000000000084c63 : in al, 0x33 ; add byte ptr [rbp - 0xcf98740], al ; ret
0x000000000009e07b : in al, 0x41 ; cmp eax, ecx ; je 0x9e067 ; ret
0x0000000000197ec8 : in al, 0x46 ; jmp rsp
0x000000000019aa64 : in al, 0x57 ; add al, byte ptr [rax] ; push rsp ; ret
0x0000000000197a28 : in al, 0x74 ; int1 ; jmp rsp
0x0000000000088ebc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000a9dae : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000004c5b4 : in al, 0xf ; lahf ; ret
0x0000000000050300 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000124ada : in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000199a85 : in al, 1 ; add byte ptr [rbp - 8], ah ; jmp rsp
0x00000000000a5b98 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000001ac124 : in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x000000000011d6f2 : in al, dx ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f0711 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000780be : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00000000001362c3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bd1f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x000000000007fef4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00000000001236f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00000000001a9bb5 : in al, dx ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x0000000000064329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000bce40 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000083f08 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000004c5b0 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000144850 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001afe24 : in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001a0a3a : in al, dx ; call qword ptr [rax]
0x00000000001a0a82 : in al, dx ; call rsp
0x000000000004a219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001ae399 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000018722d : in al, dx ; int1 ; call qword ptr [rax]
0x000000000018725d : in al, dx ; int1 ; call rax
0x0000000000187269 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187259 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187231 : in al, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187261 : in al, dx ; int1 ; jmp rax
0x00000000001a043a : in al, dx ; jmp qword ptr [rcx]
0x00000000001a076a : in al, dx ; jmp rax
0x00000000001a088a : in al, dx ; jmp rbx
0x00000000000fe733 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000103ab8 : in al, dx ; mov ebp, 0x8b49fff1 ; call rbx
0x000000000015241a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009e173 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x0000000000139eb4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000015a4fa : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009e8d1 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x0000000000045b5c : in al, dx ; or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012a4a1 : in al, dx ; or al, ch ; mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x000000000012b34a : in al, dx ; or al, ch ; out dx, eax ; ret 0
0x000000000006dcd6 : in al, dx ; or al, ch ; ret
0x000000000006ddd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00000000000824f7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000145574 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013d0ed : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000f6612 : in al, dx ; or dh, dh ; ret 0x7540
0x00000000001b1f24 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a3f24 : in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00000000001b0624 : in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ac ; cmc ; jmp qword ptr [rcx]
0x000000000009df7b : in al, dx ; ret
0x000000000019cc24 : in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x0000000000116cd2 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62c
0x00000000000f6291 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000025ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001bad24 : in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x000000000019491d : in al, dx ; sti ; call qword ptr [rax - 0x1f000413]
0x00000000001a5b24 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000184c7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c11 ; ret 0x48f
0x0000000000184c7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c12 ; ret 0x48f
0x000000000013c120 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012ec13 : in al, dx ; xor dh, dh ; ret 0xc707
0x000000000019c081 : in eax, -0x18 ; call qword ptr [rdx]
0x0000000000185239 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000052fc3 : in eax, -0x21 ; loopne 0x52f54 ; ret 0xe680
0x0000000000054f3c : in eax, -0x21 ; loopne 0x54ecd ; ret 0xe680
0x0000000000101ebf : in eax, -0x27 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000d85f3 : in eax, -0x77 ; ret
0x000000000015a17a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000009393a : in eax, -0xd ; ret
0x00000000001ab1c1 : in eax, -0xe ; call qword ptr [rsi]
0x0000000000184701 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000019462d : in eax, -5 ; jmp qword ptr [rax]
0x000000000019466d : in eax, -5 ; jmp rax
0x00000000001a9505 : in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x0000000000183383 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000e78b4 : in eax, 0x2d ; add byte ptr [rax], al ; je 0xe78f8 ; xor eax, eax ; ret
0x0000000000129a26 : in eax, 0x41 ; call rdi
0x000000000008e87a : in eax, 0x48 ; mov eax, edi ; ret
0x000000000004a6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000114de5 : in eax, 0x5d ; ret
0x0000000000182619 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000132af2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x0000000000003aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000ab383 : in eax, 0xf ; je 0xab3a8 ; add rax, 2 ; ret
0x0000000000199aad : in eax, 1 ; add byte ptr [rcx + rbp*2], dh ; clc ; call rsp
0x000000000012f11e : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000007652f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00000000000aebb0 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b12c0 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x000000000004d6cf : in eax, dx ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000018637a : in eax, dx ; call qword ptr [rax]
0x00000000001a3a1a : in eax, dx ; call qword ptr [rcx]
0x00000000001a407a : in eax, dx ; call qword ptr [rdx]
0x00000000001a1892 : in eax, dx ; call qword ptr [rsi]
0x0000000000185cbe : in eax, dx ; call rdx
0x00000000001a1cba : in eax, dx ; call rsi
0x0000000000196a6a : in eax, dx ; call rsp
0x0000000000185cb6 : in eax, dx ; dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x0000000000185ca2 : in eax, dx ; dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196c0a : in eax, dx ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00000000001968b2 : in eax, dx ; dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x0000000000186379 : in eax, dx ; in eax, dx ; call qword ptr [rax]
0x0000000000186375 : in eax, dx ; in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x0000000000196a2a : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x0000000000186376 : in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00000000001861c6 : in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001861ca : in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x0000000000196c3a : in eax, dx ; inc esp ; ret 0
0x000000000018726d : in eax, dx ; int1 ; call qword ptr [rax]
0x000000000018728d : in eax, dx ; int1 ; call rax
0x0000000000187271 : in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187291 : in eax, dx ; int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00000000001861ce : in eax, dx ; jmp qword ptr [rax]
0x00000000001a3db2 : in eax, dx ; jmp qword ptr [rbx]
0x00000000001a384a : in eax, dx ; jmp qword ptr [rcx]
0x00000000001a2b2a : in eax, dx ; jmp qword ptr [rdi]
0x0000000000185caa : in eax, dx ; jmp qword ptr [rdx]
0x00000000001a309a : in eax, dx ; jmp qword ptr [rsi]
0x00000000001a2cb2 : in eax, dx ; jmp rsi
0x00000000001968ba : in eax, dx ; jmp rsp
0x0000000000116cf9 : in eax, dx ; jne 0x116d11 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017354f : in eax, dx ; jne 0x173531 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000196baa : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x38bc0000] ; in eax, dx ; call rsp
0x00000000001968da : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00000000000a97d2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a9199 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a91af : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a91d1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a91ef : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a920f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9235 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9251 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9271 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9291 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a92b7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a92d9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a92f7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9317 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9333 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9353 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9373 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9393 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a93b9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9409 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a90df : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a90fd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a911d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a913f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a915f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a917f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9015 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9027 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a903d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9055 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a906b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a907d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a909b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a90a7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a90bd : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9001 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000015222a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ae026 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xae03e
0x00000000000b0947 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb095e
0x00000000000b30fe : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb311e
0x000000000015a57a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d8f64 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000001490e0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004876b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000017398a : in eax, dx ; pop rbx ; ret
0x0000000000196cf2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00000000001969c2 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x000000000019691a : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x0000000000196b22 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x0000000000185cba : in eax, dx ; push rdi ; in eax, dx ; call rdx
0x0000000000071c02 : in eax, dx ; ret
0x000000000005986f : in eax, dx ; ret 0x12
0x0000000000194921 : in eax, dx ; sti ; jmp rax
0x00000000000a9922 : in eax, dx ; sub rax, 1 ; ret
0x000000000009e0ba : in eax, dx ; xor eax, eax ; ret
0x00000000000a9a58 : inc bl ; cmp dl, 1 ; jb 0xa9a6a ; mov byte ptr [rdi], cl ; ret
0x000000000014cf86 : inc bl ; jb 0x14cf96 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d476 : inc bl ; jb 0x14d486 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d816 : inc bl ; jb 0x14d826 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008e761 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000046da3 : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x000000000007b522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000046da4 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x000000000002a696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x0000000000187bbc : inc byte ptr [rdi + 0x7e8cfff3] ; call qword ptr [rdi]
0x00000000000774f9 : inc byte ptr [rdx] ; je 0x7750f ; mov dword ptr [rdi], edx ; ret
0x000000000019480b : inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x0000000000194ae7 : inc dword ptr [rax + 0x18] ; cld ; call qword ptr [rax - 0x1f0003e7]
0x0000000000194b3b : inc dword ptr [rax + 0x1f] ; cld ; call qword ptr [rax - 0x1f0003e0]
0x000000000019528b : inc dword ptr [rax + 0x20fffc81] ; ja 0x195297 ; jmp rax
0x00000000001949af : inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00000000001942a7 : inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x0000000000194a37 : inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x0000000000194a9f : inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x0000000000194a07 : inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x0000000000194a0b : inc dword ptr [rax + 0x35] ; cld ; call rax
0x00000000001942c7 : inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00000000001942cf : inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00000000001946af : inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00000000001885d7 : inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x0000000000188787 : inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x000000000018648b : inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x000000000018648f : inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x0000000000194b77 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x0000000000186bbb : inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x000000000019548b : inc dword ptr [rax + 0x77] ; cld ; call rax
0x00000000001948c7 : inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00000000001948cb : inc dword ptr [rax + 0xc] ; cld ; call rax
0x000000000019421f : inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x000000000019485b : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00000000001976c3 : inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x000000000019a59b : inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x000000000019491b : inc dword ptr [rax - 0x14] ; sti ; call qword ptr [rax - 0x1f000413]
0x000000000019494f : inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x000000000019467f : inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x00000000001946b3 : inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00000000001946cf : inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00000000001944ff : inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x000000000019497f : inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x000000000019492b : inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00000000001947a3 : inc dword ptr [rax - 0x39] ; sti ; call qword ptr [rax - 0x1f000438]
0x000000000004b9d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x00000000001873ef : inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x000000000004dc96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x000000000019555b : inc dword ptr [rax - 0x53] ; cld ; call rax
0x0000000000195773 : inc dword ptr [rax - 0x56] ; cld ; call rax
0x00000000000d0d78 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000195063 : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x000000000019527b : inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00000000001948a7 : inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x000000000019496f : inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x000000000018746f : inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00000000001947d3 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000f8a88 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004c985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000061a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000006084d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000b593b : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000171c3d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016ee77 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000034efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000001874b3 : inc dword ptr [rax] ; add eax, 0x510fff2 ; jmp qword ptr [rax]
0x00000000001948f3 : inc dword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000019494b : inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00000000001946d3 : inc dword ptr [rax] ; fsincos ; jmp rax
0x000000000018726b : inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00000000001959bf : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195763 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000195053 : inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00000000001889cb : inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000118830 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x00000000001872df : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000194d7f : inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x0000000000194f8f : inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00000000000fe6dc : inc dword ptr [rax] ; ret
0x0000000000194793 : inc dword ptr [rax] ; ret 0xfffb
0x000000000019427f : inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00000000001942d7 : inc dword ptr [rax] ; sti ; call rax
0x00000000001949b3 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000194a57 : inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x000000000019526b : inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x0000000000194fcf : inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x000000000011cb64 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011cd4a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x000000000018869b : inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x0000000000188937 : inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x0000000000199aab : inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x0000000000196a2b : inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x000000000003a6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00000000000faaec : inc dword ptr [rbp - 0x76608a40] ; out dx, eax ; call 0xf6d09
0x0000000000063df9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x00000000000684e8 : inc dword ptr [rbp - 0x76818b40] ; ret
0x0000000000120e0f : inc dword ptr [rbp - 0x769b8740] ; ret
0x00000000001211e1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000063ad1 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x0000000000068ac4 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x000000000011cbba : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00000000000600b8 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000ff15f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ff1aa : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018134f : inc dword ptr [rbx + 0x25] ; jmp 0x18135b
0x0000000000050eb6 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f3b ; ret 0x8945
0x0000000000053b28 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53bad ; ret
0x00000000000c4e22 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000d6ee5 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x00000000000f256f : inc dword ptr [rbx + rcx*4 + 5] ; mov ecx, 0x89002d61 ; ret
0x000000000005a2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x0000000000186377 : inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x000000000003338e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000012240f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003afba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000d70c3 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd70a9 ; jmp 0xd7099
0x00000000000aa128 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aa04f : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000006588f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00000000000576c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000124194 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x00000000001953ff : inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00000000001884e7 : inc dword ptr [rcx - 0x25] ; call rcx
0x0000000000067491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x0000000000194407 : inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00000000000ed0f5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000b7272 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000002b76c : inc dword ptr [rcx - 0x77] ; ret
0x00000000000db05d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00000000000e33da : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000121f1a : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001739c9 : inc dword ptr [rcx] ; ja 0x1739d4 ; ret
0x00000000001bb9e6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001bb880 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001861c7 : inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001861cb : inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00000000000de494 : inc dword ptr [rcx] ; ret
0x00000000000d6348 : inc dword ptr [rcx] ; ret 0x5589
0x00000000000de09a : inc dword ptr [rcx] ; ret 0x8b49
0x00000000001951d7 : inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x0000000000194ceb : inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00000000000c59d0 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x00000000000983e3 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e03c7 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000019458f : inc dword ptr [rdi - 0x49] ; std ; call rcx
0x000000000018805f : inc dword ptr [rdi - 0x587b000d] ; jmp rax
0x00000000000db506 : inc dword ptr [rdi] ; jbe 0xdb519 ; mov eax, 0xc ; ret
0x00000000001885c3 : inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00000000001886e7 : inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x0000000000194c23 : inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x0000000000198183 : inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x000000000019a263 : inc dword ptr [rdx - 0x366bfffe] ; stc ; call rsp
0x0000000000195647 : inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x0000000000187b7f : inc dword ptr [rdx - 0x76] ; jmp rdx
0x0000000000195637 : inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x000000000014ad7d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000194bbf : inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x000000000019a0cb : inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00000000001955a3 : inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x0000000000194433 : inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00000000001950ab : inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x0000000000194baf : inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x0000000000195593 : inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x000000000019509b : inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x0000000000189c27 : inc dword ptr [rsi] ; xor esi, 0xf67ce2ff ; jmp rax
0x000000000019a3db : inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x000000000018843f : inc dword ptr [rsp + rbx*8 - 0x3bdb000d] ; jmp qword ptr [rdi]
0x0000000000194b1b : inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00000000001874a3 : inc eax ; add al, 0xf2 ; call rax
0x0000000000187487 : inc eax ; add al, 0xf2 ; jmp rax
0x0000000000187467 : inc eax ; add esi, edx ; jmp rax
0x0000000000194b07 : inc eax ; and bh, ah ; call qword ptr [rax]
0x0000000000188563 : inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x0000000000188567 : inc eax ; hlt ; jmp rax
0x000000000019493b : inc eax ; idiv bl ; call qword ptr [rax]
0x000000000018725b : inc eax ; in al, dx ; int1 ; call rax
0x00000000001954c7 : inc eax ; ja 0x1954cf ; push qword ptr [rax] ; ja 0x1954d3 ; call rax
0x00000000001893ff : inc eax ; mov dr0, ebp ; call rsi
0x00000000001872cf : inc eax ; out dx, al ; int1 ; call rax
0x000000000018700b : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001873df : inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000188993 : inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x0000000000188997 : inc eax ; push rdx ; hlt ; jmp rax
0x00000000001947c3 : inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x0000000000034f19 : inc eax ; shr eax, 0x1f ; ret
0x000000000019432b : inc eax ; sti ; call qword ptr [rax]
0x000000000019557b : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000189919 : inc ebx ; add dh, bh ; jmp rdi
0x000000000014008a : inc ebx ; mov eax, 0xffffffff ; ret
0x00000000000368cc : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000074f5c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000171729 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000791c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x000000000005cb56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000fd9c9 : inc esi ; jmp qword ptr [r8]
0x000000000019442f : inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x000000000019755b : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x000000000019619b : inc esp ; jle 0x1961a7 ; add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x0000000000198653 : inc esp ; jne 0x198660 ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x0000000000196c3b : inc esp ; ret 0
0x00000000001994fb : inc esp ; ret 1
0x00000000001998db : inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00000000000d6347 : inc qword ptr [rcx] ; ret 0x5589
0x00000000001ac1a4 : insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x0000000000145cf4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012d280 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001bac66 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x0000000000034f9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035008 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000351aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000035059 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034f3a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000007cf64 : insb byte ptr [rdi], dx ; call qword ptr [rax]
0x00000000001afb79 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001afae9 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001ae7a4 : insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x000000000018523e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001a39a4 : insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000000f2940 : insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000001317c2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000d73a8 : insb byte ptr [rdi], dx ; mov edx, 0x840f002e ; ret 2
0x00000000001b95a4 : insb byte ptr [rdi], dx ; out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x0000000000199534 : insb byte ptr [rdi], dx ; ret
0x0000000000065d60 : insb byte ptr [rdi], dx ; ret 0
0x00000000001b58a4 : insb byte ptr [rdi], dx ; test eax, 0xe2080001 ; sti ; call rsi
0x00000000001ae1a4 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x0000000000148960 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a1cb5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x0000000000096d6f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000149860 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006ce31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000198019 : insd dword ptr [rdi], dx ; call rsp
0x00000000001afc39 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001afbf1 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x0000000000103ed7 : insd dword ptr [rdi], dx ; enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187b98 : insd dword ptr [rdi], dx ; jl 0x187b91 ; jmp rdx
0x0000000000187bb0 : insd dword ptr [rdi], dx ; jl 0x187bad ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00000000001a5a61 : insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x000000000018523f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00000000001835ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000001844ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000012aff6 : int 0x29
0x00000000000fd512 : int 0x31
0x0000000000048613 : int 0x48
0x0000000000002c33 : int 0x80
0x00000000000c856f : int 0xa3
0x000000000001f8f2 : int 0xc1
0x000000000013243f : int 0xc2
0x0000000000142aaf : int 0xed
0x00000000000038ab : int 3
0x000000000004b513 : int1 ; adc al, 0 ; call 0x777f6
0x00000000001aa0dd : int1 ; add byte ptr [rax], al ; jo 0x1aa0fd ; jmp qword ptr [rcx]
0x00000000001aa06d : int1 ; add byte ptr [rax], al ; loopne 0x1aa08c ; call qword ptr [rdx]
0x00000000000504c6 : int1 ; add eax, r8d ; ret
0x00000000000b96ea : int1 ; call 0x8e807
0x00000000000b96e9 : int1 ; call 0x8e808
0x00000000001871fe : int1 ; call qword ptr [rax - 0x4f000e16]
0x00000000001871de : int1 ; call qword ptr [rax - 0x4f000e17]
0x00000000001871be : int1 ; call qword ptr [rax - 0x4f000e18]
0x00000000001871ce : int1 ; call qword ptr [rax]
0x00000000001a943a : int1 ; call qword ptr [rbx]
0x00000000001a880a : int1 ; call qword ptr [rcx]
0x00000000001a8e4a : int1 ; call qword ptr [rdx]
0x00000000001a85fa : int1 ; call qword ptr [rsi]
0x0000000000187206 : int1 ; call rax
0x000000000002185c : int1 ; call rbx
0x00000000001a9632 : int1 ; call rdi
0x00000000001a998a : int1 ; call rsi
0x00000000001978e2 : int1 ; call rsp
0x000000000010ff68 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000101edc : int1 ; dec dword ptr [rax - 0x75] ; jge 0x101ee8 ; call rbx
0x000000000010218f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x10219b ; call rbx
0x0000000000103d27 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d33 ; call rbx
0x0000000000101d9a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010219d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000101da7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101db3 ; call rbx
0x0000000000101ece : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101eda ; call rbx
0x0000000000102011 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10201d ; call rbx
0x0000000000102181 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10218d ; call rbx
0x000000000010399f : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1039ab ; call rbx
0x0000000000103ac7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103ad3 ; call rbx
0x0000000000103c0a : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103c16 ; call rbx
0x0000000000103d0b : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103d17 ; call rbx
0x0000000000197a9a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x0000000000003a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000018726a : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00000000001872de : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x000000000018725a : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00000000001872ce : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x000000000018700a : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001873de : int1 ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x000000000009e02d : int1 ; je 0x9e024 ; ret
0x00000000000a99db : int1 ; jl 0xa9a2c ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a99fc : int1 ; jl 0xa9a4d ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9a0f : int1 ; jl 0xa9a60 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9ae4 : int1 ; jl 0xa9b35 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9b3c : int1 ; jl 0xa9b8d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a9bd9 : int1 ; jl 0xa9c2a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000005c46b : int1 ; jmp 0x5c432
0x000000000005c46a : int1 ; jmp 0x5c433
0x000000000018721a : int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187232 : int1 ; jmp qword ptr [rax]
0x00000000001a84ea : int1 ; jmp qword ptr [rcx]
0x00000000001a940a : int1 ; jmp qword ptr [rdi]
0x0000000000187012 : int1 ; jmp rax
0x00000000000aa0e5 : int1 ; jmp rcx
0x00000000001a8a52 : int1 ; jmp rdi
0x0000000000197a2a : int1 ; jmp rsp
0x0000000000086c8b : int1 ; mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000194520 : int1 ; mov ch, 0xfd ; call rcx
0x0000000000194540 : int1 ; mov dh, 0xfd ; call rcx
0x0000000000159f6b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001529ef : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012dbda : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001296be : int1 ; mov rdi, r13 ; call r12
0x0000000000171203 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001bb980 : int1 ; or byte ptr [rbx], al ; ret
0x00000000000aa12b : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000009696e : int1 ; pop rbx ; pop rbp ; ret
0x0000000000187216 : int1 ; push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00000000001872ca : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187256 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187006 : int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187392 : int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x0000000000187266 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187292 : int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00000000001872da : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00000000001873e2 : int1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x00000000001873b2 : int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x000000000000260b : int1 ; ret
0x0000000000106b83 : int1 ; ret 0x2b
0x0000000000184c16 : int1 ; ret 0x5803
0x000000000019492d : int1 ; sti ; call rax
0x00000000001b53d9 : int1 ; sti ; call rcx
0x0000000000171207 : int1 ; sub eax, edx ; ret
0x00000000000481cd : int1 ; xor eax, eax ; pop rbx ; ret
0x000000000009687e : int1 ; xor eax, eax ; ret
0x0000000000196de5 : iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x000000000019977d : iretd ; add dword ptr [rax], eax ; je 0x199797 ; clc ; jmp rsp
0x00000000000f3657 : iretd ; call 0x1f8ab
0x00000000000886b9 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000104ad4 : ja 0x104ae3 ; ret
0x0000000000106794 : ja 0x1067a3 ; ret
0x00000000001069d6 : ja 0x1069e2 ; ret
0x0000000000106a88 : ja 0x106a93 ; ret
0x0000000000106ac2 : ja 0x106ad3 ; ret
0x0000000000107673 : ja 0x107682 ; ret
0x00000000001077f3 : ja 0x107802 ; ret
0x0000000000107c8d : ja 0x107c92 ; ret
0x0000000000107d2f : ja 0x107d3a ; ret
0x0000000000107ddf : ja 0x107dea ; ret
0x0000000000114c40 : ja 0x114c4b ; ret
0x0000000000114cc5 : ja 0x114c9c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114ced : ja 0x114d0d ; ret
0x00000000001169b2 : ja 0x1169c3 ; ret
0x0000000000116a62 : ja 0x116a73 ; ret
0x00000000001184a7 : ja 0x1184ba ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000123023 : ja 0x123028 ; ret
0x0000000000123350 : ja 0x12333b ; mov eax, 0xffffffff ; ret
0x00000000001233f9 : ja 0x123410 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012aba1 : ja 0x12abf4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012dbfd : ja 0x12dbee ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013b1f7 : ja 0x13b213 ; ret
0x000000000013b36f : ja 0x13b392 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013b5f0 : ja 0x13b620 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001735d0 : ja 0x17359c ; call 0x1f8ac
0x00000000001739cb : ja 0x1739d2 ; ret
0x0000000000184c84 : ja 0x184c0b ; ret 0x48f
0x000000000019435d : ja 0x19435c ; jmp qword ptr [rax]
0x0000000000195291 : ja 0x195291 ; jmp rax
0x00000000001952cd : ja 0x1952cd ; call qword ptr [rsi]
0x000000000019540d : ja 0x19540d ; jmp rsp
0x000000000019548d : ja 0x19548d ; call rax
0x0000000000195489 : ja 0x19548d ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x000000000019548c : ja 0x19548e ; call rax
0x00000000001954cd : ja 0x1954cd ; call rax
0x00000000001954c9 : ja 0x1954cd ; push qword ptr [rax] ; ja 0x1954d1 ; call rax
0x0000000000195fe5 : ja 0x195fed ; add byte ptr [rcx + rsi*8 - 0x17], al ; call rsp
0x0000000000196921 : ja 0x196912 ; jmp rsp
0x000000000019ada9 : ja 0x19adaa ; call rsp
0x000000000019ada8 : ja 0x19adab ; call rsp
0x000000000002daad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000003542e : ja 0x35453 ; ret
0x0000000000035736 : ja 0x35743 ; ret
0x00000000000357a2 : ja 0x357b3 ; ret
0x00000000000357ec : ja 0x357f2 ; ret
0x00000000000038ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048a8e : ja 0x48ae0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000504b7 : ja 0x5049e ; mov eax, r8d ; ret
0x000000000006182c : ja 0x617b9 ; ret 0x348
0x0000000000062b53 : ja 0x62ae0 ; ret 0x348
0x0000000000069c78 : ja 0x69c05 ; ret 0x348
0x0000000000073026 : ja 0x73033 ; ret
0x0000000000077c88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e6c2 : ja 0x8e6d3 ; ret
0x00000000000938c8 : ja 0x938c2 ; ret 0x7401
0x000000000009628d : ja 0x9626f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ecac : ja 0x9ecc5 ; mov rax, rdi ; ret
0x000000000009f433 : ja 0x9f437 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000009fb86 : ja 0x9fb8a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a02d3 : ja 0xa02d7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a51a7 : ja 0xa51ad ; ret
0x00000000000a51c3 : ja 0xa51cd ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5204 : ja 0xa5213 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5289 : ja 0xa529d ; ret
0x00000000000a52df : ja 0xa52f7 ; ret
0x00000000000a5361 : ja 0xa537d ; ret
0x00000000000a67a7 : ja 0xa67b1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a67c3 : ja 0xa67d1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6814 : ja 0xa6827 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a68f9 : ja 0xa6911 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a696f : ja 0xa698b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a69f1 : ja 0xa6a11 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a8287 : ja 0xa828d ; ret
0x00000000000a82a3 : ja 0xa82ad ; mov dword ptr [rdi], ecx ; ret
0x00000000000a82e4 : ja 0xa82f3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8369 : ja 0xa837d ; ret
0x00000000000a83bf : ja 0xa83d7 ; ret
0x00000000000a8441 : ja 0xa845d ; ret
0x00000000000a8d57 : ja 0xa8d5d ; ret
0x00000000000a8d73 : ja 0xa8d7d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8db4 : ja 0xa8dc3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8e39 : ja 0xa8e4d ; ret
0x00000000000a8e8f : ja 0xa8ea7 ; ret
0x00000000000a8f11 : ja 0xa8f2d ; ret
0x00000000000aa3d9 : ja 0xaa3f9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000abc72 : ja 0xabc82 ; cmove rax, rcx ; ret
0x00000000000ac06c : ja 0xac07c ; mov eax, edi ; ret
0x00000000000bb88d : ja 0xbb89b ; ret
0x00000000000c782d : ja 0xc783b ; pop rbx ; ret
0x00000000000c8aa7 : ja 0xc8ab2 ; ret
0x00000000000cb436 : ja 0xcb442 ; ret
0x00000000000cb4d0 : ja 0xcb4da ; ret
0x00000000000cb5c1 : ja 0xcb5ca ; ret
0x00000000000cc719 : ja 0xcc722 ; ret
0x00000000000cc789 : ja 0xcc792 ; ret
0x00000000000cc9dd : ja 0xcc9e2 ; ret
0x00000000000cca5d : ja 0xcca62 ; ret
0x00000000000d825e : ja 0xd8277 ; mov eax, 2 ; ret
0x00000000000f5391 : ja 0xf539b ; xor eax, eax ; ret
0x00000000000f5e2e : ja 0xf5dc6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5e62 : ja 0xf5e53 ; ret
0x00000000000f600b : ja 0xf6013 ; ret
0x00000000000f605a : ja 0xf6063 ; ret
0x00000000000f60ab : ja 0xf60b3 ; ret
0x00000000000f6103 : ja 0xf6113 ; ret
0x00000000000f6167 : ja 0xf6173 ; ret
0x00000000000f61c0 : ja 0xf61cb ; ret
0x00000000000f639f : ja 0xf63ab ; ret
0x00000000000f6a69 : ja 0xf6aa3 ; ret
0x00000000000f6b0d : ja 0xf6b57 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fa9b3 : ja 0xfa9c8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000faee8 : ja 0xfaef3 ; ret
0x00000000000faf3c : ja 0xfaf43 ; ret
0x00000000000fb690 : ja 0xfb69a ; ret
0x00000000000fb773 : ja 0xfb77f ; ret
0x00000000000fb7c9 : ja 0xfb7d5 ; ret
0x00000000000fbbb4 : ja 0xfbbc2 ; ret
0x00000000000fc243 : ja 0xfc273 ; ret
0x00000000000fc460 : ja 0xfc46a ; ret
0x00000000000fc510 : ja 0xfc51a ; ret
0x00000000000fc5bb : ja 0xfc5c2 ; ret
0x00000000000fc62b : ja 0xfc632 ; ret
0x00000000000fc6ac : ja 0xfc6b2 ; ret
0x00000000000fc75c : ja 0xfc762 ; ret
0x00000000000fccac : ja 0xfccb3 ; ret
0x00000000000fe3cd : ja 0xfe3db ; ret
0x00000000000fe461 : ja 0xfe46b ; ret
0x00000000000fe501 : ja 0xfe50b ; ret
0x00000000000fe555 : ja 0xfe563 ; ret
0x00000000000fe639 : ja 0xfe645 ; ret
0x00000000000fe862 : ja 0xfe898 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000022df : ja 0xffffffffd6104b6b ; ret
0x00000000001008ef : jae 0x1008f4 ; ret
0x0000000000100b5d : jae 0x100b62 ; ret
0x0000000000100b8d : jae 0x100b92 ; ret
0x0000000000100bc6 : jae 0x100bfb ; ret
0x0000000000100c1d : jae 0x100c22 ; ret
0x0000000000100c4d : jae 0x100c52 ; ret
0x0000000000100c80 : jae 0x100c85 ; ret
0x0000000000100cad : jae 0x100cb2 ; ret
0x0000000000100cdd : jae 0x100ce2 ; ret
0x0000000000100d0d : jae 0x100d12 ; ret
0x0000000000100d3d : jae 0x100d42 ; ret
0x0000000000105400 : jae 0x105405 ; ret
0x000000000010542d : jae 0x105432 ; ret
0x000000000010545d : jae 0x105462 ; ret
0x0000000000105490 : jae 0x105495 ; ret
0x00000000001054c0 : jae 0x1054c5 ; ret
0x00000000001054ed : jae 0x1054f2 ; ret
0x0000000000105520 : jae 0x105525 ; ret
0x000000000010554d : jae 0x105552 ; ret
0x000000000010557d : jae 0x105582 ; ret
0x00000000001055b0 : jae 0x1055b5 ; ret
0x00000000001055dd : jae 0x1055e2 ; ret
0x0000000000105610 : jae 0x105615 ; ret
0x00000000001066fd : jae 0x106702 ; ret
0x000000000010672d : jae 0x106732 ; ret
0x000000000010685d : jae 0x106862 ; ret
0x000000000010689d : jae 0x1068a2 ; ret
0x00000000001068cd : jae 0x1068d2 ; ret
0x00000000001068fd : jae 0x106902 ; ret
0x000000000010692d : jae 0x106932 ; ret
0x0000000000106b50 : jae 0x106b55 ; ret
0x0000000000106b50 : jae 0x106b5a ; ret
0x0000000000106b7d : jae 0x106b82 ; ret
0x0000000000106bad : jae 0x106bb2 ; ret
0x0000000000106bdd : jae 0x106be2 ; ret
0x0000000000106c20 : jae 0x106c25 ; ret
0x0000000000106c4d : jae 0x106c52 ; ret
0x0000000000106c7d : jae 0x106c82 ; ret
0x0000000000106cad : jae 0x106cb2 ; ret
0x0000000000106cdd : jae 0x106ce2 ; ret
0x0000000000106d0d : jae 0x106d12 ; ret
0x0000000000106d3d : jae 0x106d42 ; ret
0x0000000000106d6d : jae 0x106d72 ; ret
0x0000000000106d9d : jae 0x106da2 ; ret
0x0000000000106dd0 : jae 0x106dd5 ; ret
0x0000000000106e09 : jae 0x106e41 ; ret
0x0000000000106e5d : jae 0x106e62 ; ret
0x0000000000106e90 : jae 0x106e95 ; ret
0x0000000000106ebd : jae 0x106ec2 ; ret
0x0000000000106eed : jae 0x106ef2 ; ret
0x0000000000106f1d : jae 0x106f22 ; ret
0x0000000000106f4d : jae 0x106f52 ; ret
0x0000000000106f7d : jae 0x106f82 ; ret
0x0000000000106fb0 : jae 0x106fb5 ; ret
0x0000000000106fe0 : jae 0x106fe5 ; ret
0x000000000010700d : jae 0x107012 ; ret
0x000000000010703d : jae 0x107042 ; ret
0x0000000000107070 : jae 0x107075 ; ret
0x00000000001070a0 : jae 0x1070a5 ; ret
0x00000000001070d0 : jae 0x1070d5 ; ret
0x0000000000107109 : jae 0x107141 ; ret
0x000000000010715d : jae 0x107162 ; ret
0x0000000000107199 : jae 0x1071d1 ; ret
0x00000000001071ed : jae 0x1071f2 ; ret
0x000000000010721d : jae 0x107222 ; ret
0x0000000000107259 : jae 0x107291 ; ret
0x00000000001072ad : jae 0x1072b2 ; ret
0x00000000001072e0 : jae 0x1072e5 ; ret
0x000000000010730d : jae 0x107312 ; ret
0x000000000010733d : jae 0x107342 ; ret
0x0000000000107370 : jae 0x107375 ; ret
0x00000000001073a6 : jae 0x1073db ; ret
0x00000000001073fd : jae 0x107402 ; ret
0x0000000000107430 : jae 0x107435 ; ret
0x0000000000107460 : jae 0x107465 ; ret
0x00000000001074b6 : jae 0x1074eb ; ret
0x000000000010750d : jae 0x107512 ; ret
0x0000000000107546 : jae 0x10757b ; ret
0x000000000010759d : jae 0x1075a2 ; ret
0x00000000001075cd : jae 0x1075d2 ; ret
0x0000000000107600 : jae 0x107605 ; ret
0x000000000010762d : jae 0x107632 ; ret
0x0000000000107729 : jae 0x107761 ; ret
0x0000000000107786 : jae 0x1077bb ; ret
0x00000000001078a6 : jae 0x1078db ; ret
0x0000000000107909 : jae 0x107941 ; ret
0x0000000000107960 : jae 0x107965 ; ret
0x000000000010798d : jae 0x107992 ; ret
0x00000000001079bd : jae 0x1079c2 ; ret
0x00000000001079f0 : jae 0x1079f5 ; ret
0x0000000000107f49 : jae 0x107f81 ; ret
0x0000000000107fa9 : jae 0x107fe1 ; ret
0x0000000000107ffd : jae 0x108002 ; ret
0x000000000010802d : jae 0x108032 ; ret
0x000000000010805d : jae 0x108062 ; ret
0x000000000010808d : jae 0x108092 ; ret
0x00000000001080c0 : jae 0x1080c5 ; ret
0x00000000001080f0 : jae 0x1080f5 ; ret
0x000000000010811d : jae 0x108122 ; ret
0x000000000010814d : jae 0x108152 ; ret
0x000000000010817d : jae 0x108182 ; ret
0x00000000001081ad : jae 0x1081b2 ; ret
0x000000000010e87c : jae 0x10e8a7 ; cmp byte ptr [rax], dil ; je 0x10e8b1 ; mov rdx, rax ; jmp 0x10e89e
0x000000000010eb87 : jae 0x10ebae ; cmp byte ptr [r8], r9b ; je 0x10ebb5 ; mov rdx, r8 ; jmp 0x10eba5
0x000000000013b2d5 : jae 0x13b2e4 ; xor eax, eax ; ret
0x000000000013b315 : jae 0x13b324 ; xor eax, eax ; ret
0x000000000013fab0 : jae 0x13fab5 ; ret
0x000000000013fb00 : jae 0x13fb05 ; ret
0x0000000000142904 : jae 0x1428e7 ; mov eax, 1 ; ret
0x000000000017378c : jae 0x17379b ; call qword ptr [rbx]
0x000000000017378c : jae 0x17379f ; call qword ptr [rbx]
0x0000000000174547 : jae 0x174564 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000183242 : jae 0x183224 ; jo 0x1832c0 ; mov ebp, 0xfb67d10d ; ret
0x00000000001840de : jae 0x1840b9 ; push rsi ; pop rdx ; je 0x1840ae ; ret 0xacfc
0x0000000000194351 : jae 0x194354 ; jmp qword ptr [rax + 0x20fffb74]
0x00000000001985bd : jae 0x1985c6 ; add byte ptr [rbp + rax - 0xa], dh ; call rsp
0x000000000019acc9 : jae 0x19acc8 ; call rsp
0x00000000001a0869 : jae 0x1a0881 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a11b5 : jae 0x1a11cd ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1a77 : jae 0x1a1a85 ; ret
0x00000000001a5b29 : jae 0x1a5b1b ; jmp qword ptr [rdx]
0x00000000001a6991 : jae 0x1a6984 ; call rax
0x00000000001b0159 : jae 0x1b0152 ; call qword ptr [rsi]
0x00000000001b0189 : jae 0x1b0182 ; jmp qword ptr [rcx]
0x00000000001b01b9 : jae 0x1b01b2 ; jmp qword ptr [rcx]
0x00000000001b01d1 : jae 0x1b01ca ; jmp qword ptr [rcx]
0x000000000002cb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003576d : jae 0x35772 ; ret
0x0000000000035e2d : jae 0x35e32 ; ret
0x0000000000047b27 : jae 0x47b30 ; xor eax, eax ; ret
0x000000000006984c : jae 0x697d9 ; ret 0x348
0x000000000006b36d : jae 0x6b372 ; ret
0x000000000006b3a0 : jae 0x6b3a5 ; ret
0x0000000000079618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b2d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cc4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x0000000000088a9e : jae 0x88aae ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb96d : jae 0xbb972 ; ret
0x00000000000bea5d : jae 0xbea62 ; ret
0x00000000000bea8d : jae 0xbea92 ; ret
0x00000000000cb38d : jae 0xcb392 ; ret
0x00000000000cb580 : jae 0xcb585 ; ret
0x00000000000cb65d : jae 0xcb662 ; ret
0x00000000000cb6e6 : jae 0xcb71b ; ret
0x00000000000cb746 : jae 0xcb77b ; ret
0x00000000000cbb47 : jae 0xcbb4c ; ret
0x00000000000cbbcd : jae 0xcbbd2 ; ret
0x00000000000cc6dd : jae 0xcc6e2 ; ret
0x00000000000cc87d : jae 0xcc882 ; ret
0x00000000000cc8ad : jae 0xcc8b2 ; ret
0x00000000000cc90d : jae 0xcc912 ; ret
0x00000000000cc93d : jae 0xcc942 ; ret
0x00000000000cc96d : jae 0xcc972 ; ret
0x00000000000cc99d : jae 0xcc9a2 ; ret
0x00000000000cf056 : jae 0xcf06e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e012a : jae 0xe0376 ; movdqa xmm0, xmm2 ; jmp 0xe011c
0x00000000000e9b8d : jae 0xe9b92 ; ret
0x00000000000e9bbd : jae 0xe9bc2 ; ret
0x00000000000e9bed : jae 0xe9bf2 ; ret
0x00000000000e9c1d : jae 0xe9c22 ; ret
0x00000000000e9c4d : jae 0xe9c52 ; ret
0x00000000000e9c7d : jae 0xe9c82 ; ret
0x00000000000e9cad : jae 0xe9cb2 ; ret
0x00000000000e9cdd : jae 0xe9ce2 ; ret
0x00000000000f4e99 : jae 0xf4ed1 ; ret
0x00000000000f4ef9 : jae 0xf4f31 ; ret
0x00000000000f5f6d : jae 0xf5f72 ; ret
0x00000000000f620d : jae 0xf6212 ; ret
0x00000000000f623d : jae 0xf6242 ; ret
0x00000000000f630d : jae 0xf6312 ; ret
0x00000000000f633d : jae 0xf6342 ; ret
0x00000000000f63fd : jae 0xf6402 ; ret
0x00000000000f642d : jae 0xf6432 ; ret
0x00000000000f6466 : jae 0xf649b ; ret
0x00000000000f6686 : jae 0xf66bb ; ret
0x00000000000f66e6 : jae 0xf671b ; ret
0x00000000000f673d : jae 0xf6742 ; ret
0x00000000000f6bcd : jae 0xf6bd2 ; ret
0x00000000000f6d16 : jae 0xf6d4b ; ret
0x00000000000f6d6d : jae 0xf6d72 ; ret
0x00000000000f6d9d : jae 0xf6da2 ; ret
0x00000000000f6dcd : jae 0xf6dd2 ; ret
0x00000000000f6dfd : jae 0xf6e02 ; ret
0x00000000000f6e2d : jae 0xf6e32 ; ret
0x00000000000f6e66 : jae 0xf6e9b ; ret
0x00000000000f6ebd : jae 0xf6ec2 ; ret
0x00000000000f6eed : jae 0xf6ef2 ; ret
0x00000000000f771d : jae 0xf7722 ; ret
0x00000000000f774d : jae 0xf7752 ; ret
0x00000000000f777d : jae 0xf7782 ; ret
0x00000000000f77b0 : jae 0xf77b5 ; ret
0x00000000000f7d8d : jae 0xf7d92 ; ret
0x00000000000f7dc0 : jae 0xf7dc5 ; ret
0x00000000000f7ded : jae 0xf7df2 ; ret
0x00000000000f7e1d : jae 0xf7e22 ; ret
0x00000000000f7e4d : jae 0xf7e52 ; ret
0x00000000000f7e80 : jae 0xf7e85 ; ret
0x00000000000f7ead : jae 0xf7eb2 ; ret
0x00000000000f7edd : jae 0xf7ee2 ; ret
0x00000000000f7f0d : jae 0xf7f12 ; ret
0x00000000000fab46 : jae 0xfab7b ; ret
0x00000000000fabd4 : jae 0xfac27 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faeb0 : jae 0xfaeb5 ; ret
0x00000000000fb629 : jae 0xfb661 ; ret
0x00000000000fbd7d : jae 0xfbd82 ; ret
0x00000000000fbdad : jae 0xfbdb2 ; ret
0x00000000000fbddd : jae 0xfbde2 ; ret
0x00000000000fc17d : jae 0xfc182 ; ret
0x00000000000fc35d : jae 0xfc362 ; ret
0x00000000000fc396 : jae 0xfc3cb ; ret
0x00000000000fc3f6 : jae 0xfc42b ; ret
0x00000000000fc8ed : jae 0xfc8f2 ; ret
0x00000000000fc98d : jae 0xfc992 ; ret
0x00000000000fc9c9 : jae 0xfca01 ; ret
0x00000000000fcb1d : jae 0xfcb22 ; ret
0x00000000000fcb4d : jae 0xfcb52 ; ret
0x00000000000fcb86 : jae 0xfcbbb ; ret
0x00000000000fcbdd : jae 0xfcbe2 ; ret
0x00000000000fcc16 : jae 0xfcc4b ; ret
0x00000000000fcc6d : jae 0xfcc72 ; ret
0x00000000000fcfdd : jae 0xfcfe2 ; ret
0x00000000000fd00d : jae 0xfd012 ; ret
0x00000000000fd03d : jae 0xfd042 ; ret
0x00000000000fe58d : jae 0xfe592 ; ret
0x00000000000fe5bd : jae 0xfe5c2 ; ret
0x0000000000121a55 : jae 0xffffffff835a1c22 ; ret 0x3904
0x000000000003041d : jae 0xffffffff894b0462 ; ret
0x0000000000103a32 : jb 0x1039f9 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010dddb : jb 0x10ddef ; mov eax, 1 ; ret
0x0000000000113ddd : jb 0x113dd4 ; xor eax, eax ; ret
0x00000000001232d8 : jb 0x1232cb ; mov eax, 0xffffffff ; ret
0x00000000001232d7 : jb 0x1232cc ; mov eax, 0xffffffff ; ret
0x000000000012dc01 : jb 0x12dc25 ; ret
0x000000000012dbfb : jb 0x12dc2d ; ja 0x12dbf0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013762a : jb 0x13763d ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000014ce81 : jb 0x14ce6a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014cee4 : jb 0x14cecd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014cf88 : jb 0x14cf94 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d371 : jb 0x14d35a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d3d4 : jb 0x14d3bd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014d478 : jb 0x14d484 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d714 : jb 0x14d6fd ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d774 : jb 0x14d75d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014d818 : jb 0x14d824 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001509fa : jb 0x150a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150b4a : jb 0x150b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150c9a : jb 0x150caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150dea : jb 0x150dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150f3a : jb 0x150f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015108a : jb 0x15109a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001511da : jb 0x1511ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015132a : jb 0x15133a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015147a : jb 0x15148a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001515ca : jb 0x1515da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015171a : jb 0x15172a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015186a : jb 0x15187a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519ba : jb 0x1519ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b0a : jb 0x151b1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c5a : jb 0x151c6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001533ca : jb 0x1533da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015351a : jb 0x15352a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015366a : jb 0x15367a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001537ba : jb 0x1537ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015390a : jb 0x15391a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153a5a : jb 0x153a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153baa : jb 0x153bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153cfa : jb 0x153d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e4a : jb 0x153e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f9a : jb 0x153faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540ea : jb 0x1540fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015423a : jb 0x15424a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015438a : jb 0x15439a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544da : jb 0x1544ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015462a : jb 0x15463a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155d9a : jb 0x155daa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155eea : jb 0x155efa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015603a : jb 0x15604a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015618a : jb 0x15619a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001562da : jb 0x1562ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015642a : jb 0x15643a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015657a : jb 0x15658a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566ca : jb 0x1566da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015681a : jb 0x15682a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015696a : jb 0x15697a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156aba : jb 0x156aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c0a : jb 0x156c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d5a : jb 0x156d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156eaa : jb 0x156eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ffa : jb 0x15700a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000171e77 : jb 0x171e87 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000171e83 : jb 0x171e99 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000171e93 : jb 0x171e9b ; mov byte ptr [rdi], cl ; ret
0x00000000001737bb : jb 0x1737b1 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000174559 : jb 0x174558 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000174c8d : jb 0x174c80 ; call qword ptr [rax - 0x2f00148e]
0x0000000000174c91 : jb 0x174c80 ; call rax
0x0000000000174ca5 : jb 0x174c94 ; call rax
0x0000000000188488 : jb 0x188469 ; call qword ptr [rcx]
0x00000000001971a9 : jb 0x19719b ; call rsp
0x00000000001b0081 : jb 0x1b007a ; jmp qword ptr [rcx]
0x00000000001b00b1 : jb 0x1b00aa ; jmp qword ptr [rcx]
0x00000000001b00c9 : jb 0x1b00c2 ; jmp qword ptr [rcx]
0x00000000001b0111 : jb 0x1b010a ; jmp qword ptr [rcx]
0x00000000001b5dc6 : jb 0x1b5dd4 ; ret
0x00000000001b5dc6 : jb 0x1b5dda ; ret
0x0000000000002b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002da7e : jb 0x2da8b ; ret
0x00000000000038ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000071275 : jb 0x7129b ; mov dword ptr [rcx], eax ; ret
0x0000000000072d5c : jb 0x72d55 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009f00e : jb 0x9f01a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009f761 : jb 0x9f76d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009feae : jb 0x9feba ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a711a : jb 0xa7129 ; add byte ptr [rax], al ; ret
0x00000000000a9a45 : jb 0xa9a54 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a9a50 : jb 0xa9a63 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a9a5d : jb 0xa9a65 ; mov byte ptr [rdi], cl ; ret
0x00000000000ccfed : jb 0xccff6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000d673d : jb 0xd66bd ; pop rbx ; ret
0x000000000012d1b3 : jbe 0x12d1c7 ; mov eax, 2 ; ret
0x000000000013b5ed : jbe 0x13b609 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001943b0 : jbe 0x194355 ; std ; jmp qword ptr [rdx]
0x0000000000194359 : jbe 0x19435c ; jmp qword ptr [rax + 0x20fffb77]
0x0000000000195090 : jbe 0x195016 ; cld ; jmp rsi
0x0000000000195f95 : jbe 0x195f9d ; add byte ptr [rbp + rbp*8 - 0x17], dl ; call rsp
0x000000000019868d : jbe 0x198696 ; add ah, ah ; or al, 0xf6 ; call rsp
0x0000000000198a59 : jbe 0x198a53 ; jmp rsp
0x00000000001b0321 : jbe 0x1b031a ; jmp qword ptr [rcx]
0x00000000001b0339 : jbe 0x1b0332 ; jmp qword ptr [rcx]
0x000000000002b767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000002c0f : jbe 0x2be3 ; clc ; ret
0x0000000000047f4b : jbe 0x47fc1 ; xor eax, eax ; ret
0x000000000004a49c : jbe 0x4a496 ; nop ; pop rbx ; ret
0x00000000000533bf : jbe 0x5334c ; ret 0x8166
0x000000000007228a : jbe 0x72200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000008dfb6 : jbe 0x8dff5 ; add rax, rdi ; ret
0x000000000008dfc6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008dfd6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008dfe6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000093933 : jbe 0x9394e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x93929 ; ret
0x00000000000a06f9 : jbe 0xa06f3 ; ret 0xf10
0x00000000000a2319 : jbe 0xa2313 ; ret 0xf10
0x00000000000be502 : jbe 0xbe539 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db508 : jbe 0xdb517 ; mov eax, 0xc ; ret
0x00000000000f5cf8 : jbe 0xf5d03 ; ret
0x00000000000fe9cb : jbe 0xfea00 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fe9ff : jbe 0xfea35 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000fe9fe : jbe 0xfea36 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001008b8 : je 0x1008c9 ; mov dword ptr [rip + 0x2c2950], edi ; ret
0x0000000000101900 : je 0x10190b ; pop rbx ; ret
0x0000000000102e00 : je 0x102e12 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010482e : je 0x1048ce ; call rax
0x00000000001049a5 : je 0x104aa6 ; call rax
0x00000000001067f6 : je 0x1067fb ; ret
0x00000000001089c4 : je 0x1089cb ; pop rbp ; ret
0x0000000000108dca : je 0x108dda ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000109019 : je 0x109027 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010bdab : je 0x10bdc0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010e881 : je 0x10e8ac ; mov rdx, rax ; jmp 0x10e899
0x000000000010eb8c : je 0x10ebb0 ; mov rdx, r8 ; jmp 0x10eba0
0x0000000000111fa2 : je 0x111f82 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f76
0x0000000000112713 : je 0x112727 ; mov eax, 7 ; ret
0x0000000000112731 : je 0x112759 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000112740 : je 0x1127a4 ; xor eax, eax ; pop rbx ; ret
0x0000000000113e5b : je 0x113e6b ; ret
0x0000000000114509 : je 0x11450e ; ret
0x000000000011456d : je 0x114572 ; ret
0x000000000011498a : je 0x114992 ; ret
0x0000000000114c82 : je 0x114cb2 ; call rax
0x0000000000115102 : je 0x11511f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011563d : je 0x115650 ; lea rax, qword ptr [rip - 0x767b6] ; ret
0x000000000011567e : je 0x115690 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x000000000011572d : je 0x115740 ; lea rax, qword ptr [rip - 0x76156] ; ret
0x000000000011576e : je 0x115780 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00000000001157b7 : je 0x1157c9 ; lea rax, qword ptr [rip - 0x6be60] ; ret
0x0000000000115ca3 : je 0x115c9d ; dec dword ptr [rax - 0x7f] ; ret
0x000000000011615c : je 0x116170 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000116aac : je 0x116abe ; add rsp, 8 ; ret
0x000000000011765c : je 0x117670 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011eeb7 : je 0x11eec3 ; mov rdi, rbx ; call rax
0x000000000011eeb7 : je 0x11eec7 ; mov rdi, rbx ; call rax
0x000000000011f1af : je 0x11f1bb ; mov rdi, rbx ; call rax
0x000000000011f2bf : je 0x11f2d3 ; lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x000000000011f36a : je 0x11f397 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000122413 : je 0x12240b ; pop rbx ; ret
0x0000000000127752 : je 0x12775a ; ret
0x00000000001277b1 : je 0x1277ba ; ret
0x00000000001277ab : je 0x1277bb ; cmp dword ptr [rdi + 0x10], 2 ; je 0x1277c0 ; ret
0x000000000012a453 : je 0x12a43d ; xor eax, eax ; pop rbx ; ret
0x000000000012ac93 : je 0x12ac9f ; mov rdi, rsp ; call rax
0x000000000012ad7e : je 0x12ad8a ; mov rdi, rsp ; call rax
0x000000000012b439 : je 0x12b466 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012b634 : je 0x12b640 ; mov rdi, rbp ; call rax
0x000000000012b9b8 : je 0x12b9c2 ; ret
0x000000000012c6c5 : je 0x12c6d1 ; mov rdi, r14 ; call rax
0x000000000012cc43 : je 0x12cc54 ; xor eax, eax ; ret
0x000000000012d252 : je 0x12d25e ; mov rdi, rbp ; call rdx
0x000000000012d757 : je 0x12d854 ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001316a2 : je 0x1316b6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000013205a : je 0x132066 ; mov rdi, r12 ; call rax
0x000000000013223b : je 0x132249 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000132bd4 : je 0x132be4 ; xor eax, eax ; ret
0x00000000001335db : je 0x1334ff ; mov rdi, rbp ; call rax
0x0000000000133515 : je 0x133521 ; mov rdi, r13 ; call rax
0x0000000000133623 : je 0x133637 ; mov eax, 1 ; ret
0x000000000013365f : je 0x133672 ; call 0x1f8ac
0x0000000000133708 : je 0x133714 ; mov rdi, rbp ; call rax
0x0000000000133928 : je 0x133934 ; mov rdi, rbp ; call rax
0x000000000013441f : je 0x13442d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134acb : je 0x134ad7 ; mov rdi, r12 ; call rax
0x0000000000134e3f : je 0x134e4d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001376ca : je 0x137658 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013764f : je 0x13765b ; pop rbx ; ret
0x00000000001376f3 : je 0x137706 ; add rsp, 8 ; ret
0x0000000000137b01 : je 0x137b16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001382db : je 0x1382e2 ; ret
0x00000000001383bb : je 0x1383c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138ad4 : je 0x138ae2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139f4d : je 0x139fa8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a00d : je 0x13a068 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a0cd : je 0x13a128 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a18d : je 0x13a1e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a9fb : je 0x13aa27 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013ab3f : je 0x13ab6b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013ac8d : je 0x13acb8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013ad4d : je 0x13ad78 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013ae0d : je 0x13ae38 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013aecd : je 0x13aef8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b1c1 : je 0x13b1d3 ; ret
0x000000000013d188 : je 0x13d194 ; xor eax, eax ; ret
0x0000000000141db1 : je 0x141dc6 ; add rsp, 8 ; ret
0x0000000000144183 : je 0x14414d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000144e55 : je 0x144e5d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000144f53 : je 0x144f1d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145e3a : je 0x145e42 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145f93 : je 0x145f5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000147b63 : je 0x147b2d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000149b91 : je 0x149b78 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000149e83 : je 0x149e4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b513 : je 0x14b4dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016ebd7 : je 0x16ebe1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000173276 : je 0x17327c ; call rdx
0x000000000017338e : je 0x173399 ; call rax
0x0000000000173770 : je 0x173775 ; ret
0x00000000001833a8 : je 0x183373 ; xor al, 0xd8 ; ret
0x00000000001835e7 : je 0x1835e4 ; jmp 0x1835be
0x00000000001840e2 : je 0x1840aa ; ret 0xacfc
0x0000000000186974 : je 0x1869d6 ; out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x0000000000187b14 : je 0x187aa0 ; jmp rdx
0x0000000000194355 : je 0x194354 ; jmp qword ptr [rax]
0x0000000000194cd0 : je 0x194d30 ; cld ; jmp rsp
0x0000000000195404 : je 0x195481 ; cld ; jmp rsp
0x00000000001968e0 : je 0x196942 ; in eax, dx ; jmp rsp
0x0000000000197a29 : je 0x197a1e ; jmp rsp
0x0000000000197b80 : je 0x197bc8 ; call rsp
0x0000000000198a09 : je 0x198a03 ; jmp rsp
0x0000000000198a08 : je 0x198a04 ; jmp rsp
0x0000000000199508 : je 0x1994f3 ; idiv edi ; hlt ; ret 1
0x0000000000199780 : je 0x199794 ; clc ; jmp rsp
0x0000000000199fa0 : je 0x19a00a ; stc ; call rsp
0x000000000019a478 : je 0x19a496 ; cli ; jmp rsp
0x000000000019a474 : je 0x19a4ae ; add al, byte ptr [rax] ; je 0x19a49a ; cli ; jmp rsp
0x000000000019a930 : je 0x19a8d5 ; cli ; call rsp
0x000000000019aa50 : je 0x19aa1c ; cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x00000000001a0862 : je 0x1a0870 ; ret
0x00000000001a52ac : je 0x1a5258 ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00000000001a5dac : je 0x1a5d63 ; add byte ptr [rax], al ; loopne 0x1a5d41 ; out dx, al ; jmp rbx
0x00000000001a71e0 : je 0x1a71e7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7aac : je 0x1a7a80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00000000001ad2ac : je 0x1ad2d8 ; add dword ptr [rax], eax ; loopne 0x1ad253 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae3ac : je 0x1ae3e9 ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001afdac : je 0x1afe03 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b00ac : je 0x1b0106 ; add dword ptr [rax], eax ; push rax ; jb 0x1b00af ; jmp qword ptr [rcx]
0x00000000001b0201 : je 0x1b01fa ; jmp qword ptr [rcx]
0x00000000001b07ac : je 0x1b080d ; add dword ptr [rax], eax ; jo 0x1b073e ; cmc ; jmp rax
0x00000000001bb521 : je 0x1bb51d ; call qword ptr [rdi]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fb05 : je 0x1faa6 ; jmp 0x1facf
0x0000000000021857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000024ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a698 : je 0x2a6a3 ; pop rbx ; ret
0x000000000002a693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x000000000002b025 : je 0x2b02b ; call rax
0x000000000002b396 : je 0x2b39c ; call rcx
0x000000000002c37b : je 0x2c381 ; call rax
0x00000000000331ae : je 0x331d9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000334fe : je 0x3352d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x0000000000034c5d : je 0x34c4c ; ret
0x0000000000034f55 : je 0x34f7f ; call 0xffffffffe28511e9
0x0000000000035046 : je 0x34fef ; ret
0x0000000000038380 : je 0x383ad ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000062913 : je 0x628a0 ; ret 0x348
0x000000000006ac46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006b45a : je 0x6b463 ; ret
0x000000000006d82e : je 0x6d83d ; mov eax, edx ; pop rbx ; ret
0x000000000006db93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e0d8 : je 0x6e102 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006ee75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f778 : je 0x6f7a3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fdc3 : je 0x6fdd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070107 : je 0x70115 ; mov eax, edx ; pop rbx ; ret
0x00000000000704f7 : je 0x70505 ; mov eax, esi ; pop rbx ; ret
0x0000000000070679 : je 0x70685 ; mov eax, esi ; pop rbx ; ret
0x0000000000070833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070a76 : je 0x70a88 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070fed : je 0x70ffe ; mov eax, r8d ; pop rbx ; ret
0x0000000000071190 : je 0x711a5 ; mov eax, edx ; pop rbx ; ret
0x0000000000071327 : je 0x71335 ; mov eax, edx ; pop rbx ; ret
0x0000000000071cc6 : je 0x71d16 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000071cc5 : je 0x71d17 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000072aac : je 0x72ab2 ; ret
0x0000000000072ada : je 0x72b3c ; pop rbp ; pop r12 ; ret
0x0000000000072b7f : je 0x72be1 ; pop rbp ; pop r12 ; ret
0x0000000000072cbd : je 0x72cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072d01 : je 0x72d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000073238 : je 0x73247 ; mov eax, 0xffffffff ; ret
0x0000000000075b85 : je 0x75b95 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f8a : je 0x75f95 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ae : je 0x760bd ; mov eax, esi ; pop rbx ; ret
0x00000000000761f0 : je 0x76205 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d5 : je 0x764e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e7a : je 0x76e85 ; mov eax, edx ; pop rbx ; ret
0x00000000000774fb : je 0x7750d ; mov dword ptr [rdi], edx ; ret
0x000000000007781c : je 0x7782f ; mov eax, 0xffffffff ; ret
0x0000000000077b9c : je 0x77baf ; mov eax, 0xffffffff ; ret
0x0000000000078086 : je 0x78095 ; mov eax, edx ; pop rbx ; ret
0x000000000007841b : je 0x783c1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007848f : je 0x7849b ; pop rbx ; ret
0x000000000007b2b3 : je 0x7b26d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b403 : je 0x7b3bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b565 : je 0x7b572 ; ret
0x000000000007b597 : je 0x7b5a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf7a : je 0x7bf85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007d9bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x000000000007df86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e074 : je 0x7e07a ; call rax
0x000000000007ec17 : je 0x7ec24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083a32 : je 0x83a5b ; call rax
0x0000000000084402 : je 0x8442e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000849bb : je 0x849c1 ; call rax
0x0000000000086a59 : je 0x86a62 ; ret
0x0000000000086cf2 : je 0x86d07 ; mov eax, 0x16 ; ret
0x0000000000086e1e : je 0x86fa9 ; mov rsi, r14 ; call rax
0x0000000000088378 : je 0x88382 ; ret
0x0000000000088cfb : je 0x88d0d ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x0000000000088ee8 : je 0x88efa ; lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x000000000008a5db : je 0x8a5ed ; lea rax, qword ptr [rip + 0xda44c] ; ret
0x000000000008a6e8 : je 0x8a6fa ; lea rax, qword ptr [rip + 0xbf30f] ; ret
0x000000000008a865 : je 0x8a88c ; movsx eax, dl ; ret
0x000000000008a865 : je 0x8a88d ; movsx eax, dl ; ret
0x000000000008a860 : je 0x8a8b9 ; cmp dl, 3 ; je 0x8a891 ; movsx eax, dl ; ret
0x000000000008a972 : je 0x8a986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008aba4 : je 0x8abae ; bsf eax, edx ; ret
0x000000000008aba4 : je 0x8abaf ; bsf eax, edx ; ret
0x000000000008ac4d : je 0x8ac65 ; bsf rax, rdx ; ret
0x000000000008ac4d : je 0x8ac66 ; bsf rax, rdx ; ret
0x000000000008abec : je 0x8ac79 ; bsf rax, rdx ; ret
0x000000000008ae1c : je 0x8ae45 ; bsf rax, rdx ; ret
0x000000000008ae1c : je 0x8ae46 ; bsf rax, rdx ; ret
0x000000000008adac : je 0x8ae59 ; bsf rax, rdx ; ret
0x000000000008af5b : je 0x8af6d ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x000000000008c83b : je 0x8c84d ; lea rax, qword ptr [rip + 0xd999c] ; ret
0x000000000008cb58 : je 0x8cb6a ; lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x000000000008cee8 : je 0x8cefa ; lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x000000000008deac : je 0x8df03 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e025 : je 0x8e038 ; lea rax, qword ptr [rip + 0xdf812] ; ret
0x000000000008e637 : je 0x8e649 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008e79d : je 0x8e7b0 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000008e7de : je 0x8e7f0 ; lea rax, qword ptr [rip + 0xbee69] ; ret
0x000000000008eccb : je 0x8ecdd ; lea rax, qword ptr [rip + 0xda08c] ; ret
0x000000000008edeb : je 0x8edfd ; lea rax, qword ptr [rip + 0xdb77c] ; ret
0x000000000009385d : je 0x93870 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000093878 : je 0x9387d ; ret
0x00000000000938a0 : je 0x938b2 ; lea rax, qword ptr [rip + 0xbcb07] ; ret
0x000000000009514a : je 0x9515e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000095b3a : je 0x95b91 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000095bf1 : je 0x95c09 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000960c4 : je 0x960d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e00a : je 0x9e003 ; ret
0x000000000009e009 : je 0x9e004 ; ret
0x000000000009e02e : je 0x9e023 ; ret
0x000000000009e02a : je 0x9e027 ; cmp ecx, esi ; je 0x9e027 ; ret
0x000000000009e07f : je 0x9e063 ; ret
0x000000000009e5fc : je 0x9e5d8 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a54a9 : je 0xa54fa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a6b36 : je 0xa6b87 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a884a : je 0xa889b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000aa05d : je 0xaa026 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aa035 : je 0xaa028 ; movzx eax, cl ; pop rbx ; ret
0x00000000000aa05d : je 0xaa028 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aa182 : je 0xaa194 ; xor eax, eax ; ret
0x00000000000aa17d : je 0xaa1a1 ; cmp eax, 2 ; je 0xaa199 ; xor eax, eax ; ret
0x00000000000aa1cd : je 0xaa1b3 ; ret
0x00000000000aa215 : je 0xaa1f3 ; ret
0x00000000000ab12f : je 0xab121 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab369 : je 0xab389 ; mov cl, dl ; and cl, 0xf ; je 0xab399 ; ret
0x00000000000ab370 : je 0xab392 ; ret
0x00000000000ab385 : je 0xab3a6 ; add rax, 2 ; ret
0x00000000000ab9b6 : je 0xaba26 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000abc6f : je 0xabc8c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000abcc5 : je 0xabcd8 ; lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00000000000abe88 : je 0xabe3d ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac7fe : je 0xac82d ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000acab6 : je 0xacae5 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000acd66 : je 0xacd95 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000acf18 : je 0xacf25 ; test edx, edx ; jne 0xacf17 ; ret
0x00000000000acf17 : je 0xacf26 ; test edx, edx ; jne 0xacf18 ; ret
0x00000000000bb147 : je 0xbb174 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00000000000bb1fc : je 0xbb22b ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bb2c5 : je 0xbb2f0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000bb6b6 : je 0xbb6e5 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bd897 : je 0xbd8c2 ; cmp byte ptr [rcx + 1], cl ; ret
0x00000000000c25e3 : je 0xc263a ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c69e0 : je 0xc69fe ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cb7f1 : je 0xcb7f7 ; call rax
0x00000000000cb942 : je 0xcb94b ; call rdx
0x00000000000cb9d3 : je 0xcb9dc ; call rax
0x00000000000ccf0d : je 0xccf5c ; mov eax, 0x20 ; ret
0x00000000000ccfc9 : je 0xccff9 ; mov eax, 1 ; ret
0x00000000000ce95c : je 0xce977 ; call 0x8ab74
0x00000000000d630f : je 0xd6339 ; or byte ptr [rcx], ch ; ret
0x00000000000d6720 : je 0xd66b9 ; pop rbx ; ret
0x00000000000d6752 : je 0xd66ed ; pop rbx ; ret
0x00000000000d674d : je 0xd6713 ; and ebx, 8 ; je 0xd66f2 ; pop rbx ; ret
0x00000000000d8692 : je 0xd86a1 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000da381 : je 0xda395 ; xor eax, eax ; pop rbx ; ret
0x00000000000db9f9 : je 0xdba27 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000000e0413 : je 0xe044f ; mov rdx, rax ; jmp 0xe03b3
0x00000000000e78b8 : je 0xe78f4 ; xor eax, eax ; ret
0x00000000000e7917 : je 0xe7927 ; mov eax, 2 ; ret
0x00000000000e85d7 : je 0xe8603 ; enter 0xf41, -0x62 ; ret 0x844
0x00000000000ef105 : je 0xef0e3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efc3e : je 0xefc69 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f3634 : je 0xf365f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f536a : je 0xf5373 ; ret
0x00000000000fae70 : je 0xfae8d ; neg eax ; pop rbx ; ret
0x00000000000fbfdf : je 0xfc009 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fc098 : je 0xfc0c2 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fc7ee : je 0xfc7f5 ; ret
0x00000000000fe663 : je 0xfe66e ; mov qword ptr [rax], rdx ; ret
0x00000000000fe732 : je 0xfe727 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000fece5 : je 0xfed1c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000103d25 : jg 0x103cea ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d35 ; call rbx
0x0000000000132452 : jg 0x13249c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132468 ; ret
0x00000000001385b2 : jg 0x1385fc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c8 ; ret
0x000000000014ce80 : jg 0x14cefc ; loopne 0x14ce51 ; jp 0x14cf0d ; jp 0x14ce80 ; ret
0x000000000014cf2c : jg 0x14cf3d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d370 : jg 0x14d3ec ; loopne 0x14d341 ; jp 0x14d3fd ; jp 0x14d370 ; ret
0x000000000014d41c : jg 0x14d42d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d713 : jg 0x14d78f ; loopne 0x14d6e4 ; jp 0x14d7a0 ; jp 0x14d713 ; ret
0x000000000014d7bc : jg 0x14d7cd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000001525d9 : jg 0x15262c ; ret
0x000000000015265f : jg 0x1526aa ; ret
0x00000000001527d9 : jg 0x15282c ; ret 0x894c
0x000000000015285f : jg 0x1528aa ; ret 0x894c
0x0000000000154fa9 : jg 0x154ffc ; ret
0x000000000015502f : jg 0x15507a ; ret
0x00000000001551a9 : jg 0x1551fc ; ret 0x894c
0x000000000015522f : jg 0x15527a ; ret 0x894c
0x0000000000157979 : jg 0x1579cc ; ret
0x00000000001579ff : jg 0x157a4a ; ret
0x0000000000157b79 : jg 0x157bcc ; ret 0x894c
0x0000000000157bff : jg 0x157c4a ; ret 0x894c
0x0000000000159f48 : jg 0x159f99 ; loope 0x159f47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000159fbf : jg 0x15a00a ; ret 0xff2
0x0000000000159fd8 : jg 0x15a029 ; loop 0x159fd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a04f : jg 0x15a09a ; ret
0x000000000015a068 : jg 0x15a0b9 ; jrcxz 0x15a067 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a0f8 : jg 0x15a149 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a178 : jg 0x15a1c9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a1f8 : jg 0x15a249 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a278 : jg 0x15a2c9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a2f8 : jg 0x15a349 ; call 0x4f94b2fa
0x000000000015a378 : jg 0x15a3c9 ; jmp 0x4f94b37a
0x000000000015a4f8 : jg 0x15a549 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a578 : jg 0x15a5c9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a608 : jg 0x15a659 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a688 : jg 0x15a6d9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a6fc : jg 0x15a707 ; ret
0x000000000015a756 : jg 0x15a769 ; ret
0x000000000015a751 : jg 0x15a7a1 ; psllq mm1, qword ptr [rdi] ; jg 0x15a76e ; ret
0x000000000015a7c6 : jg 0x15a7d9 ; ret
0x000000000015a836 : jg 0x15a849 ; ret
0x000000000015a831 : jg 0x15a881 ; or eax, 0xf7f0ff3 ; ret
0x000000000015a8a6 : jg 0x15a8b9 ; ret
0x000000000015a8a1 : jg 0x15a8f1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015a916 : jg 0x15a929 ; ret
0x000000000015a911 : jg 0x15a961 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015a986 : jg 0x15a999 ; ret
0x000000000015a981 : jg 0x15a9d1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015a9f6 : jg 0x15aa09 ; ret
0x000000000015a9f1 : jg 0x15aa41 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015aa66 : jg 0x15aa79 ; ret
0x000000000015aa61 : jg 0x15aab1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015aad6 : jg 0x15aae9 ; ret
0x000000000015ab46 : jg 0x15ab59 ; ret
0x000000000015abb6 : jg 0x15abc9 ; ret
0x000000000015abb1 : jg 0x15ac01 ; add eax, 0xf7f0ff3 ; ret
0x000000000015ac26 : jg 0x15ac39 ; ret
0x000000000015ac21 : jg 0x15ac71 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ac96 : jg 0x15aca9 ; ret
0x000000000015ac91 : jg 0x15ace1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ad06 : jg 0x15ad19 ; ret
0x000000000015ad01 : jg 0x15ad51 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ad76 : jg 0x15ad89 ; ret
0x000000000015ad71 : jg 0x15adc1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ca18 : jg 0x15ca69 ; loope 0x15ca17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ca8f : jg 0x15cada ; ret 0xff2
0x000000000015caa8 : jg 0x15caf9 ; loop 0x15caa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cb1f : jg 0x15cb6a ; ret
0x000000000015cb38 : jg 0x15cb89 ; jrcxz 0x15cb37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cbc8 : jg 0x15cc19 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cc48 : jg 0x15cc99 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ccc8 : jg 0x15cd19 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cd48 : jg 0x15cd99 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cdc8 : jg 0x15ce19 ; call 0x4f94ddca
0x000000000015ce48 : jg 0x15ce99 ; jmp 0x4f94de4a
0x000000000015cfc8 : jg 0x15d019 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d048 : jg 0x15d099 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d0d8 : jg 0x15d129 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d158 : jg 0x15d1a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d1cc : jg 0x15d1d7 ; ret
0x000000000015d226 : jg 0x15d239 ; ret
0x000000000015d221 : jg 0x15d271 ; psllq mm1, qword ptr [rdi] ; jg 0x15d23e ; ret
0x000000000015d296 : jg 0x15d2a9 ; ret
0x000000000015d306 : jg 0x15d319 ; ret
0x000000000015d301 : jg 0x15d351 ; or eax, 0xf7f0ff3 ; ret
0x000000000015d376 : jg 0x15d389 ; ret
0x000000000015d371 : jg 0x15d3c1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d3e6 : jg 0x15d3f9 ; ret
0x000000000015d3e1 : jg 0x15d431 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d456 : jg 0x15d469 ; ret
0x000000000015d451 : jg 0x15d4a1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d4c6 : jg 0x15d4d9 ; ret
0x000000000015d4c1 : jg 0x15d511 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d536 : jg 0x15d549 ; ret
0x000000000015d531 : jg 0x15d581 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d5a6 : jg 0x15d5b9 ; ret
0x000000000015d616 : jg 0x15d629 ; ret
0x000000000015d686 : jg 0x15d699 ; ret
0x000000000015d681 : jg 0x15d6d1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015d6f6 : jg 0x15d709 ; ret
0x000000000015d6f1 : jg 0x15d741 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d766 : jg 0x15d779 ; ret
0x000000000015d761 : jg 0x15d7b1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d7d6 : jg 0x15d7e9 ; ret
0x000000000015d7d1 : jg 0x15d821 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d846 : jg 0x15d859 ; ret
0x000000000015d841 : jg 0x15d891 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015f538 : jg 0x15f589 ; loope 0x15f537 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f5af : jg 0x15f5fa ; ret 0xff2
0x000000000015f5c8 : jg 0x15f619 ; loop 0x15f5c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f63f : jg 0x15f68a ; ret
0x000000000015f658 : jg 0x15f6a9 ; jrcxz 0x15f657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f6e8 : jg 0x15f739 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f768 : jg 0x15f7b9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f7e8 : jg 0x15f839 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f868 : jg 0x15f8b9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f8e8 : jg 0x15f939 ; call 0x4f9508ea
0x000000000015f968 : jg 0x15f9b9 ; jmp 0x4f95096a
0x000000000015fae8 : jg 0x15fb39 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015fb68 : jg 0x15fbb9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015fbf8 : jg 0x15fc49 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015fc78 : jg 0x15fcc9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015fcec : jg 0x15fcf7 ; ret
0x000000000015fd46 : jg 0x15fd59 ; ret
0x000000000015fd41 : jg 0x15fd91 ; psllq mm1, qword ptr [rdi] ; jg 0x15fd5e ; ret
0x000000000015fdb6 : jg 0x15fdc9 ; ret
0x000000000015fe26 : jg 0x15fe39 ; ret
0x000000000015fe21 : jg 0x15fe71 ; or eax, 0xf7f0ff3 ; ret
0x000000000015fe96 : jg 0x15fea9 ; ret
0x000000000015fe91 : jg 0x15fee1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ff06 : jg 0x15ff19 ; ret
0x000000000015ff01 : jg 0x15ff51 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ff76 : jg 0x15ff89 ; ret
0x000000000015ff71 : jg 0x15ffc1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ffe6 : jg 0x15fff9 ; ret
0x000000000015ffe1 : jg 0x160031 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160056 : jg 0x160069 ; ret
0x0000000000160051 : jg 0x1600a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001600c6 : jg 0x1600d9 ; ret
0x0000000000160136 : jg 0x160149 ; ret
0x00000000001601a6 : jg 0x1601b9 ; ret
0x00000000001601a1 : jg 0x1601f1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000160216 : jg 0x160229 ; ret
0x0000000000160211 : jg 0x160261 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160286 : jg 0x160299 ; ret
0x0000000000160281 : jg 0x1602d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001602f6 : jg 0x160309 ; ret
0x00000000001602f1 : jg 0x160341 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160366 : jg 0x160379 ; ret
0x0000000000160361 : jg 0x1603b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171d45 : jg 0x171d54 ; neg eax ; ret
0x0000000000171e52 : jg 0x171e62 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000171ef3 : jg 0x171f44 ; loopne 0x171f48 ; sub eax, edx ; vzeroupper ; ret
0x0000000000194371 : jg 0x194374 ; jmp qword ptr [rax + 0x20fffb80]
0x00000000001959d1 : jg 0x1959d1 ; call rax
0x0000000000195d41 : jg 0x195d2e ; jmp rsp
0x000000000019a8a9 : jg 0x19a8a7 ; call rsp
0x00000000001a3a19 : jg 0x1a3a0a ; call qword ptr [rcx]
0x00000000001a6d51 : jg 0x1a6d44 ; call qword ptr [rdi]
0x0000000000026cff : jg 0x26c8c ; ret 0x5c77
0x00000000000347bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034c5b : jg 0x34c62 ; je 0x34c4e ; ret
0x0000000000035042 : jg 0x3508c ; or eax, esi ; je 0x34ff3 ; ret
0x000000000003acb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000047bbb : jg 0x47c29 ; xor eax, eax ; ret
0x0000000000047d7e : jg 0x47c8f ; pop rbx ; ret
0x000000000004a1f4 : jg 0x4a201 ; ret 0x5488
0x0000000000058395 : jg 0x583ae ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000063dfd : jg 0x63d8a ; ret
0x00000000000774f7 : jg 0x77485 ; inc byte ptr [rdx] ; je 0x77511 ; mov dword ptr [rdi], edx ; ret
0x000000000008ceed : jg 0x8cec0 ; or eax, dword ptr [rax] ; ret
0x000000000008e6d2 : jg 0x8e724 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000008e877 : jg 0x8e890 ; jne 0x8e867 ; mov rax, rdi ; ret
0x0000000000093937 : jg 0x9394e ; jne 0x93925 ; ret
0x0000000000094e08 : jg 0x94df3 ; ret
0x000000000009efb4 : jg 0x9efc5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009efc8 : jg 0x9efd9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009f43a : jg 0x9f436 ; ret
0x000000000009f707 : jg 0x9f718 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009f71b : jg 0x9f72c ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009fb8d : jg 0x9fb89 ; ret
0x000000000009fe54 : jg 0x9fe65 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fe68 : jg 0x9fe79 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a02da : jg 0xa02d6 ; ret
0x00000000000a5276 : jg 0xa5281 ; ret
0x00000000000a5286 : jg 0xa5294 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a529a : jg 0xa52a9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a52b9 : jg 0xa52c7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a52c9 : jg 0xa52d7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a52d9 : jg 0xa52ea ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a52fa : jg 0xa5309 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a531a : jg 0xa5329 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a533a : jg 0xa5349 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a535a : jg 0xa536c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a539d : jg 0xa53af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a53bd : jg 0xa53cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a53db : jg 0xa53eb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a53fb : jg 0xa540b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a541b : jg 0xa542b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a543b : jg 0xa544b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a59c8 : jg 0xa59d3 ; jne 0xa6288 ; ret
0x00000000000a59ec : jg 0xa59f8 ; jne 0xa6288 ; ret
0x00000000000a5a0f : jg 0xa5a1c ; jne 0xa6288 ; ret
0x00000000000a5a2a : jg 0xa5a38 ; jne 0xa6288 ; ret
0x00000000000a5a4d : jg 0xa5a5c ; jne 0xa6288 ; ret
0x00000000000a5a72 : jg 0xa5a82 ; jne 0xa6288 ; ret
0x00000000000a5a90 : jg 0xa5aa1 ; jne 0xa6288 ; ret
0x00000000000a5aac : jg 0xa5abe ; jne 0xa6288 ; ret
0x00000000000a5acf : jg 0xa5ae2 ; jne 0xa6288 ; ret
0x00000000000a5af4 : jg 0xa5b08 ; jne 0xa6288 ; ret
0x00000000000a5b12 : jg 0xa5b27 ; jne 0xa6288 ; ret
0x00000000000a5b32 : jg 0xa5b48 ; jne 0xa6288 ; ret
0x00000000000a5b54 : jg 0xa5b6b ; jne 0xa6288 ; ret
0x00000000000a5b74 : jg 0xa5b8c ; jne 0xa6288 ; ret
0x00000000000a5b94 : jg 0xa5bad ; jne 0xa6288 ; ret
0x00000000000a5bae : jg 0xa5bc8 ; jne 0xa6288 ; ret
0x00000000000a5bd1 : jg 0xa5bec ; jne 0xa6288 ; ret
0x00000000000a5bf6 : jg 0xa5c12 ; jne 0xa6288 ; ret
0x00000000000a5c14 : jg 0xa5c31 ; jne 0xa6288 ; ret
0x00000000000a5c34 : jg 0xa5c52 ; jne 0xa6288 ; ret
0x00000000000a5c57 : jg 0xa5c76 ; jne 0xa6288 ; ret
0x00000000000a5c76 : jg 0xa5c96 ; jne 0xa6288 ; ret
0x00000000000a5c96 : jg 0xa5cb7 ; jne 0xa6288 ; ret
0x00000000000a5cb6 : jg 0xa5cd8 ; jne 0xa6288 ; ret
0x00000000000a5cd9 : jg 0xa5cfc ; jne 0xa6288 ; ret
0x00000000000a5d0e : jg 0xa5d32 ; jne 0xa6288 ; ret
0x00000000000a5d3c : jg 0xa5d61 ; jne 0xa6288 ; ret
0x00000000000a5d6c : jg 0xa5d92 ; jne 0xa6288 ; ret
0x00000000000a5d98 : jg 0xa5dbf ; jne 0xa6288 ; ret
0x00000000000a5dc8 : jg 0xa5df0 ; jne 0xa6288 ; ret
0x00000000000a5df8 : jg 0xa5e21 ; jne 0xa6288 ; ret
0x00000000000a5e28 : jg 0xa5e52 ; jne 0xa6288 ; ret
0x00000000000a5f46 : jg 0xa5f51 ; ret
0x00000000000a5f59 : jg 0xa5f67 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5f6a : jg 0xa5f79 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5f89 : jg 0xa5f97 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5f99 : jg 0xa5fa7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5fac : jg 0xa5fbd ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5fca : jg 0xa5fd9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5fea : jg 0xa5ff9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a600a : jg 0xa6019 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a602d : jg 0xa603f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a606d : jg 0xa607f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a608d : jg 0xa609f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a60ab : jg 0xa60bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a60cb : jg 0xa60db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a60eb : jg 0xa60fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a610b : jg 0xa611b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6242 : jg 0xa624d ; ret
0x00000000000a6376 : jg 0xa63aa ; ret
0x00000000000a68e6 : jg 0xa68f5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a68f6 : jg 0xa6908 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6929 : jg 0xa693b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6949 : jg 0xa695b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a6a6f : jg 0xa6acf ; or eax, 0x1c478d48 ; ret
0x00000000000a706b : jg 0xa7076 ; jne 0xa7a98 ; ret
0x00000000000a7090 : jg 0xa709c ; jne 0xa7a98 ; ret
0x00000000000a70b3 : jg 0xa70c0 ; jne 0xa7a98 ; ret
0x00000000000a70ce : jg 0xa70dc ; jne 0xa7a98 ; ret
0x00000000000a70f1 : jg 0xa7100 ; jne 0xa7a98 ; ret
0x00000000000a7116 : jg 0xa7126 ; jne 0xa7a98 ; ret
0x00000000000a7134 : jg 0xa7145 ; jne 0xa7a98 ; ret
0x00000000000a7150 : jg 0xa7162 ; jne 0xa7a98 ; ret
0x00000000000a7173 : jg 0xa7186 ; jne 0xa7a98 ; ret
0x00000000000a7198 : jg 0xa71ac ; jne 0xa7a98 ; ret
0x00000000000a71c6 : jg 0xa71db ; jne 0xa7a98 ; ret
0x00000000000a71e6 : jg 0xa71fc ; jne 0xa7a98 ; ret
0x00000000000a7208 : jg 0xa721f ; jne 0xa7a98 ; ret
0x00000000000a7238 : jg 0xa7250 ; jne 0xa7a98 ; ret
0x00000000000a7268 : jg 0xa7281 ; jne 0xa7a98 ; ret
0x00000000000a7292 : jg 0xa72ac ; jne 0xa7a98 ; ret
0x00000000000a72b5 : jg 0xa72d0 ; jne 0xa7a98 ; ret
0x00000000000a72da : jg 0xa72f6 ; jne 0xa7a98 ; ret
0x00000000000a7308 : jg 0xa7325 ; jne 0xa7a98 ; ret
0x00000000000a7338 : jg 0xa7356 ; jne 0xa7a98 ; ret
0x00000000000a736b : jg 0xa738a ; jne 0xa7a98 ; ret
0x00000000000a739a : jg 0xa73ba ; jne 0xa7a98 ; ret
0x00000000000a73ca : jg 0xa73eb ; jne 0xa7a98 ; ret
0x00000000000a73fa : jg 0xa741c ; jne 0xa7a98 ; ret
0x00000000000a742d : jg 0xa7450 ; jne 0xa7a98 ; ret
0x00000000000a7462 : jg 0xa7486 ; jne 0xa7a98 ; ret
0x00000000000a7490 : jg 0xa74b5 ; jne 0xa7a98 ; ret
0x00000000000a74c0 : jg 0xa74e6 ; jne 0xa7a98 ; ret
0x00000000000a74ec : jg 0xa7513 ; jne 0xa7a98 ; ret
0x00000000000a751c : jg 0xa7544 ; jne 0xa7a98 ; ret
0x00000000000a754c : jg 0xa7575 ; jne 0xa7a98 ; ret
0x00000000000a757c : jg 0xa75a6 ; jne 0xa7a98 ; ret
0x00000000000a7726 : jg 0xa7735 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7739 : jg 0xa774b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7779 : jg 0xa778b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7799 : jg 0xa77ab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78bf : jg 0xa791f ; or eax, 0x1d478d48 ; ret
0x00000000000a7a52 : jg 0xa7a5d ; ret
0x00000000000a7b86 : jg 0xa7bbe ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a7b85 : jg 0xa7c0d ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a8356 : jg 0xa8361 ; ret
0x00000000000a8366 : jg 0xa8374 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a837a : jg 0xa8389 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8399 : jg 0xa83a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a83a9 : jg 0xa83b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a83b9 : jg 0xa83ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a83da : jg 0xa83e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a83fa : jg 0xa8409 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a841a : jg 0xa8429 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a843a : jg 0xa844c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a847d : jg 0xa848f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a849d : jg 0xa84af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a84bb : jg 0xa84cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a84db : jg 0xa84eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a84fb : jg 0xa850b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a851b : jg 0xa852b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8e26 : jg 0xa8e31 ; ret
0x00000000000a8e36 : jg 0xa8e44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8e4a : jg 0xa8e59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8e69 : jg 0xa8e77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8e79 : jg 0xa8e87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8e89 : jg 0xa8e9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8eaa : jg 0xa8eb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8eca : jg 0xa8ed9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8eea : jg 0xa8ef9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8f0a : jg 0xa8f1c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a8f4d : jg 0xa8f5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a8f6d : jg 0xa8f7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a8f8b : jg 0xa8f9b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a8fab : jg 0xa8fbb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a8fcb : jg 0xa8fdb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a8feb : jg 0xa8ffb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9196 : jg 0xa91a6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a936f : jg 0xa93d0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a938f : jg 0xa93f0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9406 : jg 0xa943f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9405 : jg 0xa948e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9a27 : jg 0xa9a37 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000000a9a1d : jg 0xa9a3d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000a9ff0 : jg 0xaa02d ; ret 0x2b77
0x00000000000ab0b5 : jg 0xab0bd ; neg eax ; ret
0x00000000000c6cd7 : jg 0xc6caa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ccdac : jg 0xccdb2 ; add byte ptr [rax], al ; ret
0x00000000000ccdfb : jg 0xcce04 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000ccdfb : jg 0xcce05 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e1417 : jg 0xe142c ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000ff7ef : jg 0xff7f9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000101dab : jge 0x101daf ; call rbx
0x0000000000101ed2 : jge 0x101ed6 ; call rbx
0x0000000000101ee0 : jge 0x101ee4 ; call rbx
0x0000000000102015 : jge 0x102019 ; call rbx
0x0000000000102185 : jge 0x102189 ; call rbx
0x0000000000102193 : jge 0x102197 ; call rbx
0x00000000001025e6 : jge 0x1025b1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000001039a3 : jge 0x1039a7 ; call rbx
0x0000000000103acb : jge 0x103acf ; call rbx
0x0000000000103c0e : jge 0x103c12 ; call rbx
0x0000000000103d0f : jge 0x103d13 ; call rbx
0x0000000000103d2b : jge 0x103d2f ; call rbx
0x000000000013223f : jge 0x132253 ; call rax
0x000000000013365a : jge 0x133685 ; test rdi, rdi ; je 0x133677 ; call 0x1f8b1
0x00000000001383bf : jge 0x1383d3 ; call rax
0x0000000000138ad8 : jge 0x138aec ; call rax
0x0000000000171f80 : jge 0x171f95 ; call r12
0x00000000001735fc : jge 0x173602 ; call 0x1f8ac
0x00000000001735eb : jge 0x173611 ; call 0x1f8ac
0x00000000001735e2 : jge 0x173658 ; call 0x1f8ac
0x0000000000187b05 : jge 0x187afc ; jmp rdx
0x0000000000189410 : jge 0x1893ab ; cmc ; jmp qword ptr [rbx]
0x000000000019436d : jge 0x19436c ; jmp qword ptr [rax]
0x00000000001952a1 : jge 0x1952a1 ; call rax
0x000000000019531d : jge 0x19531d ; jmp qword ptr [rdx]
0x0000000000195321 : jge 0x195325 ; jmp qword ptr [rdx + 0x22fffc7c]
0x000000000019549d : jge 0x19549d ; jmp rax
0x000000000019d3c9 : jge 0x19d3b6 ; call qword ptr [rax]
0x00000000001a2cad : jge 0x1a2cb5 ; add al, dh ; in eax, dx ; jmp rsi
0x00000000001a39a9 : jge 0x1a399a ; call qword ptr [rsi]
0x0000000000038f6e : jge 0x38f73 ; call r14
0x000000000004727a : jge 0x47281 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000007f13d : jge 0x7f13f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000009e4df : jge 0x9e4e7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abf56 : jge 0xabf5b ; call r12
0x00000000000cc42f : jge 0xcc3e1 ; call 0x1f8b0
0x00000000000d6a9a : jge 0xd6a73 ; mov edx, eax ; jmp 0xd6a7c
0x00000000000f6c62 : jge 0xf6cb4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000fee6f : jge 0xfeeeb ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000102240 : jl 0x10226e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001067f4 : jl 0x106839 ; je 0x1067fd ; ret
0x00000000001089c0 : jl 0x108971 ; sub eax, dword ptr [rax] ; je 0x1089cf ; pop rbp ; ret
0x000000000011879b : jl 0x1187ca ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000127a79 : jl 0x127aa4 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000132b07 : jl 0x132b32 ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000139bf0 : jl 0x139c54 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000016fc9b : jl 0x16fca4 ; neg eax ; ret
0x0000000000187b48 : jl 0x187ad1 ; jmp rdx
0x0000000000187b99 : jl 0x187b90 ; jmp rdx
0x0000000000187bb1 : jl 0x187bac ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x0000000000189c15 : jl 0x189c0f ; jmp rdx
0x0000000000189c19 : jl 0x189c13 ; jmp rdx
0x0000000000189c1d : jl 0x189c17 ; jmp rdx
0x0000000000189c21 : jl 0x189c1b ; jmp rdx
0x0000000000189c2d : jl 0x189c27 ; jmp rax
0x0000000000189c35 : jl 0x189c2f ; jmp rdx
0x0000000000189c39 : jl 0x189c33 ; jmp rdx
0x0000000000189c3d : jl 0x189c37 ; jmp rdx
0x0000000000189c41 : jl 0x189c3b ; jmp rdx
0x0000000000189c45 : jl 0x189c3f ; jmp rdx
0x0000000000189c49 : jl 0x189c43 ; jmp rdx
0x0000000000189c4d : jl 0x189c47 ; jmp rdx
0x0000000000189c51 : jl 0x189c4b ; jmp rdx
0x0000000000189c55 : jl 0x189c4f ; jmp rdx
0x0000000000189c59 : jl 0x189c53 ; jmp rdx
0x0000000000189c5d : jl 0x189c57 ; jmp rdx
0x0000000000189c61 : jl 0x189c5b ; jmp rdx
0x0000000000189c65 : jl 0x189c5f ; jmp rdx
0x0000000000189c69 : jl 0x189c63 ; jmp rdx
0x0000000000189c6d : jl 0x189c6b ; lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x0000000000189c75 : jl 0x189c73 ; dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x0000000000189c7d : jl 0x189c77 ; jmp rdx
0x0000000000189c81 : jl 0x189c7b ; jmp rdx
0x0000000000189c85 : jl 0x189c7f ; jmp rdx
0x0000000000189c89 : jl 0x189c83 ; jmp rdx
0x0000000000189c8d : jl 0x189c87 ; jmp rdx
0x0000000000189c91 : jl 0x189c8b ; jmp rdx
0x0000000000189c95 : jl 0x189c8f ; jmp rdx
0x0000000000189c99 : jl 0x189c93 ; jmp rdx
0x0000000000189c9d : jl 0x189c97 ; jmp rdx
0x0000000000189ca1 : jl 0x189c9b ; jmp rdx
0x0000000000189ca5 : jl 0x189c9f ; jmp rdx
0x0000000000189cb1 : jl 0x189cab ; jmp rdx
0x0000000000189cb5 : jl 0x189caf ; jmp rdx
0x0000000000189cb9 : jl 0x189cb3 ; jmp rdx
0x0000000000189cbd : jl 0x189cb7 ; jmp rdx
0x0000000000189cd5 : jl 0x189ccf ; jmp qword ptr [rdx]
0x0000000000189cd9 : jl 0x189cd3 ; jmp qword ptr [rdx]
0x0000000000189cdd : jl 0x189cd7 ; jmp qword ptr [rdx]
0x0000000000189ce1 : jl 0x189cdb ; jmp qword ptr [rdx]
0x0000000000189cf5 : jl 0x189cef ; jmp qword ptr [rdx]
0x0000000000189cf9 : jl 0x189cf3 ; jmp qword ptr [rdx]
0x0000000000189cfd : jl 0x189cf7 ; jmp qword ptr [rdx]
0x0000000000189d01 : jl 0x189cfb ; jmp qword ptr [rdx]
0x0000000000189d05 : jl 0x189cff ; jmp qword ptr [rdx]
0x0000000000189d09 : jl 0x189d03 ; jmp qword ptr [rdx]
0x0000000000189d0d : jl 0x189d07 ; jmp qword ptr [rdx]
0x0000000000189d11 : jl 0x189d0b ; jmp qword ptr [rdx]
0x0000000000189d15 : jl 0x189d0f ; jmp qword ptr [rdx]
0x0000000000189d19 : jl 0x189d13 ; jmp qword ptr [rdx]
0x0000000000189d1d : jl 0x189d17 ; jmp qword ptr [rdx]
0x0000000000189d21 : jl 0x189d1b ; jmp qword ptr [rdx]
0x0000000000189d25 : jl 0x189d1f ; jmp qword ptr [rdx]
0x0000000000189d29 : jl 0x189d23 ; jmp qword ptr [rdx]
0x0000000000189d3d : jl 0x189d37 ; jmp qword ptr [rdx]
0x0000000000189d41 : jl 0x189d3b ; jmp qword ptr [rdx]
0x0000000000189d45 : jl 0x189d3f ; jmp qword ptr [rdx]
0x0000000000189d49 : jl 0x189d43 ; jmp qword ptr [rdx]
0x0000000000189d4d : jl 0x189d47 ; jmp qword ptr [rdx]
0x0000000000189d51 : jl 0x189d4b ; jmp qword ptr [rdx]
0x0000000000189d55 : jl 0x189d4f ; jmp qword ptr [rdx]
0x0000000000189d59 : jl 0x189d53 ; jmp qword ptr [rdx]
0x0000000000189d5d : jl 0x189d57 ; jmp qword ptr [rdx]
0x0000000000189d61 : jl 0x189d5b ; jmp qword ptr [rdx]
0x0000000000189d65 : jl 0x189d5f ; jmp qword ptr [rdx]
0x0000000000189d71 : jl 0x189d6b ; jmp qword ptr [rdx]
0x0000000000189d75 : jl 0x189d6f ; jmp qword ptr [rdx]
0x0000000000189d79 : jl 0x189d73 ; jmp qword ptr [rdx]
0x0000000000189d7d : jl 0x189d77 ; jmp qword ptr [rdx]
0x0000000000194369 : jl 0x19436c ; jmp qword ptr [rax + 0x20fffb7d]
0x00000000001952a9 : jl 0x1952a9 ; call rax
0x0000000000195325 : jl 0x195325 ; jmp qword ptr [rdx]
0x0000000000195329 : jl 0x19532d ; jmp qword ptr [rdx + 0x22fffc7b]
0x00000000001954a5 : jl 0x1954a5 ; jmp rax
0x0000000000197219 : jl 0x19720b ; jmp rsp
0x000000000019827c : jl 0x1982e2 ; add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x0000000000199f9c : jl 0x199fb3 ; add al, byte ptr [rax] ; je 0x19a00e ; stc ; call rsp
0x000000000019acc4 : jl 0x19acd2 ; add dword ptr [rax], eax ; xor al, 0x73 ; sti ; call rsp
0x000000000019cfb4 : jl 0x19cfdd ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x000000000019d371 : jl 0x19d35e ; call qword ptr [rcx]
0x000000000019e0b4 : jl 0x19e0ec ; add byte ptr [rax], al ; clc ; ret
0x000000000019e0b4 : jl 0x19e0ee ; add byte ptr [rax], al ; clc ; ret
0x00000000001a1cb4 : jl 0x1a1d2a ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00000000001a5fb4 : jl 0x1a5f6d ; add byte ptr [rax], al ; js 0x1a5fdb ; cli ; call qword ptr [rax]
0x00000000001a72d0 : jl 0x1a72d7 ; add byte ptr [rax], al ; pushfq ; ret
0x00000000001a9bb4 : jl 0x1a9ba9 ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00000000001acfb4 : jl 0x1acfdd ; add dword ptr [rax], eax ; js 0x1acf54 ; hlt ; jmp qword ptr [rcx]
0x00000000001b01b4 : jl 0x1b020f ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b1fb4 : jl 0x1b202d ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x0000000000024366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002510f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000025e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x0000000000025f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026869 : jl 0x26892 ; call rbx
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002a278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00000000000517b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000072a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007a78b : jl 0x7a7d6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007db99 : jl 0x7dbd4 ; add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x0000000000086e20 : jl 0x86e2a ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088d00 : jl 0x88d7d ; add dword ptr [rax], eax ; ret
0x0000000000094575 : jl 0x945a0 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x000000000009e56a : jl 0x9e5d5 ; add rax, rdi ; ret
0x000000000009e57a : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009e59a : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009e5ba : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009ef34 : jl 0x9ef83 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009ef70 : jl 0x9efbf ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009f16e : jl 0x9f1bd ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f2d5 : jl 0x9f324 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009f437 : jl 0x9f486 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000009f687 : jl 0x9f6d6 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f6c3 : jl 0x9f712 ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009f8c1 : jl 0x9f910 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fa28 : jl 0x9fa77 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009fb8a : jl 0x9fbd9 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000009fdd4 : jl 0x9fe23 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe10 : jl 0x9fe5f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a000e : jl 0xa005d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0175 : jl 0xa01c4 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a02d7 : jl 0xa0326 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a99dc : jl 0xa9a2b ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a99fd : jl 0xa9a4c ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9a10 : jl 0xa9a5f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9ae5 : jl 0xa9b34 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9b3d : jl 0xa9b8c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a9bda : jl 0xa9c29 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000bf650 : jl 0xbf6a7 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c3a39 : jl 0xc3a64 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c8700 : jl 0xc872e ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000e10b9 : jl 0xe10e5 ; add rax, rdx ; jmp rax
0x00000000000e25d0 : jl 0xe25fb ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e32e7 : jl 0xe3316 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000f35cd : jl 0xf35fb ; mov qword ptr [r14], rbx ; call 0x1f8b0
0x00000000000f37b5 : jl 0xf37e0 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f6a94 : jl 0xf6ac0 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f6a94 : jl 0xf6ac1 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000fa57f : jl 0xfa587 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000010c98c : jle 0x10c9be ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000001370d8 : jle 0x1370f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149b26 : jle 0x149a41 ; movsxd rax, ecx ; ret
0x0000000000149d6a : jle 0x149cab ; ret
0x000000000017367c : jle 0x173678 ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b0
0x0000000000187bc1 : jle 0x187bb8 ; call qword ptr [rdi]
0x0000000000187bc1 : jle 0x187bbc ; call qword ptr [rdi]
0x00000000001885f0 : jle 0x188646 ; hlt ; jmp qword ptr [rdx]
0x0000000000189c71 : jle 0x189c6b ; jmp rdx
0x0000000000189c79 : jle 0x189c73 ; jmp rdx
0x0000000000189c78 : jle 0x189c74 ; jmp rdx
0x0000000000195299 : jle 0x195299 ; call rax
0x0000000000195319 : jle 0x19531d ; jmp qword ptr [rdx + 0x22fffc7d]
0x000000000019619d : jle 0x1961a5 ; add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x000000000019d411 : jle 0x19d3fe ; jmp qword ptr [rsi]
0x00000000001a5c31 : jle 0x1a5c23 ; jmp qword ptr [rcx]
0x00000000001abe01 : jle 0x1abe0f ; ret
0x000000000002a6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000005c4f6 : jle 0x5c567 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000000684ec : jle 0x68479 ; ret
0x000000000008abee : jle 0x8abf7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008abee : jle 0x8abf8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000cc64d : jle 0xcc65b ; ret
0x00000000000cce59 : jle 0xcce5f ; add byte ptr [rax], al ; ret
0x0000000000101272 : jmp 0x101238
0x00000000001019a9 : jmp 0x10190a
0x000000000010b56e : jmp 0x10b596
0x000000000010bd14 : jmp 0x10ba61
0x000000000010bd44 : jmp 0x10bc7c
0x000000000010d447 : jmp 0x10d36e
0x000000000010db60 : jmp 0x10db26
0x0000000000111fa9 : jmp 0x111f6f
0x0000000000117ab1 : jmp 0x117a76
0x00000000001197e2 : jmp 0x1195a9
0x0000000000119ba2 : jmp 0x119979
0x000000000011b084 : jmp 0x11b0ad
0x000000000011b0dc : jmp 0x11b107
0x0000000000125e8c : jmp 0x125e51
0x00000000001316cf : jmp 0x131695
0x0000000000135e31 : jmp 0x135e01
0x0000000000136586 : jmp 0x1365ae
0x000000000013797e : jmp 0x137988
0x000000000013c6cc : jmp 0x13c23c
0x00000000001419a0 : jmp 0x14168c
0x0000000000174c92 : jmp 0x174c94
0x0000000000174c96 : jmp 0x174c98
0x0000000000174ca6 : jmp 0x174ca8
0x0000000000174caa : jmp 0x174cac
0x0000000000181286 : jmp 0x181288
0x000000000018128a : jmp 0x18128c
0x0000000000181356 : jmp 0x181358
0x000000000018135a : jmp 0x18135c
0x000000000018135e : jmp 0x181360
0x0000000000181362 : jmp 0x181364
0x0000000000181366 : jmp 0x181368
0x000000000018136a : jmp 0x18136c
0x000000000018136e : jmp 0x181370
0x0000000000181372 : jmp 0x181374
0x0000000000181376 : jmp 0x181378
0x000000000018137a : jmp 0x18137c
0x00000000001828aa : jmp 0x1828e9
0x00000000001835e9 : jmp 0x1835bc
0x00000000001845e0 : jmp 0x184574
0x00000000001845df : jmp 0x184575
0x00000000001965b2 : jmp 0x1965b4
0x00000000001966aa : jmp 0x1966ac
0x00000000001966a9 : jmp 0x1966ad
0x00000000001966a8 : jmp 0x1966ae
0x00000000001966fa : jmp 0x1966fc
0x0000000000196722 : jmp 0x196724
0x000000000019fac2 : jmp 0x19fac4
0x000000000019fb12 : jmp 0x19fb14
0x000000000019fe62 : jmp 0x19fe64
0x000000000019ff1a : jmp 0x19ff1c
0x000000000019ff9a : jmp 0x19ff9c
0x000000000019cdda : jmp 0x1b90e0
0x0000000000173610 : jmp 0x1f8aa
0x000000000001fb07 : jmp 0x1facd
0x0000000000020496 : jmp 0x2045b
0x000000000002666c : jmp 0x2627e
0x0000000000026a1b : jmp 0x2682e
0x000000000002cdd1 : jmp 0x2ce43
0x000000000003168a : jmp 0x30ed6
0x0000000000037b81 : jmp 0x37b8b
0x00000000000038b3 : jmp 0x3879
0x000000000003af85 : jmp 0x39c63093
0x0000000000099a5f : jmp 0x440b5ce9
0x0000000000048392 : jmp 0x483e4
0x00000000000e7690 : jmp 0x48d0ffe0
0x0000000000132fe2 : jmp 0x48d2f272
0x00000000000701a2 : jmp 0x48f58af5
0x0000000000049f72 : jmp 0x49fc4
0x000000000004f267 : jmp 0x4f243
0x000000000015a37a : jmp 0x4f94b378
0x000000000015a379 : jmp 0x4f94b379
0x000000000015ce4a : jmp 0x4f94de48
0x000000000015ce49 : jmp 0x4f94de49
0x000000000015f96a : jmp 0x4f950968
0x000000000015f969 : jmp 0x4f950969
0x0000000000056a95 : jmp 0x56320
0x000000000005b042 : jmp 0x5a1a8
0x000000000005f811 : jmp 0x5baf2
0x000000000005c46c : jmp 0x5c431
0x0000000000060852 : jmp 0x5ca99
0x000000000005fb8a : jmp 0x5fb4f
0x000000000006045e : jmp 0x60423
0x0000000000062809 : jmp 0x627ce
0x0000000000067498 : jmp 0x636fe
0x0000000000065b8b : jmp 0x63702
0x0000000000068daa : jmp 0x64b91
0x0000000000065aca : jmp 0x64bf7
0x0000000000065ac9 : jmp 0x64bf8
0x000000000006597b : jmp 0x653d3
0x0000000000069613 : jmp 0x6585f
0x0000000000069f5b : jmp 0x661e6
0x0000000000072feb : jmp 0x72fb1
0x0000000000072fea : jmp 0x72fb2
0x0000000000116b24 : jmp 0x76d3a474
0x0000000000116cd7 : jmp 0x76d3a627
0x000000000007b5de : jmp 0x7b5c0
0x0000000000195d3a : jmp 0x842a47
0x0000000000195d7a : jmp 0x852a87
0x0000000000085955 : jmp 0x8597d
0x0000000000087b32 : jmp 0x87af8
0x0000000000087caa : jmp 0x87c6f
0x0000000000195eaa : jmp 0x88f3b7
0x0000000000088fa4 : jmp 0x88f6a
0x00000000000890f8 : jmp 0x890bd
0x000000000009559b : jmp 0x953f1
0x0000000000095c4c : jmp 0x95c12
0x0000000000095d98 : jmp 0x95d5d
0x0000000000095f42 : jmp 0x95f07
0x0000000000099d94 : jmp 0x99d9e
0x000000000009a270 : jmp 0x9a27a
0x000000000009ce12 : jmp 0x9c7ba
0x000000000009d84c : jmp 0x9c842
0x000000000009c931 : jmp 0x9c85f
0x000000000009d84d : jmp 0x9d843
0x00000000000a977e : jmp 0xa9744
0x00000000000a984f : jmp 0xa9815
0x00000000000a98be : jmp 0xa9884
0x00000000000ad424 : jmp 0xad207
0x00000000000ad833 : jmp 0xad667
0x00000000000afff2 : jmp 0xafadd
0x00000000000b6c64 : jmp 0xb6cb1
0x00000000000beb65 : jmp 0xbad93
0x00000000000be63b : jmp 0xbe600
0x00000000000be9f8 : jmp 0xbea0a
0x00000000000bf57c : jmp 0xbf36d
0x00000000000c199e : jmp 0xc17f0
0x00000000000c7910 : jmp 0xc78d6
0x00000000000c9c07 : jmp 0xc9ad6
0x00000000000cc665 : jmp 0xcee2b
0x00000000000d45f1 : jmp 0xd45eb
0x00000000000d70cb : jmp 0xd7091
0x00000000000e0d2d : jmp 0xe0d28
0x0000000000106dc4 : jmp 0xf106dcd
0x00000000000467dd : jmp 0xfc6fef4
0x00000000000fea71 : jmp 0xfea78
0x00000000000ffbe4 : jmp 0xffc0e
0x0000000000136b8a : jmp 0xffffffff80d662a2
0x0000000000136e11 : jmp 0xffffffff80d66529
0x0000000000003186 : jmp 0xffffffff88c2d331
0x00000000000bd928 : jmp 0xffffffffbece6278
0x0000000000129e32 : jmp 0xffffffffc098723d
0x00000000000d9a42 : jmp 0xffffffffc296db53
0x0000000000138d76 : jmp 0xffffffffc29d8d7b
0x00000000000aafc3 : jmp 0xffffffffc30aafcc
0x0000000000048a91 : jmp 0xffffffffc31413e6
0x0000000000099193 : jmp 0xffffffffc332da9d
0x0000000000035bae : jmp 0xffffffffc38c5bc4
0x000000000013fd23 : jmp 0xffffffffff142572
0x00000000000acabb : jmp 0xfffffffffffa540c
0x00000000000fd9cb : jmp qword ptr [r8]
0x00000000001952cb : jmp qword ptr [rax + 0x16fffc77]
0x0000000000194353 : jmp qword ptr [rax + 0x20fffb74]
0x000000000019435b : jmp qword ptr [rax + 0x20fffb77]
0x0000000000194363 : jmp qword ptr [rax + 0x20fffb7a]
0x000000000019436b : jmp qword ptr [rax + 0x20fffb7d]
0x0000000000194373 : jmp qword ptr [rax + 0x20fffb80]
0x000000000019437b : jmp qword ptr [rax + 0x20fffb83]
0x0000000000194383 : jmp qword ptr [rax + 0x20fffb86]
0x0000000000195013 : jmp qword ptr [rax + 0x20fffc35]
0x0000000000194fd7 : jmp qword ptr [rax + 0x20fffc36]
0x000000000019501b : jmp qword ptr [rax + 0x20fffc38]
0x0000000000194fdf : jmp qword ptr [rax + 0x20fffc39]
0x0000000000195023 : jmp qword ptr [rax + 0x20fffc3b]
0x0000000000194fe7 : jmp qword ptr [rax + 0x20fffc3c]
0x000000000019502b : jmp qword ptr [rax + 0x20fffc3e]
0x0000000000194fef : jmp qword ptr [rax + 0x20fffc3f]
0x0000000000195033 : jmp qword ptr [rax + 0x20fffc41]
0x0000000000194ff7 : jmp qword ptr [rax + 0x20fffc42]
0x000000000019503b : jmp qword ptr [rax + 0x20fffc44]
0x0000000000194fff : jmp qword ptr [rax + 0x20fffc45]
0x0000000000195043 : jmp qword ptr [rax + 0x20fffc47]
0x0000000000195007 : jmp qword ptr [rax + 0x20fffc48]
0x0000000000194f7b : jmp qword ptr [rax + 0x20fffc53]
0x0000000000194f73 : jmp qword ptr [rax + 0x20fffc54]
0x0000000000194f6b : jmp qword ptr [rax + 0x20fffc55]
0x0000000000194f63 : jmp qword ptr [rax + 0x20fffc56]
0x0000000000194f5b : jmp qword ptr [rax + 0x20fffc57]
0x0000000000194f93 : jmp qword ptr [rax + 0x20fffc58]
0x0000000000195953 : jmp qword ptr [rax + 0x20fffca4]
0x000000000018856f : jmp qword ptr [rax + 0x22fff44c]
0x0000000000186e2f : jmp qword ptr [rax + 0x24]
0x000000000018899f : jmp qword ptr [rax + 0x26fff452]
0x0000000000186e3f : jmp qword ptr [rax + 0x29]
0x0000000000186e4f : jmp qword ptr [rax + 0x2e]
0x0000000000186e5f : jmp qword ptr [rax + 0x33]
0x00000000001942c3 : jmp qword ptr [rax + 0x40fffb33]
0x0000000000195ce3 : jmp qword ptr [rax + rbp*2 + 0x68f40000]
0x0000000000186e63 : jmp qword ptr [rax - 0x1f000fcc]
0x0000000000186e53 : jmp qword ptr [rax - 0x1f000fd1]
0x0000000000186e43 : jmp qword ptr [rax - 0x1f000fd6]
0x0000000000186e33 : jmp qword ptr [rax - 0x1f000fdb]
0x00000000001945ff : jmp qword ptr [rax - 0x2e00024a]
0x00000000001945df : jmp qword ptr [rax - 0x2e00024b]
0x0000000000187407 : jmp qword ptr [rax - 0x2f000dff]
0x000000000018721b : jmp qword ptr [rax - 0x2f000e15]
0x000000000018b587 : jmp qword ptr [rax - 0x4700059e]
0x000000000004606e : jmp qword ptr [rax]
0x000000000019951b : jmp qword ptr [rbx + rax*8]
0x000000000005ec58 : jmp qword ptr [rbx + rcx*4 + 1]
0x0000000000002563 : jmp qword ptr [rbx]
0x0000000000188843 : jmp qword ptr [rcx + 0x22fff452]
0x0000000000194403 : jmp qword ptr [rcx + 0x41fffda8]
0x000000000018940b : jmp qword ptr [rcx]
0x000000000019aa53 : jmp qword ptr [rdi + rdx*2 + 2]
0x000000000019aa5b : jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00000000000f3cb3 : jmp qword ptr [rdi]
0x000000000019533b : jmp qword ptr [rdx + 0x22fffc79]
0x0000000000195333 : jmp qword ptr [rdx + 0x22fffc7a]
0x000000000019532b : jmp qword ptr [rdx + 0x22fffc7b]
0x0000000000195323 : jmp qword ptr [rdx + 0x22fffc7c]
0x000000000019531b : jmp qword ptr [rdx + 0x22fffc7d]
0x00000000001994db : jmp qword ptr [rdx + rax*8 + 1]
0x00000000000f3c32 : jmp qword ptr [rdx]
0x00000000001886f3 : jmp qword ptr [rip + 0x22fff454]
0x0000000000194b8f : jmp qword ptr [rsi + 0x16fffc5b]
0x0000000000039f01 : jmp qword ptr [rsi + 0xf]
0x00000000000dbacd : jmp qword ptr [rsi - 0x70]
0x000000000011c30c : jmp qword ptr [rsi]
0x000000000019985b : jmp qword ptr [rsp + rdx*8 + 1]
0x0000000000001b62 : jmp r10
0x00000000001503cd : jmp r9
0x00000000000bf506 : jmp rax
0x00000000001a088b : jmp rbx
0x000000000002be4a : jmp rcx
0x000000000006caa4 : jmp rdi
0x0000000000001b63 : jmp rdx
0x000000000002e8f4 : jmp rsi
0x0000000000002a71 : jmp rsp
0x0000000000102558 : jne 0x102540 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010514a : jne 0x105148 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001051ba : jne 0x1051b8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000010b56c : jne 0x10b57e ; jmp 0x10b598
0x000000000011213e : jne 0x112177 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000113e55 : jne 0x113e69 ; cmp qword ptr [rdi], 0 ; je 0x113e71 ; ret
0x0000000000113ec8 : jne 0x113ed7 ; mov eax, 1 ; ret
0x0000000000113ef8 : jne 0x113f04 ; xor eax, eax ; ret
0x0000000000113f28 : jne 0x113f34 ; xor eax, eax ; ret
0x0000000000113f58 : jne 0x113f64 ; xor eax, eax ; ret
0x0000000000113f88 : jne 0x113f94 ; xor eax, eax ; ret
0x0000000000113fb8 : jne 0x113fc4 ; xor eax, eax ; ret
0x0000000000113fe8 : jne 0x113ff4 ; xor eax, eax ; ret
0x0000000000114018 : jne 0x114024 ; xor eax, eax ; ret
0x0000000000114048 : jne 0x114054 ; xor eax, eax ; ret
0x0000000000114078 : jne 0x114084 ; xor eax, eax ; ret
0x00000000001140a8 : jne 0x1140b4 ; xor eax, eax ; ret
0x00000000001140d8 : jne 0x1140e4 ; xor eax, eax ; ret
0x0000000000114108 : jne 0x114114 ; xor eax, eax ; ret
0x0000000000114138 : jne 0x114144 ; xor eax, eax ; ret
0x0000000000114168 : jne 0x114174 ; xor eax, eax ; ret
0x0000000000114198 : jne 0x1141a4 ; xor eax, eax ; ret
0x00000000001141c8 : jne 0x1141d4 ; xor eax, eax ; ret
0x00000000001141f8 : jne 0x114204 ; xor eax, eax ; ret
0x0000000000114228 : jne 0x114234 ; xor eax, eax ; ret
0x0000000000114258 : jne 0x114264 ; xor eax, eax ; ret
0x0000000000114288 : jne 0x114294 ; xor eax, eax ; ret
0x00000000001142e8 : jne 0x1142f4 ; xor eax, eax ; ret
0x0000000000114318 : jne 0x114324 ; xor eax, eax ; ret
0x0000000000114348 : jne 0x114354 ; xor eax, eax ; ret
0x0000000000114378 : jne 0x114384 ; xor eax, eax ; ret
0x00000000001143a8 : jne 0x1143b4 ; xor eax, eax ; ret
0x00000000001143d8 : jne 0x1143e4 ; xor eax, eax ; ret
0x0000000000114408 : jne 0x114414 ; xor eax, eax ; ret
0x0000000000114438 : jne 0x114444 ; xor eax, eax ; ret
0x0000000000114468 : jne 0x114474 ; xor eax, eax ; ret
0x00000000001144b2 : jne 0x1144a9 ; pop rdx ; pop r10 ; ret
0x00000000001145a5 : jne 0x1145b3 ; ret
0x00000000001147b4 : jne 0x114793 ; ret
0x00000000001147ef : jne 0x1147e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000114947 : jne 0x1148e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000114f54 : jne 0x114f3f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000114f83 : jne 0x114f7c ; xor eax, eax ; leave ; ret
0x0000000000115984 : jne 0x11592e ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000116cfa : jne 0x116d10 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000116fc6 : jne 0x116f7a ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011b082 : jne 0x11b095 ; jmp 0x11b0af
0x000000000011b0da : jne 0x11b0ef ; jmp 0x11b109
0x000000000011f193 : jne 0x11f183 ; pop rbx ; ret
0x00000000001229cc : jne 0x1229a7 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001231f4 : jne 0x123244 ; mov eax, r8d ; ret
0x0000000000125a9d : jne 0x1259ea ; ret
0x0000000000127b8c : jne 0x127b92 ; ret
0x0000000000127bcc : jne 0x127bc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ccfd : jne 0x12cd48 ; mov dword ptr [rsi], 0 ; ret
0x000000000012d5b5 : jne 0x12d5c8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012d6bd : jne 0x12d657 ; xor eax, eax ; pop rbx ; ret
0x0000000000132458 : jne 0x132462 ; ret
0x0000000000136584 : jne 0x136596 ; jmp 0x1365b0
0x0000000000138337 : jne 0x138323 ; pop rbx ; ret
0x00000000001385b8 : jne 0x1385c2 ; ret
0x0000000000139eb3 : jne 0x139eaa ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013b892 : jne 0x13b8a7 ; mov eax, 1 ; ret
0x000000000013b8d2 : jne 0x13b8e7 ; mov eax, 1 ; ret
0x00000000001402bc : jne 0x1402cd ; xor eax, eax ; pop rbx ; ret
0x0000000000142a9b : jne 0x142a7e ; add rsp, 0x48 ; ret
0x0000000000142a7d : jne 0x142ab0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000142b45 : jne 0x142b58 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000142bb8 : jne 0x142bd6 ; add rsp, 0x38 ; ret
0x00000000001437c8 : jne 0x1437d4 ; xor eax, eax ; ret
0x00000000001437f8 : jne 0x143804 ; xor eax, eax ; ret
0x0000000000143828 : jne 0x143834 ; xor eax, eax ; ret
0x0000000000143858 : jne 0x143864 ; xor eax, eax ; ret
0x0000000000143888 : jne 0x143894 ; xor eax, eax ; ret
0x00000000001438b8 : jne 0x1438c4 ; xor eax, eax ; ret
0x0000000000167c81 : jne 0x168236 ; ret
0x000000000016ee1d : jne 0x16ee47 ; xor eax, eax ; ret
0x000000000016e411 : jne 0x16ee4b ; xor eax, eax ; ret
0x000000000016e439 : jne 0x16ee57 ; xor eax, eax ; ret
0x000000000016fc5d : jne 0x16fc87 ; xor eax, eax ; ret
0x000000000016fa41 : jne 0x16fc8b ; xor eax, eax ; ret
0x000000000016fc91 : jne 0x16fc9a ; xor eax, eax ; ret
0x000000000016fa67 : jne 0x16fc9e ; xor eax, eax ; ret
0x000000000016fda5 : jne 0x16fd36 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016fd77 : jne 0x16fd36 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016fd76 : jne 0x16fd37 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000171504 : jne 0x171718 ; xor eax, eax ; ret
0x0000000000171709 : jne 0x171729 ; xor eax, eax ; ret
0x00000000001715b1 : jne 0x17172d ; xor eax, eax ; ret
0x0000000000171721 : jne 0x17172e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000171d36 : jne 0x171d44 ; xor eax, eax ; ret
0x0000000000171c0d : jne 0x171d46 ; ret
0x00000000001734fd : jne 0x1734ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173550 : jne 0x173530 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001735f8 : jne 0x173620 ; mov rdi, qword ptr [r13] ; call 0x1f8b0
0x000000000017368d : jne 0x17367d ; pop rbx ; ret
0x0000000000173735 : jne 0x17371b ; pop rbx ; ret
0x00000000001738a8 : jne 0x1738b3 ; ret
0x0000000000173989 : jne 0x17397c ; pop rbx ; ret
0x0000000000198655 : jne 0x19865e ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00000000001a6a21 : jne 0x1a6a14 ; jmp qword ptr [rax]
0x0000000000033bd4 : jne 0x33bb2 ; ret
0x0000000000034ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x0000000000034e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x0000000000035308 : jne 0x35313 ; ret
0x0000000000003796 : jne 0x3774 ; ret 0x975
0x000000000003a61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a6cb : jne 0x3a6d3 ; pop rbx ; ret
0x0000000000047058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x0000000000048061 : jne 0x48047 ; mov eax, 1 ; ret
0x0000000000048087 : jne 0x4807c ; xor eax, eax ; ret
0x00000000000481f9 : jne 0x481df ; mov eax, 1 ; ret
0x000000000004821f : jne 0x48214 ; xor eax, eax ; ret
0x00000000000484c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x0000000000048b7f : jne 0x48b76 ; mov rax, rdx ; ret
0x000000000004a6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x000000000004a775 : jne 0x4a755 ; mov rax, rsi ; ret
0x000000000006acc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000071c01 : jne 0x71bf3 ; ret
0x000000000007469c : jne 0x746a3 ; pop rbx ; ret
0x0000000000078160 : jne 0x78176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a395 : jne 0x7a3a2 ; ret
0x000000000007af41 : jne 0x7af33 ; ret
0x000000000007bc61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bfd2 : jne 0x7bfbd ; pop rbx ; ret
0x000000000007c00c : jne 0x7c005 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c846 : jne 0x7c83b ; ret
0x000000000007d8bf : jne 0x7d891 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007d8d7 : jne 0x7d908 ; xor edi, edi ; call qword ptr [r15]
0x00000000000833dc : jne 0x833a3 ; ret
0x0000000000085953 : jne 0x85965 ; jmp 0x8597f
0x0000000000087b8f : jne 0x87b45 ; xor eax, eax ; pop rbx ; ret
0x0000000000088a21 : jne 0x88a13 ; ret
0x0000000000088acb : jne 0x88ac3 ; ret
0x000000000008914b : jne 0x8915d ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008ad13 : jne 0x8ad1e ; xor rax, rax ; ret
0x000000000008afa7 : jne 0x8afb9 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008cc5e : jne 0x8cc24 ; add rsp, 8 ; ret
0x000000000008cc81 : jne 0x8cc96 ; add rsp, 8 ; ret
0x000000000008df69 : jne 0x8dfc5 ; xor rax, rax ; ret
0x000000000008df29 : jne 0x8dfe9 ; xor rax, rax ; ret
0x000000000008e011 : jne 0x8e024 ; lea rax, qword ptr [rip + 0x26] ; ret
0x000000000008e73a : jne 0x8e723 ; ret
0x000000000008e923 : jne 0x8e80f ; mov rax, rdi ; ret
0x000000000008e879 : jne 0x8e865 ; mov rax, rdi ; ret
0x000000000008ee37 : jne 0x8ee49 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008ee9a : jne 0x8eeac ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000091127 : jne 0x91139 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000009118a : jne 0x9119c ; lea rax, qword ptr [rip + 0xd] ; ret
0x000000000009388c : jne 0x9389f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00000000000939f8 : jne 0x938d0 ; ret
0x0000000000093939 : jne 0x93923 ; ret
0x0000000000095e96 : jne 0x95e81 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095f40 : jne 0x95f4f ; jmp 0x95f09
0x00000000000967d5 : jne 0x967cd ; xor eax, eax ; pop rbx ; ret
0x00000000000967a7 : jne 0x967dd ; mov rax, rdi ; pop rbx ; ret
0x000000000009687d : jne 0x96874 ; xor eax, eax ; ret
0x000000000009696d : jne 0x96964 ; pop rbx ; pop rbp ; ret
0x000000000009ce10 : jne 0x9ce09 ; jmp 0x9c7bc
0x000000000009d84a : jne 0x9d843 ; jmp 0x9c844
0x000000000009df36 : jne 0x9df2b ; ret
0x000000000009df7a : jne 0x9df6b ; ret
0x000000000009dfd4 : jne 0x9dfb3 ; ret
0x000000000009e07a : jne 0x9e068 ; cmp r8d, ecx ; je 0x9e068 ; ret
0x000000000009e0b9 : jne 0x9e0ac ; xor eax, eax ; ret
0x000000000009e112 : jne 0x9e0f4 ; xor eax, eax ; ret
0x000000000009e172 : jne 0x9e165 ; mov qword ptr [rdx], rcx ; ret
0x000000000009e22b : jne 0x9e220 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009e2a9 : jne 0x9e291 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009e4dd : jne 0x9e568 ; xor eax, eax ; ret
0x000000000009e51a : jne 0x9e594 ; xor eax, eax ; ret
0x000000000009ec5c : jne 0x9ec46 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a59ca : jne 0xa6286 ; ret
0x00000000000a706d : jne 0xa7a96 ; ret
0x00000000000a95b1 : jne 0xa95a2 ; ret
0x00000000000a9661 : jne 0xa9652 ; ret
0x00000000000a97d1 : jne 0xa97c6 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a9921 : jne 0xa9916 ; sub rax, 1 ; ret
0x00000000000aa267 : jne 0xaa25b ; ret
0x00000000000ab036 : jne 0xab0b2 ; ret
0x00000000000aaf5f : jne 0xab0b6 ; ret
0x00000000000aaf3e : jne 0xab0b8 ; xor eax, eax ; ret
0x00000000000ab0e1 : jne 0xab0f4 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000000ab4a3 : jne 0xab46b ; ret
0x00000000000ab4e6 : jne 0xab4d9 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ab5b9 : jne 0xab5a5 ; xor eax, eax ; ret
0x00000000000ab99b : jne 0xab9f6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000aba73 : jne 0xaba43 ; ret
0x00000000000aba5d : jne 0xaba53 ; ret
0x00000000000abb2c : jne 0xabb24 ; xor eax, eax ; ret
0x00000000000abb88 : jne 0xabb66 ; mov rax, rdi ; ret
0x00000000000abcb1 : jne 0xabcc4 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000abd65 : jne 0xabd72 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000abda3 : jne 0xabd9b ; ret
0x00000000000acedb : jne 0xace96 ; mov rax, rdx ; ret
0x00000000000acf1c : jne 0xacf13 ; ret
0x00000000000ba673 : jne 0xba650 ; ret
0x00000000000ba6a4 : jne 0xba69b ; ret
0x00000000000bf269 : jne 0xbf281 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000ccde1 : jne 0xccdae ; ret
0x00000000000cce27 : jne 0xccdb2 ; mov eax, 0x7d00 ; ret
0x00000000000ccee9 : jne 0xccf12 ; ret
0x00000000000ccf53 : jne 0xccf16 ; mov eax, 0x40 ; ret
0x00000000000ccff0 : jne 0xccfcf ; xor eax, eax ; ret
0x00000000000ccfec : jne 0xcd068 ; add byte ptr [rax], al ; jne 0xccfd3 ; xor eax, eax ; ret
0x00000000000d0a20 : jne 0xd0a04 ; ret
0x00000000000d0a58 : jne 0xd0a1d ; mov eax, 1 ; ret
0x00000000000d0a68 : jne 0xd0a33 ; mov eax, 1 ; ret
0x00000000000d0b2e : jne 0xd0aef ; mov eax, 1 ; ret
0x00000000000d0b46 : jne 0xd0b0c ; mov eax, 1 ; ret
0x00000000000d0cbe : jne 0xd0cb0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d676d : jne 0xd66bd ; pop rbx ; ret
0x00000000000d676c : jne 0xd66be ; pop rbx ; ret
0x00000000000d671a : jne 0xd6719 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66bf ; pop rbx ; ret
0x00000000000d70c9 : jne 0xd70a3 ; jmp 0xd7093
0x00000000000eed3b : jne 0xeed29 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f6c61 : jne 0xf6ce9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000faaef : jne 0xfaa96 ; mov edi, ebp ; call 0xf6d06
0x00000000000fd511 : jne 0xfd4e5 ; xor eax, eax ; pop rbx ; ret
0x00000000000fd6d2 : jne 0xfd6a5 ; xor eax, eax ; pop rbx ; ret
0x00000000000ffbe2 : jne 0xffbf6 ; jmp 0xffc10
0x000000000012adcb : jno 0x12ada1 ; sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000016e6ce : jno 0x16e6dd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000174c95 : jno 0x174c84 ; jmp rax
0x0000000000174ca9 : jno 0x174c98 ; call rax
0x0000000000194530 : jno 0x1944eb ; std ; call rcx
0x0000000000195d19 : jno 0x195d06 ; jmp rsp
0x000000000019c0d1 : jno 0x19c0d2 ; jmp qword ptr [rdi]
0x00000000001a02e6 : jno 0x1a02f4 ; ret
0x00000000001a02e6 : jno 0x1a02fa ; ret
0x00000000001a208d : jno 0x1a2095 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00000000001b0009 : jno 0x1b0002 ; jmp qword ptr [rcx]
0x00000000001b0008 : jno 0x1b0003 ; jmp qword ptr [rcx]
0x00000000001b0039 : jno 0x1b0032 ; jmp qword ptr [rcx]
0x00000000001b0051 : jno 0x1b004a ; jmp qword ptr [rcx]
0x00000000001b2045 : jno 0x1b204e ; add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000021d7 : jno 0x2224 ; ret 0x1dd4
0x0000000000003957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000048984 : jno 0x489d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000071271 : jno 0x7127f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008e5e9 : jno 0x8e5fd ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008e5e8 : jno 0x8e5fe ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008e5e9 : jno 0x8e5ff ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008e5e8 : jno 0x8e600 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000009ef30 : jno 0x9ef39 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009f16a : jno 0x9f173 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009f2d1 : jno 0x9f2e2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009f436 : jno 0x9f4ba ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000009f683 : jno 0x9f68c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009f8bd : jno 0x9f8c6 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fa24 : jno 0x9fa35 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009fb89 : jno 0x9fc0d ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000009fdd0 : jno 0x9fdd9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a000a : jno 0xa0013 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a0171 : jno 0xa0182 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a02d6 : jno 0xa035a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000abd63 : jno 0xabd72 ; jne 0xabd74 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000abd69 : jno 0xabd76 ; ret
0x00000000000bf4ff : jno 0xbf48d ; or al, 0 ; add rax, rdi ; jmp rax
0x00000000000c09d5 : jno 0xc0962 ; ret 0xe283
0x00000000000c0a62 : jno 0xc09ef ; ret 0xe283
0x00000000000c0b2a : jno 0xc0ab7 ; ret 0xe283
0x00000000000c0b9a : jno 0xc0b27 ; ret 0xe283
0x00000000000c0ed3 : jno 0xc0e60 ; ret 0xe283
0x00000000000c0f4a : jno 0xc0ed7 ; ret 0xe283
0x00000000000c119a : jno 0xc1127 ; ret 0xe283
0x00000000000c122a : jno 0xc11b7 ; ret 0xe283
0x00000000000c1aa5 : jno 0xc1a9f ; ret
0x00000000000c2019 : jno 0xc2013 ; ret
0x00000000000c2068 : jno 0xc2062 ; ret
0x00000000000c2153 : jno 0xc20e0 ; ret 0xe283
0x00000000000c22eb : jno 0xc2278 ; ret 0xe283
0x00000000000c237e : jno 0xc230b ; ret 0xe283
0x00000000000e2428 : jno 0xe242e ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f18e : jnp 0x11f1e0 ; test rdi, rdi ; jne 0x11f188 ; pop rbx ; ret
0x0000000000134423 : jnp 0x13448f ; call rax
0x0000000000134e43 : jnp 0x134e9f ; call rax
0x0000000000181284 : jnp 0x1812ab ; jmp 0x18128a
0x00000000001830c5 : jnp 0x183082 ; ret
0x0000000000189351 : jnp 0x18934a ; call rsi
0x0000000000189350 : jnp 0x18934b ; call rsi
0x0000000000189ded : jnp 0x189de7 ; jmp qword ptr [rbx]
0x00000000001952b1 : jnp 0x1952b1 ; call rax
0x000000000019532d : jnp 0x19532d ; jmp qword ptr [rdx]
0x0000000000195331 : jnp 0x195335 ; jmp qword ptr [rdx + 0x22fffc7a]
0x00000000001954ad : jnp 0x1954ad ; jmp rax
0x000000000019878d : jnp 0x198796 ; add byte ptr [rsp - 0xa], dl ; call rsp
0x000000000019b601 : jnp 0x19b602 ; jmp qword ptr [rdx]
0x00000000001b05e1 : jnp 0x1b05da ; jmp qword ptr [rcx]
0x00000000001b05f9 : jnp 0x1b05f2 ; jmp qword ptr [rcx]
0x00000000001b05f8 : jnp 0x1b05f3 ; jmp qword ptr [rcx]
0x00000000001b0611 : jnp 0x1b060a ; jmp qword ptr [rcx]
0x00000000001b0629 : jnp 0x1b0622 ; jmp qword ptr [rcx]
0x0000000000047055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000fbb58 : jnp 0x481bdfab ; add esp, 0x18 ; ret
0x0000000000083561 : jnp 0x83563 ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000bdfb0 : jnp 0xbdfeb ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc9
0x00000000000f3f81 : jnp 0xf3fdb ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x000000000012745d : jns 0x12746a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000001821ce : jns 0x182164 ; ret 0xf869
0x00000000001821cd : jns 0x182165 ; ret 0xf869
0x00000000001845de : jns 0x184635 ; jmp 0x184576
0x0000000000187a79 : jns 0x187a70 ; jmp rdx
0x0000000000187a7d : jns 0x187a74 ; jmp rdx
0x0000000000187a81 : jns 0x187a78 ; jmp rdx
0x0000000000187a85 : jns 0x187a7c ; jmp rdx
0x0000000000187a89 : jns 0x187a80 ; jmp rdx
0x0000000000187a8d : jns 0x187a84 ; jmp rdx
0x0000000000187a91 : jns 0x187a88 ; jmp rdx
0x0000000000187a95 : jns 0x187a8c ; jmp rdx
0x0000000000187a99 : jns 0x187a90 ; jmp rdx
0x0000000000187a9d : jns 0x187a94 ; jmp rdx
0x0000000000187aa1 : jns 0x187a98 ; jmp rdx
0x0000000000187aa5 : jns 0x187a9c ; jmp rdx
0x0000000000187aa9 : jns 0x187aa0 ; jmp rdx
0x0000000000187aad : jns 0x187aa4 ; jmp rdx
0x0000000000187ab1 : jns 0x187aa8 ; jmp rdx
0x0000000000187ab5 : jns 0x187aac ; jmp rdx
0x0000000000187ab9 : jns 0x187ab0 ; jmp rdx
0x0000000000187abd : jns 0x187ab4 ; jmp rdx
0x0000000000187ac1 : jns 0x187ab8 ; jmp rdx
0x0000000000187ac5 : jns 0x187abc ; jmp rdx
0x0000000000187ac9 : jns 0x187ac0 ; jmp rdx
0x0000000000187acd : jns 0x187ac4 ; jmp rdx
0x0000000000187ad1 : jns 0x187ac8 ; jmp rdx
0x0000000000187ad5 : jns 0x187acc ; jmp rdx
0x0000000000187ad9 : jns 0x187ad0 ; jmp rdx
0x0000000000187add : jns 0x187ad4 ; jmp rdx
0x0000000000187b09 : jns 0x187b00 ; jmp rdx
0x0000000000187b0d : jns 0x187b04 ; jmp rdx
0x0000000000187b11 : jns 0x187b0c ; push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x0000000000187b21 : jns 0x187b18 ; jmp rdx
0x0000000000187b4d : jns 0x187b44 ; jmp rdx
0x0000000000187b51 : jns 0x187b48 ; jmp rdx
0x0000000000187b55 : jns 0x187b4c ; jmp rdx
0x0000000000187b59 : jns 0x187b50 ; jmp rdx
0x0000000000187b5d : jns 0x187b54 ; jmp rdx
0x0000000000187b9d : jns 0x187b98 ; dec dword ptr [rbx - 0x7e] ; jmp rdx
0x0000000000187f34 : jns 0x187ee3 ; jmp qword ptr [rdi]
0x0000000000188770 : jns 0x1887c7 ; hlt ; jmp qword ptr [rdx]
0x0000000000189cc9 : jns 0x189cc3 ; jmp qword ptr [rdx]
0x0000000000189cd1 : jns 0x189ccb ; jmp qword ptr [rdx]
0x0000000000189d39 : jns 0x189d33 ; jmp qword ptr [rdx]
0x0000000000189d38 : jns 0x189d34 ; jmp qword ptr [rdx]
0x0000000000189d6d : jns 0x189d67 ; jmp qword ptr [rdx]
0x0000000000194361 : jns 0x194364 ; jmp qword ptr [rax + 0x20fffb7a]
0x000000000019533d : jns 0x19533d ; jmp qword ptr [rdx]
0x0000000000195401 : jns 0x195405 ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00000000001954bd : jns 0x1954bd ; jmp rax
0x000000000019d211 : jns 0x19d1fe ; jmp qword ptr [rcx]
0x000000000019d210 : jns 0x19d1ff ; jmp qword ptr [rcx]
0x000000000019d241 : jns 0x19d22e ; call qword ptr [rdx]
0x000000000019d259 : jns 0x19d246 ; call qword ptr [rdx]
0x00000000001a3849 : jns 0x1a383a ; jmp qword ptr [rcx]
0x0000000000001b2d : jns 0x1b38 ; ret
0x0000000000020490 : jns 0x20380 ; jmp 0x20461
0x0000000000029ae4 : jns 0x29d4cceb ; ret
0x0000000000002be3 : jns 0x2bb1 ; clc ; ret
0x0000000000003267 : jns 0x3242 ; ret 0x5a51
0x00000000000038ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000889db : jns 0x8898a ; xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x000000000009ef37 : jns 0x9ef3a ; ret
0x000000000009f171 : jns 0x9f174 ; ret
0x000000000009f2d8 : jns 0x9f2e3 ; ret
0x000000000009f68a : jns 0x9f68d ; ret
0x000000000009f8c4 : jns 0x9f8c7 ; ret
0x000000000009fa2b : jns 0x9fa36 ; ret
0x000000000009fdd7 : jns 0x9fdda ; ret
0x00000000000a0011 : jns 0xa0014 ; ret
0x00000000000a0178 : jns 0xa0183 ; ret
0x00000000000d70c6 : jns 0xd70d6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7096
0x00000000000fd074 : jns 0xfd082 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe746 : jns 0xfe77c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000137170 : jns 0xffffffffc496ba57 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a9096 : jns 0xffffffffed3a93fc ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a90f8 : jns 0xffffffffed3a985e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9118 : jns 0xffffffffed3a997e ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000132763 : jo 0x1327c9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136272 : jo 0x1362d1 ; ret
0x00000000001735bb : jo 0x17360b ; mov edi, dword ptr [rbx] ; call 0x1f8ae
0x0000000000183244 : jo 0x1832be ; mov ebp, 0xfb67d10d ; ret
0x0000000000187218 : jo 0x18720c ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187404 : jo 0x18740e ; jmp qword ptr [rax - 0x2f000dff]
0x000000000019421c : jo 0x194227 ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x0000000000194328 : jo 0x194395 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00000000001947c0 : jo 0x194799 ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x0000000000194938 : jo 0x194936 ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x000000000019498c : jo 0x194991 ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000194b04 : jo 0x194b2e ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x0000000000194b18 : jo 0x194b34 ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00000000001957c0 : jo 0x195764 ; cld ; jmp rax
0x00000000001959c4 : jo 0x195967 ; cld ; jmp rax
0x00000000001a1f0b : jo 0x1a1f16 ; mov ebp, 0x41380e0a ; ret
0x00000000001a5a79 : jo 0x1a5a6b ; jmp qword ptr [rdx]
0x00000000001a6990 : jo 0x1a6a08 ; out dx, eax ; call rax
0x00000000001aa0e0 : jo 0x1aa0fa ; jmp qword ptr [rcx]
0x00000000001ab4f8 : jo 0x1ab506 ; ret
0x00000000001ade60 : jo 0x1ade44 ; hlt ; jmp qword ptr [rcx]
0x00000000001aff01 : jo 0x1afefa ; jmp qword ptr [rcx]
0x00000000001aff19 : jo 0x1aff12 ; jmp qword ptr [rcx]
0x00000000001aff31 : jo 0x1aff2a ; jmp qword ptr [rcx]
0x00000000001aff30 : jo 0x1aff2b ; jmp qword ptr [rcx]
0x00000000001aff79 : jo 0x1aff72 ; jmp qword ptr [rcx]
0x00000000001aff91 : jo 0x1aff8a ; jmp qword ptr [rcx]
0x00000000001b07b0 : jo 0x1b073a ; cmc ; jmp rax
0x00000000001b1f55 : jo 0x1b1f5e ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1f85 : jo 0x1b1f8e ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1f84 : jo 0x1b1f8f ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1fb5 : jo 0x1b1fbe ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1ffd : jo 0x1b2006 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2015 : jo 0x1b201e ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b202d : jo 0x1b2036 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000292a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e0b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000041923 : jo 0x418b7 ; sar dword ptr [rdx + 1], -0x77 ; ret
0x0000000000045096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000060dbc : jo 0x60d49 ; ret
0x0000000000071c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000075ad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000079834 : jo 0x79885 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac6e4 : jo 0xac732 ; mov edi, ebp ; call rbx
0x00000000000acc6e : jo 0xaccc0 ; mov edi, esp ; call rbx
0x00000000000b99cc : jo 0xb99e0 ; xchg eax, ebp ; ret 0x8b4c
0x00000000000bf57a : jo 0xbf583 ; jmp 0xbf36f
0x00000000000e2425 : jo 0xe2417 ; push rbp ; jno 0xe2431 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e3288 : jo 0xe327a ; loop 0xe330c ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x0000000000112735 : jp 0x11278c ; mov rsi, rdx ; call rax
0x000000000012dbdd : jp 0x12dc3d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000131742 : jp 0x13174e ; ret
0x00000000001344b2 : jp 0x1344be ; ret
0x00000000001344ca : jp 0x1344d6 ; ret
0x0000000000134d02 : jp 0x134d0e ; ret
0x0000000000134d1a : jp 0x134d26 ; ret
0x0000000000134d4a : jp 0x134d56 ; ret
0x000000000014ce86 : jp 0x14ce7a ; ret
0x000000000014cee9 : jp 0x14cedd ; ret
0x000000000014ce7f : jp 0x14cf09 ; jb 0x14ce6c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014ce84 : jp 0x14cf09 ; jp 0x14ce7c ; ret
0x000000000014d376 : jp 0x14d36a ; ret
0x000000000014d3d9 : jp 0x14d3cd ; ret
0x000000000014d36f : jp 0x14d3f9 ; jb 0x14d35c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d374 : jp 0x14d3f9 ; jp 0x14d36c ; ret
0x000000000014d719 : jp 0x14d70d ; ret
0x000000000014d779 : jp 0x14d76d ; ret
0x000000000014d712 : jp 0x14d79c ; jb 0x14d6ff ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d717 : jp 0x14d79c ; jp 0x14d70f ; ret
0x0000000000189c09 : jp 0x189c03 ; jmp rdx
0x0000000000189c11 : jp 0x189c0b ; jmp rdx
0x0000000000189cad : jp 0x189ca7 ; jmp rdx
0x0000000000189cf1 : jp 0x189ceb ; jmp qword ptr [rdx]
0x0000000000189d31 : jp 0x189d2b ; jmp qword ptr [rdx]
0x0000000000194365 : jp 0x194364 ; jmp qword ptr [rax]
0x00000000001952b9 : jp 0x1952b9 ; call rax
0x0000000000195335 : jp 0x195335 ; jmp qword ptr [rdx]
0x0000000000195339 : jp 0x19533d ; jmp qword ptr [rdx + 0x22fffc79]
0x00000000001954b5 : jp 0x1954b5 ; jmp rax
0x00000000001b0551 : jp 0x1b054a ; jmp qword ptr [rcx]
0x00000000001b0569 : jp 0x1b0562 ; jmp qword ptr [rcx]
0x00000000001b0581 : jp 0x1b057a ; jmp qword ptr [rcx]
0x00000000001b0599 : jp 0x1b0592 ; jmp qword ptr [rcx]
0x00000000001bb771 : jp 0x1bb76d ; call qword ptr [rcx]
0x0000000000023653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x0000000000002561 : jp 0x2545 ; jmp qword ptr [rbx]
0x0000000000002560 : jp 0x2546 ; jmp qword ptr [rbx]
0x000000000002cb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000072fe9 : jp 0x7302e ; jmp 0x72fb3
0x000000000008e805 : jp 0x8e7ff ; ret 0x7401
0x00000000000baa91 : jp 0xbaaa6 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000114503 : jrcxz 0x1144c8 ; cmp r11d, 0xa ; je 0x114514 ; ret
0x0000000000139b9f : jrcxz 0x139be4 ; call rsi
0x000000000015a06a : jrcxz 0x15a065 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a069 : jrcxz 0x15a066 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cb3a : jrcxz 0x15cb35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cb39 : jrcxz 0x15cb36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f65a : jrcxz 0x15f655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f659 : jrcxz 0x15f656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000182025 : jrcxz 0x18207f ; ret
0x0000000000194629 : jrcxz 0x19462c ; call qword ptr [rax + 0x20fffbe5]
0x0000000000194689 : jrcxz 0x194688 ; jmp qword ptr [rax]
0x00000000001994d9 : jrcxz 0x1994d6 ; jmp qword ptr [rdx + rax*8 + 1]
0x00000000001a7081 : jrcxz 0x1a7074 ; call rsp
0x00000000001adff1 : jrcxz 0x1adfe9 ; call qword ptr [rsi]
0x00000000001adff0 : jrcxz 0x1adfea ; call qword ptr [rsi]
0x00000000001ae009 : jrcxz 0x1ae001 ; jmp qword ptr [rcx]
0x00000000001ae008 : jrcxz 0x1ae002 ; jmp qword ptr [rcx]
0x00000000001b4f01 : jrcxz 0x1b4efb ; jmp qword ptr [rdi]
0x000000000002dcbe : jrcxz 0x2dcda ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000050ebc : jrcxz 0x50f35 ; ret 0x8945
0x0000000000053b2e : jrcxz 0x53ba7 ; ret
0x00000000000567c8 : jrcxz 0x567c2 ; ret 0xf40
0x00000000000c3c1f : jrcxz 0xc3c38 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00000000000d009e : jrcxz 0xd008b ; ret 0xfffb
0x00000000000d6750 : jrcxz 0xd675f ; je 0xd66ef ; pop rbx ; ret
0x00000000000eed3c : jrcxz 0xeed8e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010514f : js 0x1051af ; pop rbp ; ret
0x00000000001051bf : js 0x10521f ; pop rbp ; ret
0x00000000001098a8 : js 0x109834 ; loopne 0x1098bb ; movzx eax, ax ; ret
0x00000000001099d8 : js 0x109961 ; loopne 0x1099e1 ; ret
0x0000000000109a68 : js 0x1099f4 ; loopne 0x109a75 ; movzx eax, ax ; ret
0x0000000000109d68 : js 0x109cf4 ; loopne 0x109d77 ; movzx eax, ax ; ret
0x000000000010a241 : js 0x10a1cd ; loopne 0x10a254 ; movzx eax, ax ; ret
0x000000000010a341 : js 0x10a2ca ; loopne 0x10a34a ; ret
0x000000000010a3c1 : js 0x10a34d ; loopne 0x10a3ce ; movzx eax, ax ; ret
0x000000000010a641 : js 0x10a5cd ; loopne 0x10a650 ; movzx eax, ax ; ret
0x00000000001187c4 : js 0x1187d9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000118844 : js 0x118857 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001400b3 : js 0x1400c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000187b04 : js 0x187b86 ; jmp rdx
0x00000000001952c9 : js 0x1952cd ; jmp qword ptr [rax + 0x16fffc77]
0x0000000000195405 : js 0x195405 ; jmp rsp
0x0000000000195485 : js 0x195485 ; call rax
0x00000000001971f9 : js 0x1971eb ; call rsp
0x000000000019cdd8 : js 0x19ce34 ; jmp 0x1b90e2
0x00000000001a5fb8 : js 0x1a5fd7 ; cli ; call qword ptr [rax]
0x00000000001a8788 : js 0x1a87b2 ; int1 ; jmp qword ptr [rcx]
0x00000000001a8808 : js 0x1a8832 ; int1 ; call qword ptr [rcx]
0x00000000001a9988 : js 0x1a9986 ; int1 ; call rsi
0x00000000001acfb8 : js 0x1acf50 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad658 : js 0x1ad605 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0188 : js 0x1b0200 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0338 : js 0x1b03b3 ; cmc ; jmp qword ptr [rcx]
0x00000000001b03e9 : js 0x1b03e2 ; jmp qword ptr [rbx]
0x00000000001b0628 : js 0x1b06a8 ; cmc ; jmp qword ptr [rcx]
0x0000000000025b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000002dd11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x000000000002dd51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x000000000002ddf1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x000000000002ded1 : js 0x2de5a ; loopne 0x2deda ; ret
0x000000000002df4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x000000000002df5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x000000000002df9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x000000000002e03a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x000000000002e0c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000346be : js 0x346f0 ; call 0x1f8b0
0x0000000000075add : js 0x75aeb ; ret
0x0000000000084c68 : js 0x84c73 ; ret
0x00000000000cd047 : js 0xcd053 ; ret
0x00000000000e0e96 : js 0xe0ea9 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e328b : js 0xe328c ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e4558 : js 0xe456b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000f533c : js 0xf538e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f5cd9 : js 0xf5d2b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000fc30b : js 0xfc2dd ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe632 : js 0xfe645 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000a9038 : js 0xffffffffed3a929e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9066 : js 0xffffffffed3a94cc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a90b8 : js 0xffffffffed3a991e ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000024c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000001b4efd : lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00000000000ff1a8 : lahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000019597d : lahf ; cld ; call qword ptr [rax]
0x00000000001957c1 : lahf ; cld ; jmp rax
0x00000000001957bd : lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00000000001959c1 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000184703 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000faaf0 : lahf ; mov edi, ebp ; call 0xf6d05
0x0000000000115985 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014aadd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004c5b6 : lahf ; ret
0x000000000007371e : lahf ; ret 0x3841
0x00000000001022be : lahf ; ret 0x3845
0x00000000000d4fba : lahf ; ret 0x82eb
0x0000000000181f5d : lahf ; ret 0x871e
0x000000000011cbbf : lahf ; ret 0xc2e9
0x000000000005fc5c : lahf ; ret 0xd129
0x0000000000061f72 : lahf ; ret 0xd329
0x000000000005febc : lahf ; ret 0xd629
0x0000000000100f83 : lahf ; ret 0xe883
0x00000000000a9fe9 : lahf ; ret 0xea81
0x0000000000134112 : lahf ; scasd eax, dword ptr [rdi] ; add eax, 0x3d8d4800 ; ret
0x000000000014b16d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101407 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000186e07 : lcall ptr [rax - 0x23] ; out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x0000000000188ddb : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x0000000000188de7 : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x0000000000188e5f : lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x000000000018862b : lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x0000000000122615 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011c535 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000187aff : lcall ptr [rbp + 0x78fff37a] ; jge 0x187b02 ; jmp rdx
0x0000000000187afe : lcall ptr [rbp + 0x78fff37a] ; jge 0x187b03 ; jmp rdx
0x00000000001966f3 : lcall ptr [rbp + rbx*4 + 0x50240000] ; jmp 0x196703
0x000000000019580b : lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00000000001944cf : lcall ptr [rbp - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x000000000001fb73 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000073651 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029e13 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b5a21 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000039cf2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070450 : lcall ptr [rbx + 0x5d] ; ret
0x0000000000186e0b : lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x000000000019932b : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x0000000000085a2f : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000001885cb : lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00000000001886ef : lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00000000001885f7 : lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x0000000000188803 : lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00000000001970eb : lcall ptr [rcx + 0x6a440000] ; out dx, al ; jmp rsp
0x0000000000187717 : lcall ptr [rcx + rbp] ; jmp rsp
0x0000000000186977 : lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x0000000000110c5a : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x0000000000196bab : lcall ptr [rdi + rdi*4 - 0x38bc0000] ; in eax, dx ; call rsp
0x0000000000187b7b : lcall ptr [rdx + 0x42fff383] ; mov dh, bl ; jmp rdx
0x000000000019a6db : lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00000000001968db : lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x0000000000187bb3 : lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x0000000000189c6f : lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000019aa3b : lcall ptr [rsi + rdx*2 - 0x40abfffe] ; cli ; jmp rsp
0x000000000019454f : lcall ptr [rsi - 0x49] ; std ; call rcx
0x0000000000188127 : lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x0000000000187713 : lcall ptr [rsi] ; sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x0000000000197613 : lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x0000000000197bdb : lcall ptr [rsp + rbp + 0x52140001] ; call rsp
0x000000000019a2a3 : lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x000000000015a6f6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000079944 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000072d6f : lea eax, dword ptr [r8 - 1] ; ret
0x000000000012311c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000ba638 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008df94 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008dfa4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009e554 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008df74 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c6dd2 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072d70 : lea eax, dword ptr [rax - 1] ; ret
0x00000000001232a0 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000012d69b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000abe38 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000001b1a5c : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x000000000012311d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008ca3d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a97d4 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000000a68fc : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a6911 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a692f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a694f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a6972 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a6991 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a69b1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a69d1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a69f4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a6a19 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a6a37 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a6a57 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a6a73 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a6a93 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a6ab3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a6ad3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a7923 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a7b89 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a684d : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a686d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a688f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a68af : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a68cf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a68e9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000009deb4 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000009dec8 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000009ded3 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000009dee7 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000009def7 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000009df07 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a67fb : lea eax, dword ptr [rdi + 6] ; ret
0x000000000009dea7 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a681a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000122430 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a682f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008dfc9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008dfd9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008dec3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000095bf7 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000149a7a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000001235a0 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000002da65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008c939 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000ab88e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ab9f1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000aba11 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000aba01 : lea eax, dword ptr [rdi - 8] ; ret
0x00000000000a6783 : lea eax, dword ptr [rdi] ; ret
0x00000000001bbb16 : lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x000000000016a4dd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000016a4fd : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000016a51f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000016a53f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000016a55f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000016a3ef : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000016a417 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000016a42d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000016a445 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000016a45b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000016a46d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000016a48b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000016a397 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000016a49d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000016a4bd : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000072d5e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000aa0bc : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000016a405 : lea eax, dword ptr [rdx] ; ret
0x000000000008afaa : lea eax, dword ptr [rip + 0x10] ; ret
0x000000000008e7a0 : lea eax, dword ptr [rip + 0x10e4a] ; ret
0x000000000002cb39 : lea eax, dword ptr [rip + 0x15f406] ; ret
0x0000000000020931 : lea eax, dword ptr [rip + 0x16b154] ; ret
0x0000000000020941 : lea eax, dword ptr [rip + 0x16d066] ; ret
0x000000000008af5e : lea eax, dword ptr [rip + 0x1713c] ; ret
0x0000000000088cfe : lea eax, dword ptr [rip + 0x1777c] ; ret
0x000000000008e63a : lea eax, dword ptr [rip + 0x1b330] ; ret
0x000000000008da96 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x000000000008e014 : lea eax, dword ptr [rip + 0x26] ; ret
0x000000000012adc9 : lea eax, dword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x000000000012ad91 : lea eax, dword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x000000000012acd2 : lea eax, dword ptr [rip + 0x29d068] ; pop rbx ; ret
0x000000000010137b : lea eax, dword ptr [rip + 0x2c4edf] ; pop rbp ; pop r12 ; ret
0x00000000000fd73e : lea eax, dword ptr [rip + 0x2c8854] ; ret
0x00000000000fd57e : lea eax, dword ptr [rip + 0x2c8a14] ; ret
0x000000000006ac84 : lea eax, dword ptr [rip + 0x35aa76] ; pop rbx ; pop rbp ; ret
0x0000000000115681 : lea eax, dword ptr [rip + 0x37c19] ; ret
0x0000000000115771 : lea eax, dword ptr [rip + 0x37ec9] ; ret
0x000000000012a501 : lea eax, dword ptr [rip + 0x61a3e] ; ret
0x000000000008ee3a : lea eax, dword ptr [rip + 0x80] ; ret
0x000000000009388f : lea eax, dword ptr [rip + 0xb3db] ; ret
0x0000000000093860 : lea eax, dword ptr [rip + 0xb63a] ; ret
0x00000000000938a3 : lea eax, dword ptr [rip + 0xbcb07] ; ret
0x000000000008ceeb : lea eax, dword ptr [rip + 0xbcd7f] ; ret
0x000000000008cb5b : lea eax, dword ptr [rip + 0xbcfdf] ; ret
0x000000000008e7e1 : lea eax, dword ptr [rip + 0xbee69] ; ret
0x000000000008a6eb : lea eax, dword ptr [rip + 0xbf30f] ; ret
0x00000000000ab0ec : lea eax, dword ptr [rip + 0xc20ce] ; ret
0x00000000000abcc8 : lea eax, dword ptr [rip + 0xc31b2] ; ret
0x00000000000abcd0 : lea eax, dword ptr [rip + 0xc5a6a] ; ret
0x000000000008914e : lea eax, dword ptr [rip + 0xc] ; ret
0x000000000008c83e : lea eax, dword ptr [rip + 0xd999c] ; ret
0x000000000008ee9d : lea eax, dword ptr [rip + 0xd] ; ret
0x000000000008ecce : lea eax, dword ptr [rip + 0xda08c] ; ret
0x000000000008a5de : lea eax, dword ptr [rip + 0xda44c] ; ret
0x000000000008edee : lea eax, dword ptr [rip + 0xdb77c] ; ret
0x000000000008e028 : lea eax, dword ptr [rip + 0xdf812] ; ret
0x000000000008e030 : lea eax, dword ptr [rip + 0xe1f9a] ; ret
0x0000000000088eeb : lea eax, dword ptr [rip + 0xe6dbf] ; ret
0x00000000000abcb4 : lea eax, dword ptr [rip + 0xe916] ; ret
0x00000000000ab0e4 : lea eax, dword ptr [rip + 0xf596] ; ret
0x00000000000569f6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00000000000f5e86 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00000000001157ba : lea eax, dword ptr [rip - 0x6be60] ; ret
0x0000000000115730 : lea eax, dword ptr [rip - 0x76156] ; ret
0x0000000000115640 : lea eax, dword ptr [rip - 0x767b6] ; ret
0x00000000001233fe : lea eax, dword ptr [rsi + 8] ; ret
0x00000000001a63b5 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001baa1a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000007b5d8 : lea ebp, dword ptr [rdi + 0x83] ; jmp 0x7b5c6
0x0000000000045b5f : lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000047071 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000598fb : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000182811 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000ac003 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000ac12e : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000ac56e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000bdfb4 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbdfc5
0x00000000001bbabe : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000150430 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000000a503e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000167ce6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168239 ; ret
0x0000000000167fe4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168239 ; ret
0x0000000000168004 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168239 ; ret
0x0000000000168024 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168239 ; ret
0x0000000000168046 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168239 ; ret
0x0000000000168066 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168239 ; ret
0x0000000000168086 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168239 ; ret
0x0000000000167edc : lea ecx, dword ptr [rdx + 1] ; jne 0x168239 ; ret
0x0000000000167efe : lea ecx, dword ptr [rdx + 2] ; jne 0x168239 ; ret
0x0000000000167f24 : lea ecx, dword ptr [rdx + 3] ; jne 0x168239 ; ret
0x0000000000167f3c : lea ecx, dword ptr [rdx + 4] ; jne 0x168239 ; ret
0x0000000000072161 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000167f62 : lea ecx, dword ptr [rdx + 5] ; jne 0x168239 ; ret
0x0000000000167f84 : lea ecx, dword ptr [rdx + 6] ; jne 0x168239 ; ret
0x0000000000167fa2 : lea ecx, dword ptr [rdx + 7] ; jne 0x168239 ; ret
0x0000000000167c7e : lea ecx, dword ptr [rdx + 8] ; jne 0x168239 ; ret
0x0000000000167fc4 : lea ecx, dword ptr [rdx + 9] ; jne 0x168239 ; ret
0x0000000000048390 : lea ecx, dword ptr [rdx] ; jmp 0x483e6
0x0000000000049f70 : lea ecx, dword ptr [rdx] ; jmp 0x49fc6
0x0000000000059878 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x000000000010a1b7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000136309 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012bed8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000013611a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012bde6 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ac4c9 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ac129 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000abffe : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001374b2 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012bc0c : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012c37b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000ba46c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ac9aa : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137273 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000acc6b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ac6e1 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000013223e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000134e42 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000134422 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x00000000001316a5 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000038fec : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000103d17 : lea edi, dword ptr [rbx - 0x74b6000f] ; cmp al, 0x24 ; call rbx
0x000000000008e876 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8e868 ; mov rax, rdi ; ret
0x0000000000093936 : lea edi, dword ptr [rdi + 0x10] ; jne 0x93926 ; ret
0x00000000000a5bad : lea edi, dword ptr [rdi + 0x10] ; jne 0xa6289 ; ret
0x00000000000a7291 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa7a99 ; ret
0x00000000000a5bd0 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa6289 ; ret
0x00000000000a72b4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa7a99 ; ret
0x00000000000a5bf5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa6289 ; ret
0x00000000000a72d9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa7a99 ; ret
0x00000000000a5c13 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa6289 ; ret
0x00000000000a7307 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa7a99 ; ret
0x00000000000a5c33 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa6289 ; ret
0x00000000000a7337 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa7a99 ; ret
0x00000000000a5c56 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa6289 ; ret
0x00000000000a736a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa7a99 ; ret
0x00000000000a5c75 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa6289 ; ret
0x00000000000a7399 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa7a99 ; ret
0x00000000000a5c95 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa6289 ; ret
0x00000000000a73c9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa7a99 ; ret
0x00000000000a5cb5 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa6289 ; ret
0x00000000000a73f9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa7a99 ; ret
0x00000000000a5cd8 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa6289 ; ret
0x00000000000a742c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa7a99 ; ret
0x00000000000a5d0d : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa6289 ; ret
0x00000000000a7461 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa7a99 ; ret
0x00000000000a5d3b : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa6289 ; ret
0x00000000000a748f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa7a99 ; ret
0x00000000000a5d6b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa6289 ; ret
0x00000000000a74bf : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7a99 ; ret
0x00000000000a5d97 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa6289 ; ret
0x00000000000a74eb : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa7a99 ; ret
0x00000000000a5dc7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa6289 ; ret
0x00000000000a751b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa7a99 ; ret
0x00000000000a5df7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa6289 ; ret
0x00000000000a754b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa7a99 ; ret
0x00000000000a5e27 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa6289 ; ret
0x00000000000a757b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa7a99 ; ret
0x00000000000a5af3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa6289 ; ret
0x00000000000a7197 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa7a99 ; ret
0x00000000000a5b11 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa6289 ; ret
0x00000000000a71c5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa7a99 ; ret
0x00000000000a5b31 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa6289 ; ret
0x00000000000a71e5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa7a99 ; ret
0x00000000000a5b53 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa6289 ; ret
0x00000000000a7207 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa7a99 ; ret
0x00000000000a5b73 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa6289 ; ret
0x00000000000a7237 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa7a99 ; ret
0x00000000000a5b93 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa6289 ; ret
0x00000000000a7267 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa7a99 ; ret
0x00000000000a59c7 : lea edi, dword ptr [rdi + 1] ; jne 0xa6289 ; ret
0x00000000000a706a : lea edi, dword ptr [rdi + 1] ; jne 0xa7a99 ; ret
0x00000000000a59eb : lea edi, dword ptr [rdi + 2] ; jne 0xa6289 ; ret
0x00000000000a708f : lea edi, dword ptr [rdi + 2] ; jne 0xa7a99 ; ret
0x00000000000a5a0e : lea edi, dword ptr [rdi + 3] ; jne 0xa6289 ; ret
0x00000000000a70b2 : lea edi, dword ptr [rdi + 3] ; jne 0xa7a99 ; ret
0x00000000000a5a29 : lea edi, dword ptr [rdi + 4] ; jne 0xa6289 ; ret
0x00000000000a70cd : lea edi, dword ptr [rdi + 4] ; jne 0xa7a99 ; ret
0x00000000000a5a4c : lea edi, dword ptr [rdi + 5] ; jne 0xa6289 ; ret
0x00000000000a70f0 : lea edi, dword ptr [rdi + 5] ; jne 0xa7a99 ; ret
0x00000000000a5a71 : lea edi, dword ptr [rdi + 6] ; jne 0xa6289 ; ret
0x00000000000a7115 : lea edi, dword ptr [rdi + 6] ; jne 0xa7a99 ; ret
0x00000000000a5a8f : lea edi, dword ptr [rdi + 7] ; jne 0xa6289 ; ret
0x00000000000a7133 : lea edi, dword ptr [rdi + 7] ; jne 0xa7a99 ; ret
0x00000000000a5aab : lea edi, dword ptr [rdi + 8] ; jne 0xa6289 ; ret
0x00000000000a714f : lea edi, dword ptr [rdi + 8] ; jne 0xa7a99 ; ret
0x00000000000a5ace : lea edi, dword ptr [rdi + 9] ; jne 0xa6289 ; ret
0x00000000000a7172 : lea edi, dword ptr [rdi + 9] ; jne 0xa7a99 ; ret
0x0000000000023652 : lea edi, dword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x000000000004b511 : lea edi, dword ptr [rip + 0x1445f1] ; call 0x777f8
0x000000000011fb21 : lea edi, dword ptr [rip + 0x2a7bd5] ; call rax
0x000000000011f2c2 : lea edi, dword ptr [rip + 0x2a83d8] ; call rax
0x00000000000bf4fd : lea edi, dword ptr [rip + 0xc8571] ; add rax, rdi ; jmp rax
0x00000000000bd499 : lea edi, dword ptr [rip + 0xd00ef] ; call 0x39778
0x0000000000114f57 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000f5ef5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000007c84b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000368a9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38c7d6], edx ; ret
0x0000000000150504 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000009e238 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000072eed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000891e6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000109f93 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001508f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000012d1c1 : lea edx, dword ptr [rip + 0x2959b9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000136791 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001156fb : lea edx, dword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x000000000008e5e6 : lea edx, dword ptr [rip + 0xc7164] ; cmove rax, rdx ; ret
0x00000000000720a1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000062053 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000dd8c1 : lea esi, dword ptr [rbx + rbp] ; call 0x938c9
0x0000000000071270 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000004e617 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000450df : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000006f21a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007bf0a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x000000000007c2fa : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x000000000007c74a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x000000000006f513 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x000000000007ac3a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007aeaa : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013a64d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012dab5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9fa : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000139fbd : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006d121 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000891e5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000038feb : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000015042f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000004838f : lea r9, qword ptr [rdx] ; jmp 0x483e7
0x0000000000049f6f : lea r9, qword ptr [rdx] ; jmp 0x49fc7
0x0000000000136308 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012bed7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136119 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012bde5 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ac4c8 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000ac128 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000abffd : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001374b1 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012bc0b : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012c37a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000ba46b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ac9a9 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137272 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000acc6a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ac6e0 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000cd009 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008df93 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008dfa3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009e553 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008df73 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c6dd1 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012d69a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000abe37 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008ca3c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a97d3 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a68fb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6910 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a692e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a694e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a6971 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a6990 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a69b0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a69d0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a69f3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6a18 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6a36 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6a56 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a6a72 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a6a92 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a6ab2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a6ad2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a7922 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7b88 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a684c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a686c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a688e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a68ae : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a68ce : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a68e8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009deb3 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dec7 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ded2 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009dee6 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009def6 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009df06 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a67fa : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009dea6 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a6819 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a682e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008dfc8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008dfd8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008dec2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000095bf6 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000149a79 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000012359f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002da64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008c938 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ab88d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab9f0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000aba10 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000aba00 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a6782 : lea rax, qword ptr [rdi] ; ret
0x000000000016a4dc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a4fc : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016a51e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016a53e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a55e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016a3ee : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000016a416 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000016a42c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000016a444 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a45a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000016a46c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016a48a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016a396 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016a49c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016a4bc : lea rax, qword ptr [rdx + 9] ; ret
0x000000000016a404 : lea rax, qword ptr [rdx] ; ret
0x000000000008afa9 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008e79f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000002cb38 : lea rax, qword ptr [rip + 0x15f406] ; ret
0x0000000000020930 : lea rax, qword ptr [rip + 0x16b154] ; ret
0x0000000000020940 : lea rax, qword ptr [rip + 0x16d066] ; ret
0x000000000008af5d : lea rax, qword ptr [rip + 0x1713c] ; ret
0x0000000000088cfd : lea rax, qword ptr [rip + 0x1777c] ; ret
0x000000000008e639 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008e013 : lea rax, qword ptr [rip + 0x26] ; ret
0x000000000012adc8 : lea rax, qword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x000000000012ad90 : lea rax, qword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x000000000012acd1 : lea rax, qword ptr [rip + 0x29d068] ; pop rbx ; ret
0x00000000000fd73d : lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00000000000fd57d : lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x000000000006ac83 : lea rax, qword ptr [rip + 0x35aa76] ; pop rbx ; pop rbp ; ret
0x0000000000115680 : lea rax, qword ptr [rip + 0x37c19] ; ret
0x0000000000115770 : lea rax, qword ptr [rip + 0x37ec9] ; ret
0x000000000012a500 : lea rax, qword ptr [rip + 0x61a3e] ; ret
0x000000000008ee39 : lea rax, qword ptr [rip + 0x80] ; ret
0x000000000009388e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x000000000009385f : lea rax, qword ptr [rip + 0xb63a] ; ret
0x00000000000938a2 : lea rax, qword ptr [rip + 0xbcb07] ; ret
0x000000000008ceea : lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x000000000008cb5a : lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x000000000008e7e0 : lea rax, qword ptr [rip + 0xbee69] ; ret
0x000000000008a6ea : lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00000000000ab0eb : lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00000000000abcc7 : lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00000000000abccf : lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x000000000008914d : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008c83d : lea rax, qword ptr [rip + 0xd999c] ; ret
0x000000000008ee9c : lea rax, qword ptr [rip + 0xd] ; ret
0x000000000008eccd : lea rax, qword ptr [rip + 0xda08c] ; ret
0x000000000008a5dd : lea rax, qword ptr [rip + 0xda44c] ; ret
0x000000000008eded : lea rax, qword ptr [rip + 0xdb77c] ; ret
0x000000000008e027 : lea rax, qword ptr [rip + 0xdf812] ; ret
0x000000000008e02f : lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x0000000000088eea : lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00000000000abcb3 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000ab0e3 : lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000001157b9 : lea rax, qword ptr [rip - 0x6be60] ; ret
0x000000000011572f : lea rax, qword ptr [rip - 0x76156] ; ret
0x000000000011563f : lea rax, qword ptr [rip - 0x767b6] ; ret
0x00000000000ab9c9 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000047070 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a503d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000ac002 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000ac12d : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ac56d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000bdfb3 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfc6
0x00000000000705c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000010a1b6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000013223d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000134e41 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000134421 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001316a4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008e875 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8e869 ; mov rax, rdi ; ret
0x0000000000093935 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x93927 ; ret
0x000000000004b510 : lea rdi, qword ptr [rip + 0x1445f1] ; call 0x777f9
0x000000000011fb20 : lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x000000000011f2c1 : lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x00000000000bd498 : lea rdi, qword ptr [rip + 0xd00ef] ; call 0x39779
0x0000000000114f56 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f5ef4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000150503 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000109f92 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001508f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000450de : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f219 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf09 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f9 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c749 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f512 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac39 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013a64c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012dab4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9f9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000139fbc : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000196cf5 : leave ; add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00000000000db9eb : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000029a74 : leave ; call r15
0x0000000000002bec : leave ; clc ; ret
0x000000000019aae1 : leave ; cli ; jmp rsp
0x000000000008cc06 : leave ; cmove rax, rdx ; ret
0x0000000000149ab1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000001882c8 : leave ; fcompi st(3) ; call qword ptr [rcx]
0x00000000001882c4 : leave ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x000000000018825c : leave ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x000000000002b395 : leave ; je 0x2b39d ; call rcx
0x000000000006b459 : leave ; je 0x6b464 ; ret
0x0000000000125a9c : leave ; jne 0x1259eb ; ret
0x000000000009df79 : leave ; jne 0x9df6c ; ret
0x000000000009e0b8 : leave ; jne 0x9e0ad ; xor eax, eax ; ret
0x00000000000a95b0 : leave ; jne 0xa95a3 ; ret
0x00000000000a9660 : leave ; jne 0xa9653 ; ret
0x00000000000a9920 : leave ; jne 0xa9917 ; sub rax, 1 ; ret
0x00000000000aba5c : leave ; jne 0xaba54 ; ret
0x00000000000aceda : leave ; jne 0xace97 ; mov rax, rdx ; ret
0x0000000000149a78 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a4b21 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034a71 : leave ; mov dword ptr [rdi], ecx ; ret
0x00000000000aa264 : leave ; mov dword ptr [rdx], ecx ; jne 0xaa25e ; ret
0x0000000000125e86 : leave ; mov eax, 0x200000 ; jmp 0x125e57
0x000000000009de7f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009dddf : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000218e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000042351 : leave ; ret
0x00000000000f6bab : leave ; ret 0x2c
0x00000000000e35d3 : leave ; ret 0xfff3
0x000000000019a269 : leave ; stc ; call rsp
0x00000000000ac4c5 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000006f34c : les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x000000000007a851 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x0000000000189cef : ljmp ptr [rax + 0x22fff67a] ; jl 0x189cf5 ; jmp qword ptr [rdx]
0x0000000000198403 : ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x0000000000187b1b : ljmp ptr [rax + rcx*4 + 0x79e2fff3] ; jmp rdx
0x000000000019460f : ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000187b97 : ljmp ptr [rbp + 0x7c] ; jmp rdx
0x0000000000187baf : ljmp ptr [rbp + 0x7c] ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x0000000000188663 : ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x0000000000189cc3 : ljmp ptr [rbx + 0x7a] ; idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cc9 ; jmp qword ptr [rdx]
0x000000000019a70b : ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x0000000000187ecf : ljmp ptr [rbx] ; mov dl, 0xf3 ; jmp rsp
0x0000000000197ec3 : ljmp ptr [rcx + rax*2 + 0x46e40001] ; jmp rsp
0x0000000000194e0b : ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x0000000000189915 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00000000001880a4 : ljmp ptr [rcx - 0x43d2000d] ; call qword ptr [rax]
0x0000000000197213 : ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x000000000019a0e3 : ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00000000001884c3 : ljmp ptr [rdi] ; fcomi st(3) ; dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00000000001887df : ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x0000000000188633 : ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x000000000018825f : ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x0000000000188457 : ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x0000000000189ccf : ljmp ptr [rsi + 0x22fff679] ; jl 0x189cd5 ; jmp qword ptr [rdx]
0x0000000000189d6b : ljmp ptr [rsi + 0x22fff679] ; jl 0x189d71 ; jmp qword ptr [rdx]
0x000000000019a8a3 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8ad ; call rsp
0x000000000006d713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x000000000016dc1e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010d25e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x0000000000085a94 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fb5e4 : lock and byte ptr [rax - 0x77], cl ; ret
0x0000000000186f66 : lock dec dword ptr [rax] ; sal eax, -1 ; pop rax ; ret
0x000000000012193f : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000019a70c : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; and al, 0x56 ; cli ; jmp rsp
0x0000000000144b90 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019691d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00000000001711b0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a5c2d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c27 ; jmp qword ptr [rcx]
0x0000000000197ec4 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], eax ; in al, 0x46 ; jmp rsp
0x00000000001afee4 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000142e3c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003ea8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5061 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b5c12 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfb4a : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000013bc5a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000195765 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00000000001955a5 : lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00000000001955a1 : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x0000000000029c94 : lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00000000000b93f8 : lodsb al, byte ptr [rsi] ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001a5fe4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000187b1c : lodsb al, byte ptr [rsi] ; mov bl, dh ; jmp rdx
0x0000000000198a04 : lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x000000000007b2d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001451b4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184e9d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000197214 : lodsb al, byte ptr [rsi] ; out 0, eax ; add ah, dl ; jl 0x197210 ; jmp rsp
0x0000000000198404 : lodsb al, byte ptr [rsi] ; push 0x44940001 ; cmc ; jmp rsp
0x00000000001b03e4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e7 ; jmp qword ptr [rbx]
0x0000000000196c34 : lodsb al, byte ptr [rsi] ; ret 0
0x00000000001994f4 : lodsb al, byte ptr [rsi] ; ret 1
0x000000000004617c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ad8b6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000195619 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x000000000019555d : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000195559 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x0000000000195599 : lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000195759 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x0000000000188129 : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000188125 : lodsd eax, dword ptr [rsi] ; lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00000000000abe89 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x0000000000148d20 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048af2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000011718f : lodsd eax, dword ptr [rsi] ; ret 0xfff5
0x00000000000bac30 : lodsd eax, dword ptr [rsi] ; xor byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000188124 : lodsd eax, dword ptr ds:[rsi] ; lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00000000000ad8b5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012f74c : loop 0x12f7d6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000136a36 : loop 0x1369c8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000136bc9 : loop 0x136b5b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000159fda : loop 0x159fd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000159fd9 : loop 0x159fd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015caaa : loop 0x15caa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015caa9 : loop 0x15caa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f5ca : loop 0x15f5c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f5c9 : loop 0x15f5c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000018523a : loop 0x18528f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000187a78 : loop 0x187af6 ; jmp rdx
0x0000000000187a7c : loop 0x187afa ; jmp rdx
0x0000000000187a80 : loop 0x187afe ; jmp rdx
0x0000000000187a84 : loop 0x187b02 ; jmp rdx
0x0000000000187a88 : loop 0x187b06 ; jmp rdx
0x0000000000187a8c : loop 0x187b0a ; jmp rdx
0x0000000000187a90 : loop 0x187b0e ; jmp rdx
0x0000000000187a94 : loop 0x187b12 ; jmp rdx
0x0000000000187a98 : loop 0x187b16 ; jmp rdx
0x0000000000187a9c : loop 0x187b1a ; jmp rdx
0x0000000000187aa0 : loop 0x187b1e ; jmp rdx
0x0000000000187aa4 : loop 0x187b22 ; jmp rdx
0x0000000000187aa8 : loop 0x187b26 ; jmp rdx
0x0000000000187aac : loop 0x187b2a ; jmp rdx
0x0000000000187ab0 : loop 0x187b2e ; jmp rdx
0x0000000000187ab4 : loop 0x187b32 ; jmp rdx
0x0000000000187ab8 : loop 0x187b36 ; jmp rdx
0x0000000000187abc : loop 0x187b3a ; jmp rdx
0x0000000000187ac0 : loop 0x187b3e ; jmp rdx
0x0000000000187ac4 : loop 0x187b42 ; jmp rdx
0x0000000000187ac8 : loop 0x187b46 ; jmp rdx
0x0000000000187acc : loop 0x187b4a ; jmp rdx
0x0000000000187ad0 : loop 0x187b4e ; jmp rdx
0x0000000000187ad4 : loop 0x187b52 ; jmp rdx
0x0000000000187ad8 : loop 0x187b56 ; jmp rdx
0x0000000000187adc : loop 0x187b5a ; jmp rdx
0x0000000000187b08 : loop 0x187b86 ; jmp rdx
0x0000000000187b0c : loop 0x187b8a ; jmp rdx
0x0000000000187b10 : loop 0x187b92 ; push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x0000000000187b20 : loop 0x187b9e ; jmp rdx
0x0000000000187b4c : loop 0x187bca ; jmp rdx
0x0000000000187b50 : loop 0x187bce ; jmp rdx
0x0000000000187b54 : loop 0x187bd2 ; jmp rdx
0x0000000000187b58 : loop 0x187bd6 ; jmp rdx
0x0000000000187b5c : loop 0x187bda ; jmp rdx
0x0000000000187b9c : loop 0x187c1e ; dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00000000001889a8 : loop 0x188936 ; hlt ; jmp rdx
0x00000000001889ac : loop 0x18893a ; hlt ; jmp rdx
0x00000000001889b0 : loop 0x18893e ; hlt ; jmp rdx
0x00000000001889b4 : loop 0x188942 ; hlt ; jmp rdx
0x00000000001889b8 : loop 0x188946 ; hlt ; jmp rdx
0x00000000001889bc : loop 0x18894a ; hlt ; jmp rdx
0x00000000001889c0 : loop 0x18894e ; hlt ; jmp rdx
0x00000000001889c4 : loop 0x188952 ; hlt ; call rsp
0x00000000001889d0 : loop 0x18895e ; hlt ; jmp rdx
0x00000000001889d4 : loop 0x188962 ; hlt ; jmp rdx
0x00000000001889d8 : loop 0x188966 ; hlt ; jmp rdx
0x00000000001889dc : loop 0x18896a ; hlt ; jmp rdx
0x00000000001889e0 : loop 0x18896e ; hlt ; jmp rdx
0x00000000001889e4 : loop 0x188972 ; hlt ; jmp rdx
0x00000000001889e8 : loop 0x188976 ; hlt ; jmp rdx
0x00000000001889ec : loop 0x18897a ; hlt ; jmp rdx
0x00000000001889f0 : loop 0x18897e ; hlt ; jmp rdx
0x00000000001889f4 : loop 0x188982 ; hlt ; jmp rdx
0x00000000001889f8 : loop 0x188986 ; hlt ; jmp rdx
0x00000000001889fc : loop 0x18898a ; hlt ; jmp rdx
0x0000000000188a00 : loop 0x18898e ; hlt ; jmp rdx
0x0000000000188a04 : loop 0x188992 ; hlt ; jmp rdx
0x0000000000188a08 : loop 0x188996 ; hlt ; jmp rdx
0x0000000000188a0c : loop 0x18899a ; hlt ; jmp rdx
0x0000000000188a10 : loop 0x18899e ; hlt ; jmp rdx
0x0000000000188a14 : loop 0x1889a2 ; hlt ; jmp rdx
0x0000000000189c6c : loop 0x189cf1 ; idiv bh ; pop rsp ; jle 0x189c70 ; jmp rdx
0x0000000000189c74 : loop 0x189cf9 ; idiv bh ; jle 0x189c78 ; jmp rdx
0x000000000019711d : loop 0x197125 ; add byte ptr [rsi + rbp*2], ah ; out dx, al ; call rsp
0x00000000001adf39 : loop 0x1adf31 ; jmp qword ptr [rcx]
0x00000000001b4ee9 : loop 0x1b4ee3 ; call rcx
0x00000000001b58a9 : loop 0x1b58a8 ; call rsi
0x000000000001fa38 : loop 0x1fa24 ; ret 0xf58
0x00000000000025e5 : loop 0x25bf ; ret 0x23cb
0x000000000003a689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000055d0d : loop 0x55c9a ; ret
0x000000000005f10b : loop 0x5f114 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a8
0x0000000000065891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006bcc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000759b4 : loop 0x759bb ; mov eax, edx ; ret
0x0000000000075aa4 : loop 0x75aab ; mov eax, edx ; ret
0x0000000000087044 : loop 0x87096 ; mov edi, edi ; call rax
0x000000000009ec5d : loop 0x9ec95 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a5c9a : loop 0xa5ca5 ; add byte ptr [rax], al ; ret
0x00000000000aa0a5 : loop 0xaa0bf ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ac6df : loop 0xac736 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ac9a8 : loop 0xac9ff ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000c113f : loop 0xc1145 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e328a : loop 0xe330a ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e442c : loop 0xe4438 ; xor esi, esi ; call 0x8e698
0x00000000000e457f : loop 0xe4584 ; add esi, esi ; ret
0x00000000000edf62 : loop 0xedeeb ; ret 0x850f
0x0000000000110526 : loope 0x110534 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011718a : loope 0x1171de ; mov esi, esp ; call 0x73446
0x0000000000127e03 : loope 0x127dbe ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000013166e : loope 0x131603 ; ret
0x0000000000159f4a : loope 0x159f45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000159f49 : loope 0x159f46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ca1a : loope 0x15ca15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ca19 : loope 0x15ca16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f53a : loope 0x15f535 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f539 : loope 0x15f536 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016804b : loope 0x168052 ; add byte ptr [rax], al ; ret
0x000000000016fedb : loope 0x16fee5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000173736 : loope 0x173795 ; ret
0x0000000000185519 : loope 0x18551c ; jmp qword ptr [rdi]
0x0000000000185599 : loope 0x18559c ; jmp qword ptr [rdi]
0x0000000000185619 : loope 0x18561c ; jmp qword ptr [rdi]
0x0000000000185699 : loope 0x18569c ; jmp qword ptr [rdi]
0x0000000000185719 : loope 0x18571c ; jmp qword ptr [rdi]
0x0000000000185799 : loope 0x18579c ; jmp qword ptr [rdi]
0x0000000000189fe9 : loope 0x189ff3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001943d8 : loope 0x19437e ; std ; jmp rcx
0x00000000001943d8 : loope 0x194382 ; std ; jmp rcx
0x00000000001943dc : loope 0x194383 ; std ; jmp rcx
0x0000000000194685 : loope 0x194684 ; jmp qword ptr [rax]
0x00000000001970ed : loope 0x1970f5 ; add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x0000000000035d6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000048987 : loope 0x489d9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000489b8 : loope 0x48a0b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000048a2d : loope 0x48a80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000758c1 : loope 0x75896 ; mov dword ptr [rdi], ecx ; ret
0x0000000000082147 : loope 0x8215e ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000085950 : loope 0x8598e ; add byte ptr [rbp + 0xa], dh ; jmp 0x85982
0x0000000000093d3b : loope 0x93d4d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000093ee2 : loope 0x93f39 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000093fab : loope 0x93fbd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a94a9 : loope 0xa9518 ; nop dword ptr [rax + rax] ; ret
0x00000000000aa0e7 : loope 0xaa0a8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aa1ce : loope 0xaa1c5 ; ret
0x00000000000ab36e : loope 0xab383 ; je 0xab394 ; ret
0x00000000000c7e0d : loope 0xc7d9a ; ret 0xf631
0x00000000000d66d9 : loope 0xd66de ; add esi, esi ; ret
0x0000000000101270 : loopne 0x101276 ; jmp 0x10123a
0x000000000010537e : loopne 0x1053e4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010988e : loopne 0x109894 ; ret
0x00000000001098aa : loopne 0x1098b9 ; movzx eax, ax ; ret
0x000000000010991e : loopne 0x109924 ; ret
0x00000000001099be : loopne 0x1099c4 ; ret
0x00000000001099da : loopne 0x1099df ; ret
0x0000000000109a4e : loopne 0x109a54 ; ret
0x0000000000109a6a : loopne 0x109a73 ; movzx eax, ax ; ret
0x0000000000109ade : loopne 0x109ae4 ; ret
0x0000000000109b6e : loopne 0x109b74 ; ret
0x0000000000109c0e : loopne 0x109c14 ; ret
0x0000000000109cae : loopne 0x109cb4 ; ret
0x0000000000109d4e : loopne 0x109d54 ; ret
0x0000000000109d6a : loopne 0x109d75 ; movzx eax, ax ; ret
0x0000000000109dde : loopne 0x109de4 ; ret
0x0000000000109e79 : loopne 0x109e7f ; ret
0x0000000000109f0e : loopne 0x109f14 ; ret
0x000000000010a0ea : loopne 0x10a0f0 ; ret
0x000000000010a230 : loopne 0x10a236 ; ret
0x000000000010a243 : loopne 0x10a252 ; movzx eax, ax ; ret
0x000000000010a2b0 : loopne 0x10a2b6 ; ret
0x000000000010a330 : loopne 0x10a336 ; ret
0x000000000010a343 : loopne 0x10a348 ; ret
0x000000000010a3b0 : loopne 0x10a3b6 ; ret
0x000000000010a3c3 : loopne 0x10a3cc ; movzx eax, ax ; ret
0x000000000010a430 : loopne 0x10a436 ; ret
0x000000000010a4b0 : loopne 0x10a4b6 ; ret
0x000000000010a530 : loopne 0x10a536 ; ret
0x000000000010a5b0 : loopne 0x10a5b6 ; ret
0x000000000010a630 : loopne 0x10a636 ; ret
0x000000000010a643 : loopne 0x10a64e ; movzx eax, ax ; ret
0x000000000010a6b0 : loopne 0x10a6b6 ; ret
0x000000000010a72d : loopne 0x10a733 ; ret
0x000000000010a7b0 : loopne 0x10a7b6 ; ret
0x000000000010a95a : loopne 0x10a960 ; ret
0x0000000000113e3b : loopne 0x113e40 ; ret
0x0000000000114568 : loopne 0x11457d ; cmp eax, 4 ; je 0x114577 ; ret
0x0000000000114739 : loopne 0x11474c ; pop rbp ; pop r12 ; ret
0x0000000000114f55 : loopne 0x114fa7 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x0000000000122434 : loopne 0x122433 ; add eax, 0x10 ; ret
0x000000000012356b : loopne 0x123578 ; cdqe ; shr rax, 4 ; ret
0x00000000001377b7 : loopne 0x1377c0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013bb11 : loopne 0x13bb81 ; nop dword ptr [rax + rax] ; ret
0x000000000014ce82 : loopne 0x14ce4f ; jp 0x14cf0b ; jp 0x14ce7e ; ret
0x000000000014d372 : loopne 0x14d33f ; jp 0x14d3fb ; jp 0x14d36e ; ret
0x000000000014d715 : loopne 0x14d6e2 ; jp 0x14d79e ; jp 0x14d711 ; ret
0x0000000000150951 : loopne 0x150968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150950 : loopne 0x150969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150aa1 : loopne 0x150ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150aa0 : loopne 0x150ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150bf1 : loopne 0x150c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150bf0 : loopne 0x150c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150d41 : loopne 0x150d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150d40 : loopne 0x150d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150e91 : loopne 0x150ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150e90 : loopne 0x150ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150fe1 : loopne 0x150ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150fe0 : loopne 0x150ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151131 : loopne 0x151148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151130 : loopne 0x151149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015127f : loopne 0x151296 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015127e : loopne 0x151297 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001513d1 : loopne 0x1513e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001513d0 : loopne 0x1513e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151521 : loopne 0x151538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151520 : loopne 0x151539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151671 : loopne 0x151688 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151670 : loopne 0x151689 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517c1 : loopne 0x1517d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517c0 : loopne 0x1517d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151911 : loopne 0x151928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151910 : loopne 0x151929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a61 : loopne 0x151a78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a60 : loopne 0x151a79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bb1 : loopne 0x151bc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bb0 : loopne 0x151bc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153321 : loopne 0x153338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153320 : loopne 0x153339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153471 : loopne 0x153488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153470 : loopne 0x153489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001535c1 : loopne 0x1535d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001535c0 : loopne 0x1535d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153711 : loopne 0x153728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153710 : loopne 0x153729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153861 : loopne 0x153878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153860 : loopne 0x153879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001539b1 : loopne 0x1539c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001539b0 : loopne 0x1539c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153b01 : loopne 0x153b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153b00 : loopne 0x153b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153c4f : loopne 0x153c66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153c4e : loopne 0x153c67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153da1 : loopne 0x153db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153da0 : loopne 0x153db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ef1 : loopne 0x153f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ef0 : loopne 0x153f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154041 : loopne 0x154058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154040 : loopne 0x154059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154191 : loopne 0x1541a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154190 : loopne 0x1541a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001542e1 : loopne 0x1542f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001542e0 : loopne 0x1542f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154431 : loopne 0x154448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154430 : loopne 0x154449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154581 : loopne 0x154598 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154580 : loopne 0x154599 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155cf1 : loopne 0x155d08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155cf0 : loopne 0x155d09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155e41 : loopne 0x155e58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155e40 : loopne 0x155e59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155f91 : loopne 0x155fa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155f90 : loopne 0x155fa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001560e1 : loopne 0x1560f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001560e0 : loopne 0x1560f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156231 : loopne 0x156248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156230 : loopne 0x156249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156381 : loopne 0x156398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156380 : loopne 0x156399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001564d1 : loopne 0x1564e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001564d0 : loopne 0x1564e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015661f : loopne 0x156636 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015661e : loopne 0x156637 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156771 : loopne 0x156788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156770 : loopne 0x156789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568c1 : loopne 0x1568d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568c0 : loopne 0x1568d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a11 : loopne 0x156a28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a10 : loopne 0x156a29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b61 : loopne 0x156b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b60 : loopne 0x156b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cb1 : loopne 0x156cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cb0 : loopne 0x156cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e01 : loopne 0x156e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e00 : loopne 0x156e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f51 : loopne 0x156f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f50 : loopne 0x156f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000171ef5 : loopne 0x171f46 ; sub eax, edx ; vzeroupper ; ret
0x0000000000171ef4 : loopne 0x171f47 ; sub eax, edx ; vzeroupper ; ret
0x0000000000181358 : loopne 0x181382 ; jmp 0x18135e
0x000000000018135c : loopne 0x181386 ; jmp 0x181362
0x0000000000181360 : loopne 0x18138a ; jmp 0x181366
0x0000000000181364 : loopne 0x18138e ; jmp 0x18136a
0x0000000000181368 : loopne 0x181392 ; jmp 0x18136e
0x000000000018136c : loopne 0x181396 ; jmp 0x181372
0x0000000000181370 : loopne 0x18139a ; jmp 0x181376
0x0000000000181374 : loopne 0x18139e ; jmp 0x18137a
0x0000000000181378 : loopne 0x1813a2 ; jmp 0x18137e
0x0000000000182814 : loopne 0x1827f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001873f8 : loopne 0x1873fd ; call qword ptr [rax]
0x0000000000187424 : loopne 0x18742e ; push rax ; add edx, esi ; call qword ptr [rax]
0x000000000018746c : loopne 0x187478 ; inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x0000000000188544 : loopne 0x188599 ; hlt ; push rax ; hlt ; jmp rax
0x000000000018854c : loopne 0x18859d ; hlt ; jmp rax
0x0000000000188558 : loopne 0x1885a9 ; hlt ; jmp rax
0x000000000018856c : loopne 0x1885c1 ; hlt ; jmp qword ptr [rax + 0x22fff44c]
0x0000000000188974 : loopne 0x1889cf ; hlt ; push rax ; push rdx ; hlt ; jmp rax
0x000000000018897c : loopne 0x1889d3 ; hlt ; jmp rax
0x0000000000188988 : loopne 0x1889df ; hlt ; jmp rax
0x000000000018899c : loopne 0x1889f7 ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x000000000018a4bc : loopne 0x18a4e9 ; cli ; call rax
0x0000000000194288 : loopne 0x1942a7 ; sti ; call qword ptr [rax]
0x000000000019473c : loopne 0x19471c ; sti ; call rax
0x000000000019508c : loopne 0x195016 ; cld ; push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00000000001970c5 : loopne 0x1970cd ; add ah, dl ; out dx, al ; call rsp
0x00000000001a46d9 : loopne 0x1a46e5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00000000001a5d80 : loopne 0x1a5d0d ; out dx, al ; call qword ptr [rsi]
0x00000000001a5db0 : loopne 0x1a5d3d ; out dx, al ; jmp rbx
0x00000000001a67d0 : loopne 0x1a67d6 ; out dx, eax ; jmp rsi
0x00000000001aa070 : loopne 0x1aa089 ; call qword ptr [rdx]
0x00000000001acc10 : loopne 0x1acc7b ; stc ; call qword ptr [rax]
0x00000000001acdc0 : loopne 0x1acd55 ; hlt ; call qword ptr [rcx]
0x00000000001ad2b0 : loopne 0x1ad24f ; hlt ; jmp qword ptr [rcx]
0x00000000001af730 : loopne 0x1af788 ; cmc ; call qword ptr [rdx]
0x00000000001afed0 : loopne 0x1aff44 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0110 : loopne 0x1b0187 ; cmc ; jmp qword ptr [rcx]
0x00000000001bbaca : loopne 0x1bbad9 ; ret 0xb
0x00000000001bbb22 : loopne 0x1bbb30 ; ret 0xa
0x000000000002dd13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x000000000002dd53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x000000000002ddf3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x000000000002ded3 : loopne 0x2ded8 ; ret
0x000000000002df4c : loopne 0x2df51 ; ret
0x000000000002df5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x000000000002df9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x000000000002df23 : loopne 0x2dfa6 ; ret
0x000000000002e03c : loopne 0x2e047 ; movzx eax, ax ; ret
0x0000000000034e75 : loopne 0x34e81 ; ret
0x0000000000035187 : loopne 0x3516e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000036084 : loopne 0x360d4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000045a25 : loopne 0x45a4a ; or eax, edx ; ret
0x0000000000046072 : loopne 0x4608c ; test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000004846d : loopne 0x48476 ; sub eax, 1 ; ret
0x0000000000052fc5 : loopne 0x52f52 ; ret 0xe680
0x0000000000054f3e : loopne 0x54ecb ; ret 0xe680
0x0000000000005ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000006c47b : loopne 0x6c4dd ; pop rbp ; pop r12 ; ret
0x000000000006c4a5 : loopne 0x6c507 ; pop rbp ; pop r12 ; ret
0x000000000006cb8b : loopne 0x6cbed ; pop rbp ; pop r12 ; ret
0x000000000006cc0d : loopne 0x6cc6f ; pop rbp ; pop r12 ; ret
0x000000000006dd9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x000000000006ddd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x000000000006de2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x000000000006de6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x000000000006de71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007206e : loopne 0x72007 ; mov eax, 0xffffffff ; ret
0x00000000000779c8 : loopne 0x77a2a ; pop rbp ; pop r12 ; ret
0x0000000000077f06 : loopne 0x77f0b ; ret
0x0000000000077f16 : loopne 0x77f1b ; ret
0x0000000000078fb9 : loopne 0x79020 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079067 : loopne 0x790ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000834f8 : loopne 0x83525 ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000840b2 : loopne 0x840b8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008e4ed : loopne 0x8e551 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e582 : loopne 0x8e5e6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000941ad : loopne 0x94205 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095e97 : loopne 0x95eed ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095e9a : loopne 0x95efc ; pop rbp ; pop r12 ; ret
0x00000000000a5d9c : loopne 0xa5da6 ; add byte ptr [rax], al ; ret
0x00000000000aa0dd : loopne 0xaa0f7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000ccb00 : loopne 0xccb66 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d0bc2 : loopne 0xd0c24 ; pop rbp ; pop r12 ; ret
0x00000000000d0cc2 : loopne 0xd0d24 ; pop rbp ; pop r12 ; ret
0x00000000000d5988 : loopne 0xd598d ; ret
0x00000000000d6609 : loopne 0xd6612 ; add eax, 8 ; ret
0x00000000000d6655 : loopne 0xd665b ; ret
0x00000000000d6709 : loopne 0xd670f ; pop rbx ; ret
0x00000000000d86c3 : loopne 0xd86d7 ; ret
0x00000000000d8f6d : loopne 0xd8fde ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e39f7 : loopne 0xe39bf ; call 0x66d0c30b
0x0000000000199e3c : mov ah, 0 ; add al, byte ptr [rax] ; hlt ; cmp edi, ecx ; jmp rsp
0x0000000000131707 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001ac1ec : mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x000000000018222a : mov ah, 0x13 ; ret
0x000000000019c8ec : mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00000000001acbec : mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00000000000b4bc3 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000da4f8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000bb659 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x000000000019dfec : mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00000000001adfec : mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adfee ; call qword ptr [rsi]
0x0000000000197e70 : mov ah, 0x32 ; jmp rsp
0x0000000000197e1c : mov ah, 0x3a ; add dword ptr [rax], eax ; push rsp ; and al, 0xf3 ; jmp rsp
0x000000000019edec : mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001af9ec : mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019fbec : mov ah, 0x4c ; add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00000000001afbec : mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000194ce8 : mov ah, 0x5f ; cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00000000001982d4 : mov ah, 0x61 ; add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00000000001951d4 : mov ah, 0x87 ; cld ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x0000000000199f0c : mov ah, 0xa ; add al, byte ptr [rax] ; and al, 0x52 ; stc ; call rsp
0x0000000000196a30 : mov ah, 0xa0 ; in eax, dx ; jmp rsp
0x00000000001826d0 : mov ah, 0xa5 ; ret
0x000000000019691c : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00000000001969c4 : mov ah, 0xb1 ; add byte ptr [rax], al ; mov ebp, gs ; jmp rsp
0x0000000000198cd0 : mov ah, 0xc1 ; idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x0000000000196cf4 : mov ah, 0xc9 ; add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x0000000000196bd0 : mov ah, 0xd0 ; in eax, dx ; call rsp
0x0000000000199a84 : mov ah, 0xe4 ; add dword ptr [rax], eax ; clc ; jmp rsp
0x00000000000b706b : mov ah, 0xe9 ; ret
0x00000000001972ac : mov ah, 0xee ; add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00000000001b4879 : mov ah, 0xf6 ; call rsi
0x0000000000086c8c : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000195055 : mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00000000001959e9 : mov ah, bh ; call rax
0x0000000000182024 : mov ah, bl ; push rsi ; ret
0x00000000001889cd : mov ah, dh ; jmp rdx
0x00000000001a5fb5 : mov al, 0 ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00000000001a5f55 : mov al, 0 ; add byte ptr [rax - 0x71], bl ; out dx, al ; call qword ptr [rax]
0x00000000001a5f6d : mov al, 0 ; add byte ptr [rax - 0x71], dl ; out dx, al ; jmp qword ptr [rsi]
0x00000000000eb37e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001a5fe5 : mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001873f4 : mov al, 0 ; jmp rax
0x00000000001aed60 : mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x000000000012d54c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012d504 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000018a4b8 : mov al, 0x28 ; cli ; jmp rax
0x000000000010b569 : mov al, 0x2b ; add byte ptr [rbp + 0xa], dh ; jmp 0x10b59b
0x0000000000134cb9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cd12e : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000c4725 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000013bb08 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000125b5d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x0000000000188984 : mov al, 0x53 ; hlt ; jmp rax
0x0000000000194b74 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00000000001acc50 : mov al, 0x66 ; stc ; call qword ptr [rax]
0x0000000000187008 : mov al, 0x6e ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001afea0 : mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00000000001959d0 : mov al, 0x7f ; cld ; call rax
0x0000000000187b94 : mov al, 0x81 ; ljmp ptr [rbp + 0x7c] ; jmp rdx
0x0000000000195278 : mov al, 0x83 ; cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x0000000000195060 : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00000000001acbf0 : mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00000000001a8ee0 : mov al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001bbac5 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x0000000000195770 : mov al, 0xaa ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x0000000000195558 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000001a9450 : mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00000000001871c4 : mov al, 0xe8 ; int1 ; call rax
0x00000000001871e4 : mov al, 0xe9 ; int1 ; call rax
0x0000000000187204 : mov al, 0xea ; int1 ; call rax
0x0000000000187258 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x000000000018728c : mov al, 0xed ; int1 ; call rax
0x00000000001844d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000001872ac : mov al, 0xee ; int1 ; call rax
0x00000000001872cc : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00000000001a4a60 : mov al, 0xf0 ; in eax, dx ; call rsi
0x00000000000fd263 : mov al, 0xf3 ; ret
0x00000000001873ac : mov al, 0xfd ; int1 ; call rax
0x00000000001a33e5 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a9205 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000001a44a1 : mov al, 1 ; add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x000000000018741c : mov al, 1 ; call rax
0x0000000000187444 : mov al, 2 ; call rax
0x00000000000a5dcc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000001874a0 : mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00000000000a59cc : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001bbb1d : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001a3a15 : mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a0e ; call qword ptr [rcx]
0x00000000001a39a5 : mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000000a1efb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a1f29 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a1fad : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016a400 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a1ed5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001ae288 : mov al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000a1ee5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000196a65 : mov bh, 0 ; add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x000000000015ad11 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002a21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000029d92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x000000000006caa0 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x0000000000033411 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x000000000016fd78 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000002da67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x0000000000183504 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002dd16 : mov bh, 0xc0 ; ret
0x000000000011881c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000019a1d9 : mov bh, 0xf9 ; call rsp
0x0000000000003790 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x377a ; ret 0x975
0x00000000001944dd : mov bh, 0xfd ; call qword ptr [rcx - 0x2e00024b]
0x00000000001944d5 : mov bh, 0xfd ; call rcx
0x000000000019455d : mov bh, 0xfd ; call rsi
0x000000000019458d : mov bh, 0xfd ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00000000001945fd : mov bh, 0xfd ; jmp qword ptr [rax - 0x2e00024a]
0x00000000001945dd : mov bh, 0xfd ; jmp qword ptr [rax - 0x2e00024b]
0x00000000001945ed : mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019454d : mov bh, 0xfd ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x00000000001945cd : mov bh, 0xfd ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x000000000019452d : mov bh, 0xfd ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x000000000019451d : mov bh, 0xfd ; push rcx ; mov ch, 0xfd ; call rcx
0x000000000019453d : mov bh, 0xfd ; push rcx ; mov dh, 0xfd ; call rcx
0x0000000000107e83 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000019939d : mov bh, 1 ; add byte ptr [rbp + rbp*2 - 9], al ; call rsp
0x00000000001098a6 : mov bh, 4 ; js 0x109836 ; loopne 0x1098bd ; movzx eax, ax ; ret
0x00000000001099d6 : mov bh, 4 ; js 0x109963 ; loopne 0x1099e3 ; ret
0x0000000000109a66 : mov bh, 4 ; js 0x1099f6 ; loopne 0x109a77 ; movzx eax, ax ; ret
0x0000000000109d66 : mov bh, 4 ; js 0x109cf6 ; loopne 0x109d79 ; movzx eax, ax ; ret
0x000000000010a23f : mov bh, 4 ; js 0x10a1cf ; loopne 0x10a256 ; movzx eax, ax ; ret
0x000000000010a33f : mov bh, 4 ; js 0x10a2cc ; loopne 0x10a34c ; ret
0x000000000010a3bf : mov bh, 4 ; js 0x10a34f ; loopne 0x10a3d0 ; movzx eax, ax ; ret
0x000000000010a63f : mov bh, 4 ; js 0x10a5cf ; loopne 0x10a652 ; movzx eax, ax ; ret
0x000000000002dd0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x000000000002dd4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x000000000002ddef : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x000000000002decf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x000000000002df48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x000000000002df58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x000000000002df98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x000000000002e038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x0000000000184c13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f5351 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000195a2d : mov bh, ah ; call rax
0x00000000001ae1f8 : mov bh, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000076f91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000001a5ef8 : mov bh, bh ; stc ; call qword ptr [rax]
0x00000000001ade78 : mov bh, bl ; hlt ; call qword ptr [rbx]
0x000000000019a0e9 : mov bh, cl ; call rsp
0x000000000017166e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bd0d1 : mov bl, 0x30 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000acedc : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000000e455c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000001845e3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000001a05b1 : mov bl, 0xec ; jmp qword ptr [rcx]
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000198c61 : mov bl, 0xf6 ; jmp rsp
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000f2941 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000019932d : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x0000000000194389 : mov bl, bh ; call rax
0x000000000005057d : mov bl, byte ptr [rsi - 0x76fffff6] ; ret 0xe680
0x0000000000080f42 : mov bl, byte ptr [rsi] ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000187af9 : mov bl, dh ; call rdx
0x0000000000187a75 : mov bl, dh ; jmp rdx
0x0000000000125b61 : mov byte ptr [r11], 0 ; ret
0x00000000000824c0 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000007763c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000fe6d9 : mov byte ptr [r8 - 1], 0 ; ret
0x000000000002fa5c : mov byte ptr [rax + 0x39], dl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013cb0c : mov byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000fd741 : mov byte ptr [rax + rax], ch ; ret
0x00000000000824c1 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000024208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000045af9 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007763d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000001aff78 : mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000fe6da : mov byte ptr [rax - 1], 0 ; ret
0x00000000001209c6 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010db5d : mov byte ptr [rax], 0x20 ; jmp 0x10db29
0x000000000010403e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000358d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a4b22 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001870f4 : mov byte ptr [rbp - 0x40370003], bh ; std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000012a4a4 : mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fd076 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000125b62 : mov byte ptr [rbx], 0 ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000096bf4 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x00000000001680c3 : mov byte ptr [rcx + 2], dl ; ret
0x00000000001680e2 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000168123 : mov byte ptr [rcx + 8], dl ; ret
0x000000000009de83 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002be46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x000000000009e23b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000009e180 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009e2ba : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004821a : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x48219 ; xor eax, eax ; ret
0x000000000002d50c : mov byte ptr [rcx], 0x83 ; ret
0x00000000000e3a11 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x0000000000198a05 : mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00000000001a5e10 : mov byte ptr [rcx], al ; ret
0x00000000001680a0 : mov byte ptr [rcx], dl ; ret
0x00000000000a919a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a773b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a5f5b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a91ab : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a68f8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a5288 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a91b0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a91d2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a91f0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9210 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a696e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a52de : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a77c1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a5fb1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a9231 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9236 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9252 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9272 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9292 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a7843 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6033 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a92b3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a69f0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5360 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a92b8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a92da : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a92f8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9318 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9334 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9354 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9374 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9394 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a6135 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a93b5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a93ba : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a940a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a90e0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a90fe : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a911e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9140 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9160 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9180 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9016 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000123022 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000123021 : mov byte ptr [rdi + 1], sil ; ret
0x00000000001231f0 : mov byte ptr [rdi + 2], 0 ; jne 0x123248 ; mov eax, r8d ; ret
0x000000000009dec3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009de33 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a9028 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a67a6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a51a6 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a75c9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5e79 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9039 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a903e : mov byte ptr [rdi + 3], ch ; ret
0x000000000009dee2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009de52 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a9056 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a67c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a51c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a75f7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a5e97 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9067 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a906c : mov byte ptr [rdi + 5], ch ; ret
0x000000000009de69 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a907e : mov byte ptr [rdi + 6], ch ; ret
0x000000000012f752 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a909c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d4d60 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d4d21 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d4d90 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d4db7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d4e00 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d4ded : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d4d50 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d4d30 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a90a8 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a5203 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7649 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a5ed9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a90b9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a90be : mov byte ptr [rdi + 9], ch ; ret
0x0000000000123206 : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000009ddc6 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000151f7b : mov byte ptr [rdi - 1], dl ; ret
0x000000000009de10 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d4d80 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d4dd9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a9002 : mov byte ptr [rdi], ch ; ret
0x000000000009f012 : mov byte ptr [rdi], cl ; ret
0x000000000009dd61 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a6780 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5180 : mov byte ptr [rdi], dh ; ret
0x00000000000a75a2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5e52 : mov byte ptr [rdi], dl ; ret
0x00000000000a9012 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a4caa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016a429 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a1efe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016a457 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a1f2c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a4c40 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a1fb0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000189d30 : mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000011c4e8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105241 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b84fd : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x000000000016a402 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a1ed7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000713fa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x0000000000077f3a : mov byte ptr [rdx], bh ; ret
0x0000000000102a14 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000713f9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000077f39 : mov byte ptr [rdx], dil ; ret
0x000000000002cae8 : mov byte ptr [rip + 0x397faf], dl ; ret
0x0000000000002478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000012354b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x000000000012354a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x0000000000094e04 : mov byte ptr [rsi + rdx + 1], al ; jg 0x94df7 ; ret
0x00000000001a5848 : mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x000000000004a773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x000000000004a6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x000000000007550f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000182022 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000183363 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001887f0 : mov ch, 0x52 ; hlt ; jmp qword ptr [rdx]
0x00000000001846ff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000ff1a7 : mov ch, 0x9f ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001850aa : mov ch, 0xab ; ret
0x000000000000378f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377b ; ret 0x975
0x00000000001b1259 : mov ch, 0xf5 ; call rdi
0x00000000001a6fa9 : mov ch, 0xfb ; call qword ptr [rax]
0x00000000001944d1 : mov ch, 0xfd ; call rcx
0x000000000016e796 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000fd581 : mov ch, byte ptr [rax + rax] ; ret
0x000000000011eb43 : mov ch, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000001a6105 : mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x000000000008df2b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001969c5 : mov cl, 0 ; add byte ptr [rsp + rcx*4 - 0x13], ah ; jmp rsp
0x00000000001089be : mov cl, 0x15 ; jl 0x108973 ; sub eax, dword ptr [rax] ; je 0x1089d1 ; pop rbp ; ret
0x0000000000003bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000ffbe7 : mov cl, 0x35 ; ret
0x00000000000bcdf8 : mov cl, 0x35 ; ret 0x308c
0x0000000000002be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000c6cfe : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e9ab3 : mov cl, 0x94 ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000114963 : mov cl, 0xd ; fistp qword ptr [rip + 0x3948002b] ; ret 0x840f
0x00000000001423f0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001a6019 : mov cl, 0xee ; call qword ptr [rax]
0x00000000000d5909 : mov cl, byte ptr [rax + 0x39] ; ret
0x000000000002c852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000910c5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009dde3 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x00000000000891e4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000001844d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000001738a2 : mov cl, byte ptr [rsi + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000009f010 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000019d969 : mov cl, ch ; jmp qword ptr [rsi]
0x000000000019d999 : mov cl, ch ; jmp rsp
0x00000000000ab36b : mov cl, dl ; and cl, 0xf ; je 0xab397 ; ret
0x000000000018478c : mov cs, edi ; ret 0x8b36
0x000000000014a5ee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000a51a0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001bcb84 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000007a60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d6 : mov dh, 0 ; pop rbx ; ret
0x0000000000077f63 : mov dh, 0 ; ret
0x000000000015ad81 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008e114 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033bd0 : mov dh, 0x17 ; test dl, dl ; jne 0x33bb6 ; ret
0x000000000011914c : mov dh, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e2eba : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000025944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x000000000006c206 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000012d292 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000d6a96 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd6a77 ; mov edx, eax ; jmp 0xd6a80
0x00000000000ce6b5 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000cdfd9 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006c853 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000046273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000098fd1 : mov dh, 0x45 ; ret
0x000000000009cf09 : mov dh, 0x45 ; ret 0x8348
0x0000000000098fc2 : mov dh, 0x45 ; ret 0x8349
0x000000000004bc83 : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000171241 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171231 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171201 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171221 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171211 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000e03ca : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x0000000000025c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d0d41 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001834c2 : mov dh, 0x4e ; ret 0x474c
0x000000000010d273 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x000000000012330d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000006ce29 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000d3a1b : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000989b7 : mov dh, 0x55 ; ret
0x000000000009afc5 : mov dh, 0x55 ; ret 0x8348
0x00000000000989a9 : mov dh, 0x55 ; ret 0x8349
0x0000000000171245 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000171235 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000171205 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000056807 : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000005678a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000171215 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000194bbc : mov dh, 0x5d ; cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x000000000005e59e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000eb531 : mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00000000001950a8 : mov dh, 0x85 ; cld ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00000000001955a0 : mov dh, 0xac ; cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00000000000887d5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000012daa8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ac5c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012d62d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e9dff : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000ba636 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cd007 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003522d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000d33ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c033b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000010e011 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006b31a : mov dh, 0xc0 ; neg eax ; ret
0x0000000000132dd6 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000012e9fb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000c6a0c : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000035f2a : mov dh, 0xc0 ; ret
0x00000000000aa038 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aa060 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a78e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011880e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000077f33 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000c26a6 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fe : mov dh, 0xc7 ; ret
0x0000000000184704 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000c262b : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008e13a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000e06b0 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008a591 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016d874 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005c1eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000005c418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x000000000019ff99 : mov dh, 0xeb ; jmp qword ptr [rax]
0x00000000000d8f63 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000abf52 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000003340c : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x0000000000194531 : mov dh, 0xfd ; call rcx
0x000000000007a621 : mov dh, 2 ; ret
0x00000000000e4b52 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d662c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016d871 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e111 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008a594 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000187b81 : mov dh, bl ; jmp rdx
0x000000000006dcb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000008cda5 : mov dh, byte ptr [rbx] ; add al, ch ; ret
0x00000000000aa1cc : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000001a5d81 : mov dh, ch ; call qword ptr [rsi]
0x00000000001a5db1 : mov dh, ch ; jmp rbx
0x000000000019a1d8 : mov dil, 0xf9 ; call rsp
0x0000000000003aa4 : mov dl, 0x1e ; ret
0x00000000000abcca : mov dl, 0x31 ; or al, 0 ; ret
0x00000000000c46b3 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000194c20 : mov dl, 0x60 ; cld ; inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x0000000000173bfd : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195844 : mov dl, 0x9e ; cld ; jmp qword ptr [rdx]
0x0000000000195644 : mov dl, 0xa8 ; cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x0000000000065d59 : mov dl, 0xeb ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fd8
0x0000000000187ed1 : mov dl, 0xf3 ; jmp rsp
0x0000000000109f95 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000a5e73 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a5e92 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a5ed3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000152000 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a75a0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5e50 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9010 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000f6fd0 : mov dl, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000189401 : mov dr0, ebp ; call rsi
0x0000000000187bb5 : mov dr0, ebx ; jmp rdx
0x00000000001959f9 : mov dr1, esp ; call rax
0x0000000000108b26 : mov ds, eax ; sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000106822 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000cc674 : mov dword ptr [0x2d0], eax ; ret
0x00000000000baa8f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000007ec46 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000000be633 : mov dword ptr [r12], 1 ; jmp 0xbe608
0x000000000012ccfe : mov dword ptr [r14], 0 ; ret
0x0000000000065ac7 : mov dword ptr [r14], r13d ; jmp 0x64bfa
0x00000000001233b0 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000003acb3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000123314 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000114c20 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000abd67 : mov dword ptr [r9 + 8], esi ; ret
0x000000000009f006 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000009eff1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000071c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000ccdeb : mov dword ptr [rax + 0x2f], esp ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000071c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000023acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acf : mov dword ptr [rax + 0x54], edx ; ret
0x000000000006b46b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007bb1a : mov dword ptr [rax + 8], 0 ; ret
0x000000000008e75e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000005bd92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000013b95d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fc718 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000001019f8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000bab90 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000033ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x0000000000081b3a : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000082338 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a7645 : mov dword ptr [rax], 0xf0473800 ; jmp qword ptr [rdi]
0x00000000000fc264 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c7528 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000001a3845 : mov dword ptr [rax], eax ; add al, bl ; jns 0x1a383e ; jmp qword ptr [rcx]
0x00000000000ab023 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e9d64 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000072165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000005fb88 : mov dword ptr [rax], edi ; jmp 0x5fb51
0x0000000000062807 : mov dword ptr [rax], edi ; jmp 0x627d0
0x00000000000fe611 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00000000001233b1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000083566 : mov dword ptr [rax], edi ; ret
0x00000000001066e3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abda1 : mov dword ptr [rax], edx ; jne 0xabd9d ; ret
0x000000000012311a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003acb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000e9dba : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000720a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000123315 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002d9d3 : mov dword ptr [rax], edx ; ret
0x0000000000072ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000e9d63 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000f5071 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d2534 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd255b
0x000000000004ea76 : mov dword ptr [rbp - 0x4e0], ebx ; call 0x8ad18
0x000000000004d64e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000069f55 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x661ec
0x0000000000023656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x00000000001131dd : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000113b13 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x0000000000113d6c : mov dword ptr [rbp - 0x80], eax ; call r9
0x00000000001131e3 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000011378a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000113c50 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000113724 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001132b3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000005224f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x000000000014138d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001186c5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a5fa : mov dword ptr [rbp], edx ; call rax
0x0000000000070982 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070981 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c7908 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc78de
0x0000000000142a06 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010e0c4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b5d5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001429be : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010e0f4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076ba5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000013b629 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e77db : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077495 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000088609 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x0000000000088608 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003522f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fb601 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000886be : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007b20b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000072dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000072ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078327 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002a6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010e094 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b42a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000088a9d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001019e2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000d1621 : mov dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret
0x000000000013b7f3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000142c31 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013767f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000101982 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000136360 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006df3a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000088606 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000047d7c : mov dword ptr [rbx], edx ; jg 0x47c91 ; pop rbx ; ret
0x0000000000088b23 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000886bb : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000131724 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000134518 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000134475 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000134545 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002057d : mov dword ptr [rcx + 0x968], eax ; ret
0x0000000000168102 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000ab4a0 : mov dword ptr [rcx + 4], eax ; jne 0xab46e ; ret
0x00000000001680f3 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000ab49f : mov dword ptr [rcx + 4], r8d ; jne 0xab46f ; ret
0x0000000000168164 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000168174 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000168143 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168134 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000abd68 : mov dword ptr [rcx + 8], esi ; ret
0x000000000009dd96 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000481cb : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010847f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000009f007 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000009eff2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000009efe1 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000d0a1c : mov dword ptr [rcx], 0xdf75d284 ; ret
0x0000000000198a55 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00000000000d6102 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006045c : mov dword ptr [rcx], eax ; jmp 0x60425
0x000000000003577a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071277 : mov dword ptr [rcx], eax ; ret
0x0000000000075664 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000001233b4 : mov dword ptr [rcx], ecx ; ret
0x00000000000710d1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000123388 : mov dword ptr [rcx], edi ; ret
0x000000000008dc87 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x00000000001680c1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001680e0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168121 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168100 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168141 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168151 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168161 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168171 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168181 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168191 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000001680f0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168131 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000123318 : mov dword ptr [rcx], edx ; ret
0x00000000000f5cdb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f5d12 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a690d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a775d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a694b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a779b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a69cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a781d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a52db : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5fae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a535d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000048b3f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a91cd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a920b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a928d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6030 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a53a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a53c0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5381 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000f5d00 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000a6a33 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7883 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a53a3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a92f3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013b230 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a6a15 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7865 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6a53 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a78a3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a5385 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a92d5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9313 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013b2c2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013b1f6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000beb5e : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbad9a
0x000000000010db5a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10db2c
0x0000000000134d2c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013b371 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d5fea : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d5fe9 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d5fee : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d5fed : mov dword ptr [rdi + 0x30], r8d ; ret
0x0000000000094121 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000134ce4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000208ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007b163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007e80b : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036049 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000f533e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000ab6a2 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012245f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a698d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a77dd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a52fd : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a924d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a692b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a777b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a69ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a77fd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a52bb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a91eb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a926d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015abc5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015aa08 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015aca8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015ab55 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015a998 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b373 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a67f7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a7627 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000015aae5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015a928 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a51e7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9097 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009dea3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009de03 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007e80e : mov dword ptr [rdi + 4], eax ; ret
0x000000000003b36d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009def3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a7609 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000015a8b8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ddf3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a51d9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a9079 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f5390 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009dea2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009de02 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a688b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a76cb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015a848 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a524b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a913b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a68ab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a76eb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015a7d8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a525b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a915b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a6849 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7689 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a68cb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a770b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015a768 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5229 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a90f9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a917b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000fe648 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000abe85 : mov dword ptr [rdi + 8], eax ; je 0xabe40 ; mov rax, rbx ; pop rbx ; ret
0x000000000007b137 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000048ac4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000a766b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a6869 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a76a9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a682b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000482f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003ac94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac85 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a90db : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9119 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fb772 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000036472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000123498 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000123493 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000014cf83 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000008e765 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008e76e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x0000000000151cc5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000151d03 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000015204c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a218 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015222c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a198 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015241c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a118 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001525ed : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a089 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001527ed : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000159ff9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001529ed : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000159f69 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6170 : mov dword ptr [rdi - 1], edx ; ret
0x00000000001523cd : mov dword ptr [rdi - 2], ecx ; ret
0x00000000001521e5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001523c9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009dd4f : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000001527a9 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000151e7f : mov dword ptr [rdi - 4], edx ; ret
0x000000000009ddab : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00000000001527a6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009dd35 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00000000001529a6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ddc9 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000152ba6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000489ba : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000151d07 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000151e7c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151f78 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000151ec4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a298 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a7a0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000bf7dc : mov dword ptr [rdi], eax ; jmp 0xbf36f
0x00000000000fe635 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000f358f : mov dword ptr [rdi], eax ; mov rdi, rbx ; call 0x1f7f7
0x00000000000489b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048abe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003655b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000054d86 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009dd72 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009ded0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a67c5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6817 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a67a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a51a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a75c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5e77 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009de50 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a75f5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a5e95 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7647 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a5ed7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a67f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a7625 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a51e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009de00 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a6847 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7687 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a5227 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6867 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a76a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a5237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008e763 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000a9a47 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a5248 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5258 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5268 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008e76b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009de40 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009ddf0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a51d6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5218 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9a53 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000093ee7 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x000000000001f9c3 : mov dword ptr [rdi], ecx ; ret
0x00000000000a6794 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a75b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a67b2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a75e2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6804 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7634 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6190 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a61d1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a61f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6201 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6211 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6221 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a61a0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a61e1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000034dd6 : mov dword ptr [rdi], edx ; ret
0x00000000000a9024 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9052 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a90a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000350c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000009deb1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009de31 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009efef : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000014cf6b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004a07d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009efde : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014cf4e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009de21 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000009f003 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000014cf80 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000004a0a3 : mov dword ptr [rdi], esi ; ret
0x00000000000f5371 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x0000000000134dec : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006dcb7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00000000000784b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x00000000000941af : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000710ce : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071274 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000012dc00 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000012dbdc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012dbe0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00000000001317c0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000134ccc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000baa90 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000016a487 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a1f6c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016a469 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a1f4e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016a51b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016a499 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000166149 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016a53b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a4b9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000166159 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016a4d9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a55b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a1ff0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000006b414 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016a4f9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016a3eb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a1fd2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000131741 : mov dword ptr [rdx + 8], edi ; ret
0x000000000006e574 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00000000000fbb2f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000016a414 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000016a442 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a394 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000078961 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003545a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004a07f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c93cd : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000791c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a1ee9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c8bb2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002e19d : mov dword ptr [rdx], eax ; ret
0x00000000000762df : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000011ec2f : mov dword ptr [rdx], ebp ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000aa265 : mov dword ptr [rdx], ecx ; jne 0xaa25d ; ret
0x0000000000071f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000e9ab7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000009e175 : mov dword ptr [rdx], ecx ; ret
0x000000000001f92b : mov dword ptr [rdx], edi ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000e6f1b : mov dword ptr [rdx], edi ; ret
0x00000000000c9223 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c92ed : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000013173e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000943d7 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c93cc : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000017372f : mov dword ptr [rip + 0x25200b], ebx ; jne 0x173721 ; pop rbx ; ret
0x0000000000114ef8 : mov dword ptr [rip + 0x2b2222], eax ; pop rbp ; ret
0x0000000000108970 : mov dword ptr [rip + 0x2ba8ca], ebx ; pop rbx ; ret
0x00000000001008ba : mov dword ptr [rip + 0x2c2950], edi ; ret
0x00000000000fd905 : mov dword ptr [rip + 0x2c6e95], eax ; mov rdx, rax ; jmp 0xfd8a7
0x00000000000368bb : mov dword ptr [rip + 0x38c7cb], eax ; mov eax, edx ; ret
0x00000000000368ac : mov dword ptr [rip + 0x38c7d6], edx ; ret
0x000000000001f928 : mov dword ptr [rip + 0x3a89da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000e7cc4 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003b296 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003ac00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003ac04 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000077f36 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000fb5e7 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000fa9b6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000f52af : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003b2e0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003b327 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000ab4e8 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e7ca7 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000012cce1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e7cc0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000ba6a1 : mov dword ptr [rsi + rcx], edx ; jne 0xba69e ; ret
0x00000000000a9a56 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000000a9a49 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000012ccff : mov dword ptr [rsi], 0 ; ret
0x000000000009dd33 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000012cd90 : mov dword ptr [rsi], 0xa ; ret
0x000000000012cd80 : mov dword ptr [rsi], 0xb ; ret
0x000000000012cdb0 : mov dword ptr [rsi], 0xc ; ret
0x000000000012cda0 : mov dword ptr [rsi], 8 ; ret
0x00000000000be8f8 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8ab77
0x000000000007783b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000065ac8 : mov dword ptr [rsi], ebp ; jmp 0x64bf9
0x00000000000f35d1 : mov dword ptr [rsi], ebx ; call 0x1f8ac
0x00000000001229cf : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x0000000000122463 : mov dword ptr [rsi], edi ; ret
0x0000000000118771 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003acb6 : mov dword ptr [rsi], edx ; ret
0x0000000000081148 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081031 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ec47 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000081143 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00000000000e35ce : mov dword ptr [rsp + 0x18], edx ; call 0x1f8a6
0x000000000012bc07 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000080d0f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x000000000008108b : mov dword ptr [rsp + 0x20], edx ; call rax
0x0000000000081086 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012b3bd : mov dword ptr [rsp + 0x28], ecx ; call 0x137646
0x00000000000335d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000f350b : mov dword ptr [rsp + 0x40], eax ; call 0x1f7f6
0x00000000000e10b8 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bb658 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x000000000006aa53 : mov dword ptr [rsp + 0xc], edx ; call 0xf6d06
0x0000000000088670 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102156 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013a8bd : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b6fc : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x0000000000035003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000be634 : mov dword ptr [rsp], 1 ; jmp 0xbe607
0x00000000000889e0 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x0000000000129923 : mov dword ptr [rsp], ecx ; call r12
0x00000000000cc673 : mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000fc717 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000001019f7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000bab8f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000082337 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c7527 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000005fb87 : mov dword ptr fs:[rax], edi ; jmp 0x5fb52
0x0000000000062806 : mov dword ptr fs:[rax], edi ; jmp 0x627d1
0x00000000000fe610 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000e9db9 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000e9d62 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000121280 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006045b : mov dword ptr fs:[rcx], eax ; jmp 0x60426
0x0000000000035779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006e573 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000078960 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035459 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c9222 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c92ec : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000014cf6a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000001521e0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a5190 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fac96 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000107ec6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000d605c : mov eax, 0 ; cmove eax, esi ; ret
0x00000000000968d5 : mov eax, 0 ; cmovne rax, rdi ; ret
0x000000000012b384 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000aa112 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000122d30 : mov eax, 0x100 ; ret
0x0000000000122d2a : mov eax, 0x101 ; ret
0x0000000000122d36 : mov eax, 0x102 ; ret
0x0000000000122d22 : mov eax, 0x104 ; ret
0x00000000000fc13d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000f5cf3 : mov eax, 0x16 ; jbe 0xf5d08 ; ret
0x0000000000086a54 : mov eax, 0x16 ; je 0x86a67 ; ret
0x00000000000f5365 : mov eax, 0x16 ; je 0xf5378 ; ret
0x0000000000086bf0 : mov eax, 0x16 ; ret
0x00000000000f5d28 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000001a67cd : mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00000000000ccf2a : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000aa10b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000ccf0f : mov eax, 0x20 ; ret
0x000000000002def7 : mov eax, 0x200 ; ret
0x0000000000125e87 : mov eax, 0x200000 ; jmp 0x125e56
0x00000000000aa104 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000aa0fd : mov eax, 0x40 ; pop rbx ; ret
0x00000000000ccf55 : mov eax, 0x40 ; ret
0x00000000000bb65b : mov eax, 0x41000000 ; call rsp
0x000000000018261b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008ec4a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000f62f0 : mov eax, 0x5f ; syscall ; ret
0x00000000000aa0f6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000cc690 : mov eax, 0x66 ; syscall ; ret
0x00000000000cc6b0 : mov eax, 0x68 ; syscall ; ret
0x00000000000cc6a0 : mov eax, 0x6b ; syscall ; ret
0x00000000000cc6c0 : mov eax, 0x6c ; syscall ; ret
0x00000000000cc680 : mov eax, 0x6e ; syscall ; ret
0x00000000000cc8d0 : mov eax, 0x6f ; syscall ; ret
0x00000000000cce29 : mov eax, 0x7d00 ; ret
0x00000000000cce58 : mov eax, 0x7e ; ret
0x00000000000ccdfa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000ccdab : mov eax, 0x7f ; ret
0x00000000000aa0ef : mov eax, 0x80 ; pop rbx ; ret
0x000000000005cd94 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x000000000010ace4 : mov eax, 0x8948002b ; ret 0x8d48
0x00000000000f5084 : mov eax, 0x89fffffe ; ret 0xcb8
0x00000000000749b1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000186f64 : mov eax, 0x8fff0be ; sal eax, -1 ; pop rax ; ret
0x0000000000003184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000013184f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000db540 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db50a : mov eax, 0xc ; ret
0x000000000018ba0c : mov eax, 0xc8fffb01 ; add ebx, edi ; call rax
0x00000000000bb7c0 : mov eax, 0xc9 ; syscall ; ret
0x0000000000118760 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000001186f9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00000000001144d2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000001377b6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000106c00 : mov eax, 0xe4 ; syscall ; ret
0x000000000006960f : mov eax, 0xe9fffffb ; ret 0xffff
0x00000000000cce4f : mov eax, 0xfa ; ret
0x00000000000cce70 : mov eax, 0xfc17 ; ret
0x00000000000ccddc : mov eax, 0xfde8 ; jne 0xccdb3 ; ret
0x00000000000cce60 : mov eax, 0xfffa ; ret
0x00000000000cb3fc : mov eax, 0xfffffff2 ; ret
0x0000000000085a32 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000000f5f2a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x000000000008a8a2 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x0000000000073021 : mov eax, 0xffffffff ; ja 0x73038 ; ret
0x0000000000070b81 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000039cee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007044c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0e : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000353e7 : mov eax, 0xffffffff ; ret
0x00000000000fd2af : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000171d40 : mov eax, 1 ; jg 0x171d59 ; neg eax ; ret
0x00000000000ab0b0 : mov eax, 1 ; jg 0xab0c2 ; neg eax ; ret
0x000000000016fc96 : mov eax, 1 ; jl 0x16fca9 ; neg eax ; ret
0x00000000000cd042 : mov eax, 1 ; js 0xcd058 ; ret
0x000000000004a09d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000d8c26 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c41
0x0000000000070b6d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007ba62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010de70 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000012a460 : mov eax, 1 ; pop rbx ; ret
0x0000000000048063 : mov eax, 1 ; ret
0x00000000000ab3d1 : mov eax, 2 ; ret
0x0000000000114c16 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000ab3e1 : mov eax, 3 ; ret
0x00000000000fcf32 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x00000000001215a3 : mov eax, 3 ; syscall ; ret
0x00000000000ab3f1 : mov eax, 4 ; ret
0x00000000000ef0dc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000001057ef : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00000000000ab401 : mov eax, 5 ; ret
0x00000000000ab411 : mov eax, 6 ; ret
0x00000000001123bc : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000ab421 : mov eax, 7 ; ret
0x00000000000aa0e8 : mov eax, 8 ; pop rbx ; ret
0x00000000000f5187 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113d68 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000033e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000105689 : mov eax, dword ptr [rax + 0x108] ; ret
0x000000000014292f : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x0000000000109030 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000108de0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000127b87 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127b97 ; ret
0x00000000000fc7e8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfc7fb ; ret
0x0000000000072222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007206a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000113de9 : mov eax, dword ptr [rax + 0x30] ; ret
0x0000000000109757 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001053dc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007b708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000001343c4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000074f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000134c64 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003a726 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000139ec5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000105679 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000088a1b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x88a19 ; ret
0x000000000002def5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e0b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002da1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002da68 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010a0e4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x000000000019643d : mov eax, dword ptr [rax] ; add byte ptr [rcx + rbx*2 - 0x16], ah ; call rsp
0x0000000000139eba : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002decc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000127e09 : mov eax, dword ptr [rax] ; ret
0x000000000007e06f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x00000000000849b6 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x849c6 ; call rax
0x000000000006960d : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65865
0x00000000001025ec : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000222c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000077491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000001131e0 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000001fc03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012db81 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013764a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x137660 ; pop rbx ; ret
0x00000000000a1f69 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166146 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166156 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a1fed : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a200d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001460fa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001479d2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000033e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000016a440 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001317d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a1f15 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016a391 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000166061 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016a411 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a1ee6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000072e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c860 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c888 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001145a0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1145b8 ; ret
0x00000000000cb9cd : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e2 ; call rax
0x000000000013b5f3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013b191 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012ccde : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000c7ca1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000173388 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x17339f ; call rax
0x00000000000ab030 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0b8 ; ret
0x00000000000ab045 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0b8 ; ret
0x000000000012cd37 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013b570 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000774d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000ab050 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b8 ; ret
0x00000000000ab06b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0b8 ; ret
0x00000000000ab080 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0b8 ; ret
0x00000000000ab095 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0b8 ; ret
0x00000000000ab0a0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b8 ; ret
0x000000000012cd6f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d6660 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007cb31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000075ad8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af0 ; ret
0x00000000000f5380 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fb720 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013a649 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012dab1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af59 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013af69 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000139ec1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000139eb6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000137de9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000139fa1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012b8b7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000aba6d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xaba49 ; ret
0x0000000000077430 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077400 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000134d50 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007c84f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001145b5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c7db0 : mov eax, dword ptr [rdi] ; ret
0x0000000000077f00 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000077f10 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000132454 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132466 ; ret
0x0000000000132453 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132467 ; ret
0x00000000001385b4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c6 ; ret
0x00000000001385b3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c7 ; ret
0x00000000000abb28 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xabb28 ; xor eax, eax ; ret
0x000000000002de83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aa1c7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b9 ; ret
0x00000000000910c6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012d1c8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000074630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6f18 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000072167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705cc : mov eax, dword ptr [rdx] ; ret
0x000000000007c841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x0000000000140334 : mov eax, dword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x000000000013fd21 : mov eax, dword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00000000001203e1 : mov eax, dword ptr [rip + 0x2a4491] ; ret
0x0000000000109751 : mov eax, dword ptr [rip + 0x2b9719] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008355f : mov eax, dword ptr [rip + 0x33f97b] ; mov qword ptr [rax], rdi ; ret
0x0000000000081165 : mov eax, dword ptr [rip + 0x341c65] ; xor edi, edi ; call qword ptr [rax]
0x0000000000080f40 : mov eax, dword ptr [rip + 0x341e8a] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb11 : mov eax, dword ptr [rip + 0x347a09] ; ret
0x0000000000036880 : mov eax, dword ptr [rip + 0x38c802] ; ret
0x0000000000036870 : mov eax, dword ptr [rip + 0x38c816] ; ret
0x000000000002d9cc : mov eax, dword ptr [rip + 0x39541e] ; mov qword ptr [rax], rdx ; ret
0x0000000000029c91 : mov eax, dword ptr [rip + 0x39ac59] ; ret
0x0000000000021a51 : mov eax, dword ptr [rip + 0x3a68b9] ; ret
0x0000000000021a41 : mov eax, dword ptr [rip + 0x3a68d9] ; ret
0x0000000000113d69 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002e0b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000010d50b : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000720a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000c7f5e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000ef457 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef499
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000111fa5 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x111f73
0x0000000000035839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f5f08 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000142bde : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000b9454 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cb7ea : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcb7fe ; call rax
0x00000000000fd260 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cb6c0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001097b3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000109814 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008263d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123204 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000fb8ed : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c90 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fb9a8 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a807 : mov eax, eax ; pop rbx ; ret
0x00000000000504ba : mov eax, eax ; ret
0x000000000007912a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001296ba : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000006e7db : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006eff9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2b5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d363 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000500e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000048433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000079a9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000942c7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8574 : mov eax, ebx ; call rax
0x0000000000095599 : mov eax, ebx ; jmp 0x953f3
0x000000000010523f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003aaaf : mov eax, ebx ; pop rbx ; ret
0x000000000010140a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000482f7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000003a68c : mov eax, ecx ; or rax, rdx ; ret
0x0000000000086ead : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005b774 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033ea7 : mov eax, ecx ; ret
0x0000000000045a22 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000115881 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002df20 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000001187c6 : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000001187a0 : mov eax, edi ; bswap eax ; ret
0x000000000003a6a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00000000000fe6d7 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009de67 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000002121b : mov eax, edi ; neg eax ; ret
0x000000000009e965 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000967aa : mov eax, edi ; pop rbx ; ret
0x000000000002122e : mov eax, edi ; ret
0x00000000001187b0 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003a632 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000001184aa : mov eax, edi ; sar rax, 6 ; ret
0x0000000000118846 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000bacd8 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fd167 : mov eax, edx ; add rsp, 0x48 ; ret
0x000000000008363d : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d725 : mov eax, edx ; add rsp, 8 ; ret
0x000000000018829c : mov eax, edx ; call qword ptr [rcx]
0x000000000010ff6c : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000096db6 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cc64b : mov eax, edx ; jle 0xcc65d ; ret
0x00000000000c902f : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047a12 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000054b8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083ff7 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c47 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000490b5 : mov eax, edx ; pop rbx ; ret
0x00000000000218a5 : mov eax, edx ; ret
0x0000000000034f01 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000d6703 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000c93cf : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012dc71 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8bb5 : mov eax, esi ; add rsp, 8 ; ret
0x000000000004a5be : mov eax, esi ; cmovae rax, rdi ; ret
0x00000000000352e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006fc84 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000c7953 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b633 : mov eax, esi ; pop rbx ; ret
0x000000000004a6f4 : mov eax, esi ; ret
0x0000000000171f0b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000008e4ec : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c47a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000717cb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c43c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123203 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000fb8ec : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000fb9a7 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070fef : mov eax, r8d ; pop rbx ; ret
0x00000000000504b9 : mov eax, r8d ; ret
0x000000000013f987 : mov eax, r9d ; ret
0x00000000001a1f0d : mov ebp, 0x41380e0a ; ret
0x00000000000fd979 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009e541 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009e551 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009e531 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000581ff : mov ebp, 0x830012d1 ; ret
0x000000000013b943 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000103ab9 : mov ebp, 0x8b49fff1 ; call rbx
0x0000000000103ad4 : mov ebp, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x0000000000103ac6 : mov ebp, 0x8b49fff1 ; jge 0x103ad4 ; call rbx
0x00000000001870f5 : mov ebp, 0xbfc8fffd ; std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000017c824 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000194751 : mov ebp, 0xc190fffb ; sti ; jmp rax
0x000000000018115d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000009e5b1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009e591 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009e571 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000009e662 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008c8a8 : mov ebp, 0xf80148c0 ; ret
0x000000000008cb2c : mov ebp, 0xf80148c6 ; ret
0x0000000000183246 : mov ebp, 0xfb67d10d ; ret
0x000000000004dc26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004e1b6 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000564af : mov ebp, 0xfffffb58 ; call rax
0x000000000004c389 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000ce756 : mov ebp, 0xfffffcf8 ; call r12
0x00000000000eb304 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000ebb16 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x0000000000133c41 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00000000000eb071 : mov ebp, 0xffffff78 ; call rbx
0x00000000000dba2e : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000012dc48 : mov ebp, dr1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000fd3ae : mov ebp, dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000013243c : mov ebp, eax ; call 0x12e714
0x0000000000085eff : mov ebp, eax ; call 0x82184
0x0000000000101c47 : mov ebp, eax ; call rax
0x0000000000065979 : mov ebp, eax ; jmp 0x653d5
0x0000000000137979 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13798d
0x00000000001a3db1 : mov ebp, ebp ; jmp qword ptr [rbx]
0x00000000001025e9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000195eb1 : mov ebp, ecx ; jmp rsp
0x00000000000352ed : mov ebp, ecx ; nop ; jmp rdx
0x00000000001975a1 : mov ebp, edi ; jmp rsp
0x00000000000ae028 : mov ebp, edi ; setne dl ; jmp 0xae03c
0x00000000000b0949 : mov ebp, edi ; setne dl ; jmp 0xb095c
0x00000000000b3100 : mov ebp, edi ; setne dl ; jmp 0xb311c
0x00000000001029ef : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000007d8ad : mov ebp, edx ; call qword ptr [r15]
0x0000000000129a25 : mov ebp, esp ; call r15
0x0000000000114de4 : mov ebp, esp ; pop rbp ; ret
0x00000000001a3f29 : mov ebp, gs ; jmp qword ptr [rax]
0x00000000001969c9 : mov ebp, gs ; jmp rsp
0x0000000000173caa : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x0000000000103d42 : mov ebx, 0x1f0ffff1 ; add bl, dh ; ret
0x0000000000002d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000007d269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011faa1 : mov ebx, 0x48002a4d ; add esp, 8 ; ret
0x0000000000058398 : mov ebx, 0x83ffffe5 ; ret
0x00000000000c8c34 : mov ebx, 0x8948002f ; ret 0x8d48
0x0000000000118ca9 : mov ebx, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000103d26 : mov ebx, 0x8b48fff1 ; jge 0x103d34 ; call rbx
0x0000000000103d18 : mov ebx, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x0000000000103d0a : mov ebx, 0x8b49fff1 ; jge 0x103d18 ; call rbx
0x0000000000003671 : mov ebx, 0x952a6c41 ; ret
0x00000000000d4fb3 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x0000000000114504 : mov ebx, 0xafb8341 ; je 0x114513 ; ret
0x000000000018115b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000001316a6 : mov ebx, 0xc8 ; call rax
0x00000000001945a0 : mov ebx, 0xd1fffdb5 ; mov bh, 0xfd ; call rcx
0x00000000001945c0 : mov ebx, 0xd1fffdb6 ; mov bh, 0xfd ; call rcx
0x000000000005f80c : mov ebx, 2 ; jmp 0x5baf7
0x00000000001147f2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000017367f : mov ebx, dword ptr [rdi + 0x10] ; call 0x1f8ad
0x00000000001029f6 : mov ebx, eax ; call rax
0x0000000000188508 : mov ebx, eax ; jmp qword ptr [rdi]
0x000000000012d6bb : mov ebx, eax ; jne 0x12d659 ; xor eax, eax ; pop rbx ; ret
0x0000000000125b5f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000fbea7 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037307 : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000002c376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x000000000010d445 : mov ebx, edx ; jmp 0x10d370
0x00000000000c9c05 : mov ebx, edx ; jmp 0xc9ad8
0x0000000000187b71 : mov ebx, esi ; call qword ptr [rsi]
0x0000000000187b75 : mov ebx, esi ; jmp rdx
0x000000000012b346 : mov ebx, esi ; sub rsp, 8 ; call 0x137648
0x000000000012d1c3 : mov ecx, 0x48002959 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00000000000d8fb3 : mov ecx, 0x83000005 ; ret 0x3902
0x00000000000f2573 : mov ecx, 0x89002d61 ; ret
0x0000000000127482 : mov ecx, 0x89480029 ; ret 0x1be
0x00000000000c8da4 : mov ecx, 0x8948002f ; ret 0x8d48
0x0000000000033edb : mov ecx, 0x8948fffe ; fucompi st(0) ; ret 0xfeb9
0x00000000001369eb : mov ecx, 0x90ffee8e ; pop rbx ; ret
0x0000000000188114 : mov ecx, 0x94fff3ab ; test al, 0xf3 ; call rdi
0x0000000000181159 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000033ee3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x000000000002b390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x000000000012aba7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000047c94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x000000000009efec : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000013b2d0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b2e9 ; xor eax, eax ; ret
0x000000000013b310 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b329 ; xor eax, eax ; ret
0x0000000000047bb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000015042e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000074f4b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000000910c3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000aba59 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xaba57 ; ret
0x0000000000047f46 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000001527a3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001529a3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152ba3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a51c0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5201 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015abc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ab53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015aae3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015aa05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a995 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a925 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a8b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a845 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a7d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a765 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015aca5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a51a1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000134fcd : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x0000000000131b95 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x000000000013726e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013199d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012c92d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000d8c24 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c43
0x000000000009e184 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012cd4c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000009e196 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000129e31 : mov ecx, ebp ; call rbx
0x0000000000075291 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000acaba : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000002be41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009de7e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000acd6d : mov ecx, edi ; call rbx
0x0000000000109889 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000014d081 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014d084 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007ba07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000002185b : mov ecx, esi ; call rbx
0x00000000001296bd : mov ecx, esi ; mov rdi, r13 ; call r12
0x0000000000117189 : mov ecx, esp ; mov rsi, r12 ; call 0x73447
0x000000000010e2f4 : mov edi, 0x2000004 ; call rax
0x00000000001050b0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000332f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001a44a4 : mov edi, 0x380e0a01 ; ret
0x000000000010527b : mov edi, 0x48000888 ; mov eax, ebx ; pop rbx ; ret
0x00000000001038fd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000004764f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000067898 : mov edi, 0x89000000 ; ret 0x348
0x000000000010390b : mov edi, 0x8b49fff1 ; call rbx
0x000000000010399e : mov edi, 0x8b49fff1 ; jge 0x1039ac ; call rbx
0x0000000000194791 : mov edi, 0xc200fffb ; sti ; call qword ptr [rax - 0x3d]
0x0000000000196bad : mov edi, 0xc7440000 ; in eax, dx ; call rsp
0x000000000006ddd7 : mov edi, 0xe0 ; call rax
0x000000000006dd9b : mov edi, 0xe0 ; jmp rax
0x000000000009ce2b : mov edi, 0xf700000b ; ret 0
0x00000000000346bd : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x000000000011d8d7 : mov edi, dword ptr [rax] ; call 0xf6d08
0x00000000000ba471 : mov edi, dword ptr [rax] ; call r14
0x0000000000102153 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000001735ea : mov edi, dword ptr [rbp + 0x20] ; call 0x1f8ad
0x00000000001735e1 : mov edi, dword ptr [rbp + 0x70] ; call 0x1f8ad
0x00000000000ce755 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00000000000564ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00000000000cc42e : mov edi, dword ptr [rbp - 0x58] ; call 0x1f8b1
0x00000000000eb070 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00000000001735fb : mov edi, dword ptr [rbp] ; call 0x1f8ad
0x00000000000abf55 : mov edi, dword ptr [rbp] ; call r12
0x0000000000038f6d : mov edi, dword ptr [rbp] ; call r14
0x0000000000101daa : mov edi, dword ptr [rbp] ; call rbx
0x000000000011f18d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11f189 ; pop rbx ; ret
0x00000000001735bd : mov edi, dword ptr [rbx] ; call 0x1f8ac
0x0000000000132451 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132469 ; ret
0x00000000001385b1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c9 ; ret
0x0000000000047bba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dd9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000101d58 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000072fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72fb4
0x0000000000112734 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000183506 : mov edi, dword ptr [rdx] ; ret
0x0000000000101d17 : mov edi, dword ptr [rsi] ; call rbx
0x000000000010223f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c86ff : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f35cc : mov edi, dword ptr [rsp + 0x48] ; mov qword ptr [r14], rbx ; call 0x1f8b1
0x000000000012c949 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bb200 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00000000001021a0 : mov edi, dword ptr [rsp] ; call rbx
0x0000000000136214 : mov edi, eax ; call qword ptr [r10]
0x00000000000ec27a : mov edi, eax ; call rbx
0x0000000000086bfa : mov edi, eax ; call rcx
0x0000000000136306 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136117 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000004a6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x0000000000085efc : mov edi, eax ; mov rbp, rax ; call 0x82187
0x000000000012aba4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000085f88 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000139b9b : mov edi, ebp ; add rbx, r12 ; call r14
0x0000000000171f7c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000f3455 : mov edi, ebp ; call 0xef754
0x00000000000faaf1 : mov edi, ebp ; call 0xf6d04
0x000000000012d75e : mov edi, ebp ; call qword ptr [rbx]
0x000000000011f36e : mov edi, ebp ; call r12
0x00000000000391ac : mov edi, ebp ; call r14
0x0000000000037347 : mov edi, ebp ; call r15
0x000000000011c305 : mov edi, ebp ; call rax
0x00000000000ac6e6 : mov edi, ebp ; call rbx
0x000000000013b3a1 : mov edi, ebp ; call rcx
0x000000000012d255 : mov edi, ebp ; call rdx
0x000000000012bed5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013a8e4 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000134fca : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000131b92 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013199a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000129e2e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00000000000378b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x0000000000084e13 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012cb5d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000f3592 : mov edi, ebx ; call 0x1f7f4
0x00000000000ef0f6 : mov edi, ebx ; call 0x3b3c4
0x00000000000bce7b : mov edi, ebx ; call 0x89164
0x00000000000be8fb : mov edi, ebx ; call 0x8ab74
0x00000000000cdf15 : mov edi, ebx ; call qword ptr [r15]
0x000000000012db88 : mov edi, ebx ; call qword ptr [rax]
0x0000000000029c47 : mov edi, ebx ; call r12
0x0000000000021be0 : mov edi, ebx ; call r14
0x000000000006cb49 : mov edi, ebx ; call r8
0x000000000011eeba : mov edi, ebx ; call rax
0x00000000001734fb : mov edi, ebx ; jne 0x1734f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129920 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x0000000000129a22 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000222be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c7f5b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000087556 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007d8c2 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x000000000007221e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000139d20 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000173688 : mov edi, ebx ; test rdi, rdi ; jne 0x173682 ; pop rbx ; ret
0x00000000000f3656 : mov edi, ecx ; call 0x1f8ac
0x00000000000886b8 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000065d5d : mov edi, edi ; call 0x71fd4
0x000000000005f10f : mov edi, edi ; call 0x7b3a4
0x0000000000137df0 : mov edi, edi ; call qword ptr [rax]
0x0000000000139c7e : mov edi, edi ; call r14
0x0000000000074015 : mov edi, edi ; call rax
0x0000000000102a84 : mov edi, edi ; call rbx
0x00000000000ff15d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000001374af : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000080d0c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000010a33c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000075294 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000000f35e8 : mov edi, edx ; call 0x1f8ac
0x00000000001145b8 : mov edi, edx ; jmp rax
0x000000000004a771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x0000000000080f47 : mov edi, esi ; call qword ptr [rax]
0x000000000012c6c8 : mov edi, esi ; call rax
0x0000000000102a64 : mov edi, esi ; call rbx
0x000000000012bde3 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012c92a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000133533 : mov edi, esp ; call 0x1f7e4
0x000000000013a9ff : mov edi, esp ; call qword ptr [rax]
0x000000000003730a : mov edi, esp ; call r15
0x000000000012ac96 : mov edi, esp ; call rax
0x0000000000074fe9 : mov edi, esp ; call rbx
0x0000000000139d91 : mov edi, esp ; call rdx
0x000000000006aa51 : mov edi, esp ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d08
0x00000000000acd6a : mov edi, esp ; mov r9, r15 ; call rbx
0x00000000000882a6 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000001295ee : mov edi, esp ; mov rsi, r14 ; call 0x558b7
0x000000000006aa50 : mov edi, r12d ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d09
0x00000000000cb3c9 : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000122d17 : mov edx, 0x102 ; cmove eax, edx ; ret
0x0000000000122cda : mov edx, 0x104 ; cmove eax, edx ; ret
0x0000000000122cbc : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000000784b6 : mov edx, 0x130 ; pop rbx ; ret
0x00000000001419ba : mov edx, 0x190 ; call 0x2dc47
0x0000000000021972 : mov edx, 0x2c ; call 0x2dc47
0x000000000011e79f : mov edx, 0x448b0006 ; ret 0x4804
0x0000000000117c62 : mov edx, 0x48fff949 ; add esp, 0x28 ; ret
0x0000000000021953 : mov edx, 0x4a ; call 0x2dc47
0x0000000000194d4c : mov edx, 0x60fffc5b ; pop rbx ; cld ; call rax
0x00000000001a698d : mov edx, 0x73700000 ; out dx, eax ; call rax
0x00000000001a6a1d : mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x00000000000d73a9 : mov edx, 0x840f002e ; ret 2
0x00000000001829be : mov edx, 0xcac982a4 ; call 0xffffffffaedac83e
0x00000000000c3c22 : mov edx, 0xe9ffffea ; ret 0xfff3
0x000000000008da99 : mov edx, 0xf480001 ; ret 0x66c3
0x0000000000023b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000006ff7e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010c3d8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000003a6ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000013a89c : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013a8e6 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001323ac : mov edx, 5 ; call 0x2e627
0x00000000000218a0 : mov edx, 8 ; mov eax, edx ; ret
0x00000000001aa1c4 : mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x0000000000077465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cb93c : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb951 ; call rdx
0x0000000000071f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000113721 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113633 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001132b0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000113787 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000078770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000113c4d : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000117aaf : mov edx, dword ptr [rbx] ; jmp 0x117a78
0x00000000001479cf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001460fd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000007400e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000754c6 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000001145b1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000036266 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000088ac5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88ac9 ; ret
0x0000000000173270 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173282 ; call rdx
0x000000000011393b : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a51e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a51d3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5223 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba66d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xba656 ; ret
0x00000000000a5233 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000001521e1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001525a0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151e31 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a67b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a75e0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a51b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9050 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a6801 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7631 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a51f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6791 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a75b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5191 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010e2f0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010e1ec : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000083d39 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x0000000000070105 : mov edx, eax ; je 0x70117 ; mov eax, edx ; pop rbx ; ret
0x000000000010e884 : mov edx, eax ; jmp 0x10e896
0x000000000010eb8f : mov edx, eax ; jmp 0x10eb9d
0x00000000001341d7 : mov edx, eax ; jmp 0x13419b
0x00000000000711f7 : mov edx, eax ; jmp 0x7118b
0x0000000000071388 : mov edx, eax ; jmp 0x71322
0x0000000000075be3 : mov edx, eax ; jmp 0x75b80
0x0000000000076533 : mov edx, eax ; jmp 0x764d0
0x0000000000076cd0 : mov edx, eax ; jmp 0x76c57
0x00000000000780eb : mov edx, eax ; jmp 0x78081
0x000000000007d9c4 : mov edx, eax ; jmp 0x7d9e1
0x0000000000086c90 : mov edx, eax ; jmp 0x86c5b
0x00000000000bdfb8 : mov edx, eax ; jmp 0xbdfc1
0x00000000000cf892 : mov edx, eax ; jmp 0xcf831
0x00000000000d45b9 : mov edx, eax ; jmp 0xd45d8
0x00000000000d6a9c : mov edx, eax ; jmp 0xd6a7a
0x00000000000d8c2c : mov edx, eax ; jmp 0xd8c3b
0x00000000000e0416 : mov edx, eax ; jmp 0xe03b0
0x00000000000ef45c : mov edx, eax ; jmp 0xef494
0x00000000000fd90c : mov edx, eax ; jmp 0xfd8a0
0x0000000000075513 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000142eee : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000378b7 : mov edx, ebp ; call r15
0x0000000000113b17 : mov edx, ebp ; call rax
0x00000000000ac802 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000037341 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000012e923 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087d87 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000882a9 : mov edx, ebp ; mov rsi, rbp ; call rax
0x000000000003735c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000001132b7 : mov edx, ebx ; call rax
0x0000000000173987 : mov edx, ebx ; jne 0x17397e ; pop rbx ; ret
0x000000000012e815 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087ca8 : mov edx, ecx ; jmp 0x87c71
0x0000000000087559 : mov edx, edi ; call rax
0x0000000000063b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x000000000011c2ff : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113728 : mov edx, esi ; call rax
0x000000000011378e : mov edx, esp ; call rax
0x0000000000087043 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000001a3dad : mov es, word ptr [rax] ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x000000000010a1b9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000001b1a5e : mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000061cfc : mov es, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000102f66 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000000a73fe : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000009e066 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000087b33 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000ab92e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000023ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000126b3b : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000001956cc : mov esi, 0x64fffca7 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rsp
0x000000000009e091 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009df51 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009e0b5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000001a6d4d : mov esi, 0x7f200000 ; out dx, eax ; call qword ptr [rdi]
0x0000000000127ff7 : mov esi, 0x83480153 ; ret
0x000000000009dfce : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000000f1152 : mov esi, 0x89010544 ; ret
0x0000000000086e85 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000103a33 : mov esi, 0x8b49fff1 ; call rbx
0x000000000008cc5f : mov esi, 0x8c48348 ; ret
0x000000000003d6df : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000009e10d : mov esi, 0xc0844507 ; jne 0x9e0f9 ; xor eax, eax ; ret
0x000000000018115e : mov esi, 0xc2c1c0bf ; ret
0x000000000010e040 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000188604 : mov esi, 0xc8fff451 ; push rcx ; hlt ; call rdx
0x000000000009df75 : mov esi, 0xc984070c ; jne 0x9df70 ; ret
0x000000000009df31 : mov esi, 0xd2840714 ; jne 0x9df30 ; ret
0x00000000000a9fe4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000000fed76 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x000000000009e005 : mov esi, 0xf2390714 ; je 0x9e008 ; ret
0x0000000000002bf1 : mov esi, 0xf8cbeb8f ; ret
0x000000000011c3f6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000102aa6 : mov esi, 1 ; call rbx
0x0000000000132437 : mov esi, 1 ; mov ebp, eax ; call 0x12e719
0x0000000000102c93 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000102b5f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000102ad7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000102f1d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006cb43 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006c430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000101c91 : mov esi, 2 ; jmp rax
0x0000000000102f11 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000102c84 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000102b50 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000102ac8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000101cab : mov esi, 3 ; jmp rax
0x000000000010348c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001034e3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000103563 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000103663 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000007cc18 : mov esi, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bce5e : mov esi, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000038f6a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b67 : mov esi, dword ptr [rip + 0x35f403] ; call rax
0x000000000005be59 : mov esi, dword ptr [rip + 0x367111] ; call rax
0x000000000005b803 : mov esi, dword ptr [rip + 0x367767] ; call rax
0x000000000005004b : mov esi, dword ptr [rip + 0x372f1f] ; call rax
0x000000000004d3cf : mov esi, dword ptr [rip + 0x375b9b] ; call rax
0x0000000000047f4a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000d6a94 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd6a79 ; mov edx, eax ; jmp 0xd6a82
0x000000000014cf69 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012b438 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084401 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000083a31 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010e1f1 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000011f369 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000095f3a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x95f55 ; jmp 0x95f0f
0x000000000006d712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00000000001423ef : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000076a42 : mov esi, ebp ; call 0x4d179
0x00000000000882ac : mov esi, ebp ; call rax
0x00000000000ef0f3 : mov esi, ebp ; mov rdi, rbx ; call 0x3b3c7
0x00000000000bce78 : mov esi, ebp ; mov rdi, rbx ; call 0x89167
0x00000000000850ce : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000c790c : mov esi, ebp ; xor edx, edx ; jmp 0xc78da
0x000000000003735f : mov esi, ebx ; mov rdi, r12 ; call r15
0x0000000000137ded : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000139c7b : mov esi, ebx ; mov rdi, r15 ; call r14
0x0000000000086bf7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x000000000013b39e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000391a9 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000000c69e3 : mov esi, edi ; xor edi, edi ; call rax
0x00000000001321da : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000112738 : mov esi, edx ; call rax
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000c4720 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000001295f1 : mov esi, esi ; call 0x558b4
0x00000000000202f4 : mov esi, esi ; call 0xa9eb8
0x0000000000086e25 : mov esi, esi ; call rax
0x00000000000564ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000b9b42 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00000000000b99b2 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38b : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000000378b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000013b4c8 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000134cb4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000cd129 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001316f4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000c46ae : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000011718c : mov esi, esp ; call 0x73444
0x0000000000139fa5 : mov esi, esp ; call qword ptr [rax]
0x000000000003731b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000085f85 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f3452 : mov esi, esp ; mov rdi, rbp ; call 0xef757
0x0000000000037344 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000088151 : mov esi, esp ; mov rdi, rbp ; call rax
0x0000000000129e2b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012db85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000872b3 : mov esi, esp ; mov rdi, rbx ; call rax
0x0000000000129a1f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000085c8a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00000000000854ad : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000202f3 : mov esi, r14d ; call 0xa9eb9
0x00000000001965ac : mov esp, 0x14000096 ; and bl, ch ; call rsp
0x0000000000198f44 : mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x00000000001ad5f4 : mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000173c4a : mov esp, 0x1f0fffea ; add bl, dh ; ret
0x000000000019711c : mov esp, 0x240000e2 ; outsb dx, byte ptr [rsi] ; out dx, al ; call rsp
0x000000000019a4f4 : mov esp, 0x24000234 ; and bh, dl ; call rsp
0x000000000019cbf4 : mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00000000001a96f4 : mov esp, 0x280000e7 ; out dx, eax ; int1 ; jmp rcx
0x00000000001ad2f4 : mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019add1 : mov esp, 0x2ba4fffd ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001971a4 : mov esp, 0x40000e4 ; jb 0x1971a0 ; call rsp
0x00000000001971f4 : mov esp, 0x40000e6 ; js 0x1971f0 ; call rsp
0x0000000000199044 : mov esp, 0x40001a6 ; sbb dh, bh ; call rsp
0x0000000000199ccc : mov esp, 0x440001f4 ; fprem ; call rsp
0x000000000008ec87 : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000001380a1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008df71 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008dfa1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008df91 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001b05f4 : mov esp, 0x48000156 ; jnp 0x1b05f7 ; jmp qword ptr [rcx]
0x000000000019878c : mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x0000000000126be7 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x0000000000198014 : mov esp, 0x64000149 ; insd dword ptr [rdi], dx ; call rsp
0x00000000001a31f4 : mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00000000000d674e : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00000000001ae1f4 : mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000000b63ba : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000dd4d4 : mov esp, 0x89000000 ; ret 0xd139
0x0000000000103bfc : mov esp, 0x8b49fff1 ; call rbx
0x0000000000103c09 : mov esp, 0x8b49fff1 ; jge 0x103c17 ; call rbx
0x0000000000196e0c : mov esp, 0x940000d0 ; sbb esi, ebp ; call rsp
0x0000000000198704 : mov esp, 0x94000178 ; adc al, 0xf6 ; call rsp
0x00000000001997ec : mov esp, 0xa40001d1 ; adc edi, eax ; call rsp
0x00000000000da7bb : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000187ecd : mov esp, 0xb22bfff3 ; jmp rsp
0x0000000000196b25 : mov esp, 0xbb940000 ; in eax, dx ; call rsp
0x000000000008ec76 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000019ac94 : mov esp, 0xc4000116 ; sti ; call rsp
0x00000000000dfb38 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000008ad03 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000196d6c : mov esp, 0xd40000cc ; or esi, ebp ; call rsp
0x00000000001970c4 : mov esp, 0xd40000e0 ; out dx, al ; call rsp
0x000000000019a7fc : mov esp, 0xd4000247 ; pop rbp ; cli ; call rsp
0x00000000001afdf4 : mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b4af4 : mov esp, 0xd800019b ; ret
0x00000000001a6b85 : mov esp, 0xd9e80000 ; cld ; call qword ptr [rax]
0x000000000019868c : mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x000000000019ab4c : mov esp, 0xe400025c ; salc ; cli ; call rsp
0x00000000001b1ef4 : mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000959fb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008df81 : mov esp, 0xf80148c0 ; ret
0x0000000000067493 : mov esp, 2 ; jmp 0x63703
0x000000000013797c : mov esp, dword ptr [rax] ; jmp 0x13798a
0x00000000000203f8 : mov esp, eax ; call 0xa9fd8
0x00000000000352ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000ce95a : mov esp, edi ; je 0xce979 ; call 0x8ab76
0x000000000005f80a : mov esp, edi ; mov ebx, 2 ; jmp 0x5baf9
0x00000000000d45b4 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45dd
0x0000000000101c44 : mov esp, edx ; mov rbp, rax ; call rax
0x00000000001889c5 : mov esp, esi ; call rsp
0x00000000001889a5 : mov esp, esi ; jmp rdx
0x000000000009e8cd : mov esp, esi ; sub rsp, 8 ; call 0x8ab78
0x000000000007d8a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000001a5e69 : mov gs, esi ; call qword ptr [rcx]
0x00000000000941ae : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be8f7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8ab78
0x00000000000f35d0 : mov qword ptr [r14], rbx ; call 0x1f8ad
0x00000000000f35cf : mov qword ptr [r14], rbx ; call 0x1f8ae
0x000000000009efe0 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000123317 : mov qword ptr [r9], r10 ; ret
0x00000000001233b3 : mov qword ptr [r9], rcx ; ret
0x0000000000123387 : mov qword ptr [r9], rdi ; ret
0x0000000000071c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000071c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007bb19 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000fc263 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000123119 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000072164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000083565 : mov qword ptr [rax], rdi ; ret
0x00000000000720a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002d9d2 : mov qword ptr [rax], rdx ; ret
0x0000000000072ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d2533 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd255c
0x000000000004ea75 : mov qword ptr [rbp - 0x4e0], r11 ; call 0x8ad19
0x000000000004d64d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000023655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x0000000000113b12 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000003a5f9 : mov qword ptr [rbp], rdx ; call rax
0x000000000002a6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000142a05 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001429bd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076ba4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b628 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e77da : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000886bd : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000fb600 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b20a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000078326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000088a9c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001019e1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000142c30 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013767e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000088605 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000088b22 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000886ba : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000131723 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002057c : mov qword ptr [rcx + 0x968], rax ; ret
0x0000000000168163 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168173 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168183 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168193 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000481ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d6101 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000168120 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168140 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168150 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168160 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168170 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168180 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168190 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168130 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168110 : mov qword ptr [rcx], rdx ; ret
0x00000000000f5cda : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000048b3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000a69cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a781c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a535c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a533c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a928c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a602f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a539f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a53bf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5380 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013b1f5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010db59 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10db2d
0x0000000000134d2b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000094120 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000134ce3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007e80a : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036048 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000f533d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a698c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a77dc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a52fc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a924c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a69ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a77fc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a531c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a926c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015aa07 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a997 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a927 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015a8b7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a688a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a76ca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015a847 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a524a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a913a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a68aa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a76ea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015a7d7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a525a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a915a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a68ca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a770a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015a767 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a526a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a917a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000fe647 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000482f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048ac3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b136 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003ac93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac84 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000fe637 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000036471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000123497 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008e76d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000151cc4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000151d02 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000015204b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a217 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015222b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a197 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015241b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a117 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001525ec : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a088 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001527ec : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000159ff8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001529ec : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000159f68 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a61b0 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000489b9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000151cc8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000151d06 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000151e7b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151f77 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000151ec3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a297 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000054d85 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000093ee6 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000048988 : mov qword ptr [rdi], r9 ; ret
0x00000000000fe634 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000f358e : mov qword ptr [rdi], rax ; mov rdi, rbx ; call 0x1f7f8
0x000000000003655a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a6816 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5ed6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5226 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5236 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5247 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5257 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5267 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008e76a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000a5217 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f9c2 : mov qword ptr [rdi], rcx ; ret
0x00000000000a6803 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7633 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a61d0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a61f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6200 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6210 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6220 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a61e0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009e22f : mov qword ptr [rdi], rdx ; ret
0x00000000000a90a3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009efdd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014cf4d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000004a0a2 : mov qword ptr [rdi], rsi ; ret
0x000000000006dcb6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00000000000784b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000710cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071273 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012dbff : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012dbdb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012dbdf : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016a51a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016618a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016a53a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001661aa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016a55a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000001661ca : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006b413 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016a3ea : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000001660ba : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000131740 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000016a393 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000013180a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000166063 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e19c : mov qword ptr [rdx], rax ; ret
0x00000000000762de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009e174 : mov qword ptr [rdx], rcx ; ret
0x00000000000e6f1a : mov qword ptr [rdx], rdi ; ret
0x000000000013173d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000114ef7 : mov qword ptr [rip + 0x2b2222], rax ; pop rbp ; ret
0x000000000010896f : mov qword ptr [rip + 0x2ba8ca], rbx ; pop rbx ; ret
0x00000000000fd904 : mov qword ptr [rip + 0x2c6e95], rax ; mov rdx, rax ; jmp 0xfd8a8
0x00000000000e7cc3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012cd1e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003ac03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000077f35 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000fb5e6 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f52ae : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e7ca6 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000012ccee : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e7cbf : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007783a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001229ce : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000122462 : mov qword ptr [rsi], rdi ; ret
0x0000000000118770 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000081147 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081030 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000e35cd : mov qword ptr [rsp + 0x18], rdx ; call 0x1f8a7
0x0000000000080d0e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000008108a : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012b3bc : mov qword ptr [rsp + 0x28], r9 ; call 0x137647
0x00000000000335d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000f350a : mov qword ptr [rsp + 0x40], rax ; call 0x1f7f7
0x00000000000e10b7 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bb657 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x000000000008866f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102155 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013b6fb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000889df : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000129922 : mov qword ptr [rsp], rcx ; call r12
0x000000000013762e : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013767d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e19b : mov qword ptr fs:[rdx], rax ; ret
0x000000000014cf4c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000001829bd : mov r10d, 0xcac982a4 ; call 0xffffffffaedac83f
0x0000000000125b5e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00000000000203f7 : mov r12, rax ; call 0xa9fd9
0x00000000000ce959 : mov r12, rdi ; je 0xce97a ; call 0x8ab77
0x00000000000d45b3 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45de
0x000000000009e8cc : mov r12, rsi ; sub rsp, 8 ; call 0x8ab79
0x000000000007d8a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000067492 : mov r12d, 2 ; jmp 0x63704
0x000000000013797b : mov r12d, dword ptr [rax] ; jmp 0x13798b
0x0000000000101c43 : mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000ae027 : mov r13, r15 ; setne dl ; jmp 0xae03d
0x00000000000b0948 : mov r13, r15 ; setne dl ; jmp 0xb095d
0x00000000000b30ff : mov r13, r15 ; setne dl ; jmp 0xb311d
0x000000000007d8ac : mov r13, rdx ; call qword ptr [r15]
0x0000000000129a24 : mov r13, rsp ; call r15
0x0000000000065978 : mov r13d, eax ; jmp 0x653d6
0x00000000001025e8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000194590 : mov r15b, 0xfd ; call rcx
0x00000000000fe6d6 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000eb37d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002185a : mov r9, r14 ; call rbx
0x00000000000acd6c : mov r9, r15 ; call rbx
0x00000000000cb3fb : mov rax, -0xe ; ret
0x0000000000078330 : mov rax, -1 ; pop rbx ; ret
0x00000000000353e6 : mov rax, -1 ; ret
0x00000000000ab3c0 : mov rax, 1 ; ret
0x00000000000ab3d0 : mov rax, 2 ; ret
0x00000000000ab3e0 : mov rax, 3 ; ret
0x00000000000ab3f0 : mov rax, 4 ; ret
0x00000000000ab400 : mov rax, 5 ; ret
0x00000000000ab410 : mov rax, 6 ; ret
0x00000000000ab420 : mov rax, 7 ; ret
0x0000000000111fa4 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f74
0x0000000000105688 : mov rax, qword ptr [rax + 0x108] ; ret
0x000000000014292e : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000010902f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000108ddf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000113de8 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000001343c3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000074f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000134c63 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000105680 : mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000139ec4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000105678 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x000000000002df14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002da1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000139eb9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003a722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000127e08 : mov rax, qword ptr [rax] ; ret
0x000000000007e06e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x00000000000849b5 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x849c7 ; call rax
0x000000000006960c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x00000000001025eb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000222c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000077490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000137649 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x137661 ; pop rbx ; ret
0x0000000000166060 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000cb9cc : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e3 ; call rax
0x000000000013b5f2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013b190 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c7ca0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000173387 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1733a0 ; call rax
0x000000000012cd36 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000774d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012cd6e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013a648 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012dab0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af58 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013af68 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000139ec0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000139eb5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000139fa0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012b8b6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007c84e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001145b4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002deb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012d1c7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e6f17 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x0000000000140333 : mov rax, qword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x000000000013fd20 : mov rax, qword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00000000001203e0 : mov rax, qword ptr [rip + 0x2a4491] ; ret
0x0000000000081164 : mov rax, qword ptr [rip + 0x341c65] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cb10 : mov rax, qword ptr [rip + 0x347a09] ; ret
0x0000000000029c90 : mov rax, qword ptr [rip + 0x39ac59] ; ret
0x0000000000021a50 : mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x0000000000021a40 : mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x000000000002cb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c7f5d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000ef456 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef49a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fd25f : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000001097b2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000109813 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000127e07 : mov rax, qword ptr fs:[rax] ; ret
0x00000000000943d9 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e4eb : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e2b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008263c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a806 : mov rax, r8 ; pop rbx ; ret
0x000000000007df36 : mov rax, r8 ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006eff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e1d0 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000942c6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8573 : mov rax, rbx ; call rax
0x000000000010523e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaae : mov rax, rbx ; pop rbx ; ret
0x0000000000101409 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a68b : mov rax, rcx ; or rax, rdx ; ret
0x0000000000033ea6 : mov rax, rcx ; ret
0x0000000000115880 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000003a6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009de66 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e964 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000967a9 : mov rax, rdi ; pop rbx ; ret
0x000000000004a60d : mov rax, rdi ; ret
0x00000000001184a9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bacd7 : mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000008363c : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000096db5 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000010df7b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083ff6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007db2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000490b4 : mov rax, rdx ; pop rbx ; ret
0x00000000000484c9 : mov rax, rdx ; ret
0x00000000000c8bb4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004a5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000006fc83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000c7952 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011c251 : mov rax, rsi ; pop rbx ; ret
0x000000000004a6f3 : mov rax, rsi ; ret
0x0000000000171f0a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000352ec : mov rbp, r9 ; nop ; jmp rdx
0x0000000000085efe : mov rbp, rax ; call 0x82185
0x0000000000101c46 : mov rbp, rax ; call rax
0x0000000000114de3 : mov rbp, rsp ; pop rbp ; ret
0x00000000001147f1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000017367e : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8ae
0x000000000017367d : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8af
0x00000000001029f5 : mov rbx, rax ; call rax
0x000000000012d6ba : mov rbx, rax ; jne 0x12d65a ; xor eax, eax ; pop rbx ; ret
0x00000000000fbea6 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000002c375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x000000000012b345 : mov rbx, rsi ; sub rsp, 8 ; call 0x137649
0x000000000002b38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x000000000012aba6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a5200 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000134fcc : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000131b94 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013199c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012c92c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000117188 : mov rcx, r12 ; mov rsi, r12 ; call 0x73448
0x0000000000129e30 : mov rcx, r13 ; call rbx
0x0000000000075290 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000acab9 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000001296bc : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000009e183 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009e195 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000014d080 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014d083 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000010219f : mov rdi, qword ptr [r12] ; call rbx
0x00000000001735e9 : mov rdi, qword ptr [r13 + 0x20] ; call 0x1f8ae
0x00000000001735e0 : mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8ae
0x00000000001735fa : mov rdi, qword ptr [r13] ; call 0x1f8ae
0x0000000000038f6c : mov rdi, qword ptr [r13] ; call r14
0x0000000000101da9 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000101d16 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000101d57 : mov rdi, qword ptr [r15] ; call rbx
0x00000000000ba470 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102152 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000ce754 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000564ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000eb06f : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000abf54 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000101ede : mov rdi, qword ptr [rbp] ; call rbx
0x00000000001735bc : mov rdi, qword ptr [rbx] ; call 0x1f8ad
0x0000000000047bb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dd99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000072fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb5
0x0000000000112733 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000012c948 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bb1ff : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000013a9fe : mov rdi, r12 ; call qword ptr [rax]
0x0000000000037309 : mov rdi, r12 ; call r15
0x000000000013205c : mov rdi, r12 ; call rax
0x0000000000074fe8 : mov rdi, r12 ; call rbx
0x00000000000acd69 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000882a5 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x000000000011f36d : mov rdi, r13 ; call r12
0x00000000000391ab : mov rdi, r13 ; call r14
0x000000000011c304 : mov rdi, r13 ; call rax
0x0000000000102a3f : mov rdi, r13 ; call rbx
0x00000000000378b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x0000000000080f46 : mov rdi, r14 ; call qword ptr [rax]
0x000000000012c6c7 : mov rdi, r14 ; call rax
0x0000000000102a63 : mov rdi, r14 ; call rbx
0x000000000012bde2 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012c929 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000065d5c : mov rdi, r15 ; call 0x71fd5
0x000000000005f10e : mov rdi, r15 ; call 0x7b3a5
0x0000000000137def : mov rdi, r15 ; call qword ptr [rax]
0x0000000000139c7d : mov rdi, r15 ; call r14
0x0000000000074014 : mov rdi, r15 ; call rax
0x0000000000102a83 : mov rdi, r15 ; call rbx
0x00000000001374ae : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000080d0b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000075293 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000136213 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ec279 : mov rdi, rax ; call rbx
0x0000000000086bf9 : mov rdi, rax ; call rcx
0x0000000000136305 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136116 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000085efb : mov rdi, rax ; mov rbp, rax ; call 0x82188
0x000000000012aba3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000085f87 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000139b9a : mov rdi, rbp ; add rbx, r12 ; call r14
0x0000000000171f7b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000f3454 : mov rdi, rbp ; call 0xef755
0x000000000012d75d : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013b4ca : mov rdi, rbp ; call r12
0x000000000012b43c : mov rdi, rbp ; call r14
0x0000000000037346 : mov rdi, rbp ; call r15
0x0000000000084405 : mov rdi, rbp ; call rax
0x00000000000ac6e5 : mov rdi, rbp ; call rbx
0x000000000013b3a0 : mov rdi, rbp ; call rcx
0x000000000012d254 : mov rdi, rbp ; call rdx
0x000000000012bed4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000134fc9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000131b91 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131999 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000129e2d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000084e12 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012cb5c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000f3591 : mov rdi, rbx ; call 0x1f7f5
0x00000000000ef0f5 : mov rdi, rbx ; call 0x3b3c5
0x00000000000bce7a : mov rdi, rbx ; call 0x89165
0x00000000000be8fa : mov rdi, rbx ; call 0x8ab75
0x00000000000cdf14 : mov rdi, rbx ; call qword ptr [r15]
0x000000000012db87 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000029c46 : mov rdi, rbx ; call r12
0x0000000000021bdf : mov rdi, rbx ; call r14
0x000000000006cb48 : mov rdi, rbx ; call r8
0x000000000011eeb9 : mov rdi, rbx ; call rax
0x00000000001734fa : mov rdi, rbx ; jne 0x1734f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012991f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x0000000000129a21 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000222bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c7f5a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000087555 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007d8c1 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007221d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000139d1f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f3655 : mov rdi, rcx ; call 0x1f8ad
0x00000000000f35e7 : mov rdi, rdx ; call 0x1f8ad
0x00000000001145b7 : mov rdi, rdx ; jmp rax
0x0000000000133532 : mov rdi, rsp ; call 0x1f7e5
0x000000000012ac95 : mov rdi, rsp ; call rax
0x0000000000139d90 : mov rdi, rsp ; call rdx
0x00000000001295ed : mov rdi, rsp ; mov rsi, r14 ; call 0x558b8
0x0000000000077464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cb93b : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb952 ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000017326f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173283 ; call rdx
0x0000000000151e30 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a51f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000083d38 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000011378d : mov rdx, r12 ; call rax
0x0000000000087042 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000113b16 : mov rdx, r13 ; call rax
0x00000000000ac801 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012e922 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000882a8 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000113727 : mov rdx, r14 ; call rax
0x0000000000087558 : mov rdx, r15 ; call rax
0x000000000011c2fe : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000010eb8e : mov rdx, r8 ; jmp 0x10eb9e
0x00000000000d45b8 : mov rdx, r8 ; jmp 0xd45d9
0x00000000000d8c2b : mov rdx, r8 ; jmp 0xd8c3c
0x000000000010e883 : mov rdx, rax ; jmp 0x10e897
0x00000000001341d6 : mov rdx, rax ; jmp 0x13419c
0x000000000007d9c3 : mov rdx, rax ; jmp 0x7d9e2
0x0000000000086c8f : mov rdx, rax ; jmp 0x86c5c
0x00000000000bdfb7 : mov rdx, rax ; jmp 0xbdfc2
0x00000000000cf891 : mov rdx, rax ; jmp 0xcf832
0x00000000000e0415 : mov rdx, rax ; jmp 0xe03b1
0x00000000000e0414 : mov rdx, rax ; jmp 0xe03b2
0x00000000000ef45b : mov rdx, rax ; jmp 0xef495
0x00000000000fd90b : mov rdx, rax ; jmp 0xfd8a1
0x00000000000378b6 : mov rdx, rbp ; call r15
0x0000000000087d86 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001132b6 : mov rdx, rbx ; call rax
0x0000000000173986 : mov rdx, rbx ; jne 0x17397f ; pop rbx ; ret
0x000000000012e814 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087ca7 : mov rdx, rcx ; jmp 0x87c72
0x0000000000038f69 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000007cc17 : mov rsi, qword ptr [r8 + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000063b66 : mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x000000000005be58 : mov rsi, qword ptr [rip + 0x367111] ; call rax
0x000000000005b802 : mov rsi, qword ptr [rip + 0x367767] ; call rax
0x000000000005004a : mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x000000000004d3ce : mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x0000000000047f49 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012b437 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084400 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000083a30 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010e1f0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011f368 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000011718b : mov rsi, r12 ; call 0x73445
0x000000000003731a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000f3451 : mov rsi, r12 ; mov rdi, rbp ; call 0xef758
0x0000000000037343 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000088150 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000129e2a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00000000000872b2 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000085c89 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000854ac : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000850cd : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000001295f0 : mov rsi, r14 ; call 0x558b5
0x0000000000086e24 : mov rsi, r14 ; call rax
0x00000000000b9b41 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000b99b1 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013b4c7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x00000000000391a8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000001423ee : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000882ab : mov rsi, rbp ; call rax
0x00000000000ef0f2 : mov rsi, rbp ; mov rdi, rbx ; call 0x3b3c8
0x00000000000bce77 : mov rsi, rbp ; mov rdi, rbx ; call 0x89168
0x0000000000087fc6 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000c790b : mov rsi, rbp ; xor edx, edx ; jmp 0xc78db
0x000000000003735e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000137dec : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000139c7a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x0000000000086bf6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000013b39d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c69e2 : mov rsi, rdi ; xor edi, edi ; call rax
0x00000000001321d9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000112737 : mov rsi, rdx ; call rax
0x0000000000139fa4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012db84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000187b80 : mov sil, bl ; jmp rdx
0x00000000000eb960 : mov word ptr [r8 - 0x77], cs ; ret
0x000000000009f005 : mov word ptr [r9 - 2], cx ; ret
0x000000000019c3c4 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x000000000008e75d : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000013c2d5 : mov word ptr [rax - 0x39], cs ; ret
0x00000000000eb961 : mov word ptr [rax - 0x77], cs ; ret
0x00000000000a59f0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x000000000019a5fc : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; test byte ptr [rsi], bh ; cli ; jmp rsp
0x00000000001ac2c4 : mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00000000001b00c4 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019a854 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], dh ; cli ; call rsp
0x00000000001680f2 : mov word ptr [rcx + 4], dx ; ret
0x0000000000168133 : mov word ptr [rcx + 8], dx ; ret
0x00000000001ae3c4 : mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019832c : mov word ptr [rcx + rax], fs ; add al, 0x21 ; cmc ; jmp rsp
0x00000000001680c0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001680b0 : mov word ptr [rcx], dx ; ret
0x0000000000197b7c : mov word ptr [rcx], gs ; add dword ptr [rax], eax ; je 0x197bcc ; call rsp
0x00000000000a690c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a775c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a529c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a91cc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a6a14 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7864 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a5384 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a92d4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000015aca7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000001b1ec4 : mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000003b372 : mov word ptr [rdi + 2], dx ; ret
0x000000000009def2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a7608 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ddf2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a51d8 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a9078 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a766a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a682a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a521a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a90da : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014cf82 : mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000001523cc : mov word ptr [rdi - 2], cx ; ret
0x00000000001521e4 : mov word ptr [rdi - 2], dx ; ret
0x00000000001523c8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a51a3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a5e76 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9a52 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015acab : mov word ptr [rdi], cx ; ret
0x00000000000a6793 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a75b3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5193 : mov word ptr [rdi], dx ; ret
0x00000000000a9023 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009deb0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009de20 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000009f002 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000014cf7f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000f5370 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000001317bf : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000016a468 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a1f4d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a1fd1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000186d00 : mov word ptr [rdx - 0x12], fs ; call rsp
0x0000000000186d2c : mov word ptr [rdx - 0x12], fs ; jmp rsp
0x000000000016a413 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a1ee8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000108dcf : mov word ptr [rdx], ax ; ret
0x00000000001bac7a : mov word ptr [rdx], cs ; ret
0x00000000001a65f3 : mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a60c2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000fa9b5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003b2df : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b326 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000187bc0 : mov word ptr [rsi - 0xd], dr1 ; call qword ptr [rdi]
0x00000000000a9a55 : mov word ptr [rsi - 2], cx ; ret
0x00000000000f5353 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001aa350 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00000000001bac60 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ad778 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001af490 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000035002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000014cf7e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000003ded9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000001b22aa : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00000000000da652 : movabs al, byte ptr [0x834801538d000000] ; ret
0x00000000000cfe2d : movabs al, byte ptr [0x8348e18948000000] ; ret 0x480f
0x000000000006368d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x00000000000623f2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x0000000000072fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00000000000e2d89 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00000000000d673b : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000010fa0b : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x000000000011ee0d : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x000000000004bb47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x0000000000034b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000003492f : movapd xmm0, xmm1 ; ret
0x0000000000034b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x0000000000034e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x0000000000034930 : movaps xmm0, xmm1 ; ret
0x0000000000150952 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015094e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001509fc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034dd3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034856 : movd mm0, eax ; ret
0x0000000000034855 : movd mm0, rax ; ret
0x000000000003492c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000034cba : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000348bf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034c36 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003492b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034dd2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034c0c : movd xmm0, eax ; ret
0x0000000000034cb9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034c35 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000e0130 : movdqa xmm0, xmm2 ; jmp 0xe0116
0x00000000000a5270 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6acd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a791d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6130 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a543d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a7b83 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6373 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000015a97f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a90f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a89f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a82f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6a6d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a78bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a53dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000015a7bf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6a8d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a78dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a53fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000015a74f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6aad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a78fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a541d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015ad6f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015acff : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac8f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac1f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015abaf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ab3f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aacf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aa5f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a9ef : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008e6bc : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8e6d9 ; ret
0x000000000008e6d5 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000159edb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000159f4b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6230 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a7724 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a68e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a5f57 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5284 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a52c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a52b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5338 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a52f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5318 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5298 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5439 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a53d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a53f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5419 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5274 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a9194 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015a754 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a2032 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2052 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2072 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a1ebc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a1e66 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2033 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2053 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2073 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a1ebd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a1e67 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000010126b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x10123f
0x000000000010126c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x10123e
0x00000000000e0131 : movq mm0, mm2 ; jmp 0xe0115
0x00000000000a5271 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6ace : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a791e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6131 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a543e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a938e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a7b84 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6374 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a9404 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015a980 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a910 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a8a0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a830 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6a6e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a78be : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a53de : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a932e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015a7c0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6a8e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a78de : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a53fe : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a934e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015a750 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6aae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a78fe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a541e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a936e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015ad70 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ad00 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac90 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac20 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015abb0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ab40 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aad0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aa60 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015a9f0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008e6bd : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8e6d8 ; ret
0x000000000008e6d6 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000159edc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000159f4c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a687 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a607 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a577 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a4f7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a477 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a3f7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a377 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a2f7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a277 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a1f7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a177 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a0f7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a067 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000159fd7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000159f47 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6231 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a7725 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a68e5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a5f58 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5285 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a52d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5fab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a52c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a52b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5339 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a52f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5319 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5299 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a543a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a53da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a53fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a541a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5275 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a9195 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015a755 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034854 : movq xmm0, rax ; ret
0x000000000003492a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000196de8 : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x000000000000c429 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001997f0 : movsb byte ptr [rdi], byte ptr [rsi] ; adc edi, eax ; call rsp
0x000000000006846a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d4fb4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f47
0x00000000000dfb4c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b53d5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x0000000000197df8 : movsb byte ptr [rdi], byte ptr [rsi] ; and dh, bl ; jmp rsp
0x00000000001ad2dc : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000195959 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffca3]
0x0000000000195995 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000195955 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000183382 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001aa0dc : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa0fe ; jmp qword ptr [rcx]
0x0000000000196de4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00000000001845dd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x184636 ; jmp 0x184577
0x0000000000195eb0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00000000001a9ddc : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x0000000000134194 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001341d3 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000197950 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; int1 ; call rsp
0x0000000000198dac : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x000000000019aa5c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00000000001b05dc : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000035047 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000006aa58 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00000000001a7adc : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x0000000000196bcc : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00000000001944a5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda4]
0x00000000001944a9 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x00000000001943e5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rcx
0x000000000019add4 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rcx] ; add ah, dh ; ret 0xfffd
0x000000000013e724 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007573f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010eaba : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000001bb8b2 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001ad549 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x0000000000184c15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001844d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009e194 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000489e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001735ff : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffea
0x00000000001944ad : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda5]
0x00000000001944b1 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000194431 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00000000001943ed : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rcx
0x00000000000889dc : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000348c2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003488b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000bad48 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000001ad548 : movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00000000001423f5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000034c39 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034c20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000004a18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010e03f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a867 : movsx eax, dl ; ret
0x000000000009df74 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9df71 ; ret
0x000000000009e0b4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9e0b1 ; xor eax, eax ; ret
0x000000000009e004 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9e009 ; ret
0x000000000009df30 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9df31 ; ret
0x00000000000c26a8 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000891e1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015835b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015042b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000009de80 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009dde0 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009dd17 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000084994 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000002ebb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004b602 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000063884 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d3401 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000210b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c301 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000002e8ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000aa017 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ab4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000149b94 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000149a58 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000149cad : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000149b2d : movsxd rax, ecx ; ret
0x0000000000149bd4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a58aa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000047c91 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d85d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a5039 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002be43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000005c1ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x0000000000093d3d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000134cb6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000033297 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000f227c : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000149a49 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149ab0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149a77 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000e0e98 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000002e0b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000001504ff : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005c148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d0ffe : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d8f65 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000084738 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002ec95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005bf52 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cd12b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000063e45 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000e06b2 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000123382 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000123201 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000aa0a7 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c4722 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aa0df : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000006ca9d : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000003340e : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000c46b0 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x0000000000189205 : movsxd rsi, ebp ; call qword ptr [rbx]
0x00000000001892d9 : movsxd rsi, ebp ; call rsi
0x00000000001892e9 : movsxd rsi, ebp ; push rbx ; cmc ; call qword ptr [rbx]
0x0000000000199369 : movsxd rsi, edi ; jmp rsp
0x00000000001711cc : movsxd rsi, esi ; ret 0x7520
0x00000000000fb73a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003afe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bad49 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000099b47 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000099b46 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000003b171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000348c3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003488c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012daa7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ac5b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012d62c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e9dfe : movzx eax, al ; cmova eax, edx ; ret
0x00000000000ba635 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cd006 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003522c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c033a : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000010e010 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34c : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006b319 : movzx eax, al ; neg eax ; ret
0x0000000000132dd5 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012e9fa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000c6a0b : movzx eax, al ; pop rbx ; ret
0x0000000000035f29 : movzx eax, al ; ret
0x000000000002dd15 : movzx eax, ax ; ret
0x00000000000c26a5 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fd : movzx eax, bh ; ret
0x000000000007a78c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f74e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bfb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000077f62 : movzx eax, byte ptr [rax] ; ret
0x000000000008a578 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000016d870 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e110 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008a593 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a620 : movzx eax, byte ptr [rdx] ; ret
0x000000000007a78d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aa037 : movzx eax, cl ; pop rbx ; ret
0x000000000011880d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000000713fc : movzx eax, dil ; ret
0x00000000000aa05f : movzx eax, dl ; pop rbx ; ret
0x000000000011881b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000011880c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002dece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f5350 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a95aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa95a9 ; ret
0x00000000000a965a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa9659 ; ret
0x000000000016e714 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000008a590 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016d873 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000107e82 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033bcf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb7 ; ret
0x000000000009eb71 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000014420f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000009ea03 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000001711f4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000171254 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000171244 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171234 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171224 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171214 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171204 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015a6a0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e4c7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000001711db : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000015ad80 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008e113 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008e139 : movzx edx, dl ; sub eax, edx ; ret
0x000000000015a620 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015ad10 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000abf51 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000f7d74 : movzx rax, al ; ret
0x0000000000194440 : mul byte ptr [rdi - 0x57790003] ; std ; jmp qword ptr [rsi]
0x000000000008c977 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000185cbc : mul dword ptr [rbp - 0x13] ; call rdx
0x0000000000108a41 : mul dword ptr [rdi + 0x2002b] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000034951 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cdf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034950 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cde : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000006e797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013616f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001367ba : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000035777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010e013 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34f : neg eax ; pop rbx ; ret
0x000000000002121d : neg eax ; ret
0x0000000000087951 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007d8c5 : neg edi ; call qword ptr [r15]
0x00000000000f6a91 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000007d8c4 : neg rdi ; call qword ptr [r15]
0x00000000000e3378 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x0000000000073ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007a3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000159dd7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035a93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016db7c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fc95d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c1682 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a085d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0875 ; ret
0x00000000001a086b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a4cc0 : nop ; add esi, ebp ; call qword ptr [rsi]
0x000000000004b605 : nop ; add rax, rdi ; jmp rax
0x000000000005bf55 : nop ; add rax, rdx ; jmp rax
0x00000000000aa0aa : nop ; add rax, rsi ; jmp rax
0x00000000000b945f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006ac4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000194b40 : nop ; and ah, bh ; jmp rax
0x00000000000758bf : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001b1d90 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000dd70c : nop ; and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000008df6f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009e51f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009e6af : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000001ad230 : nop ; cdq ; hlt ; jmp qword ptr [rcx]
0x0000000000195a3d : nop ; cld ; call rax
0x000000000003512f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001acdc1 : nop ; hlt ; call qword ptr [rcx]
0x00000000001acda9 : nop ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5a0 : nop ; hlt ; jmp qword ptr [rsi]
0x0000000000188540 : nop ; hlt ; jmp rax
0x0000000000194974 : nop ; hlt ; sti ; jmp rax
0x00000000001a52b0 : nop ; in al, -4 ; call qword ptr [rdx]
0x000000000019462c : nop ; in eax, -5 ; jmp qword ptr [rax]
0x00000000001a40b1 : nop ; in eax, dx ; call qword ptr [rdx]
0x00000000001a2c60 : nop ; in eax, dx ; jmp qword ptr [rax]
0x0000000000194920 : nop ; in eax, dx ; sti ; jmp rax
0x0000000000174c90 : nop ; jb 0x174c81 ; call rax
0x00000000000352ef : nop ; jmp rdx
0x0000000000197cc9 : nop ; jmp rsp
0x0000000000194628 : nop ; jrcxz 0x19462d ; call qword ptr [rax + 0x20fffbe5]
0x000000000019597c : nop ; lahf ; cld ; call qword ptr [rax]
0x00000000000d8f6f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000151fff : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000114c1f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000001521df : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f62ef : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000cce5f : nop ; mov eax, 0xfffa ; ret
0x000000000007206f : nop ; mov eax, 0xffffffff ; ret
0x00000000000ac1bf : nop ; mov eax, 1 ; ret
0x0000000000113d67 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00000000001131df : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000ab04f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b9 ; ret
0x00000000000ab09f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b9 ; ret
0x00000000000fb71f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000077eff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000003686f : nop ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x000000000010a1bf : nop ; mov eax, edi ; ret
0x00000000001187af : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000368cf : nop ; mov eax, edx ; ret
0x000000000015259f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a67af : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007832f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007bf3f : nop ; mov rax, -1 ; ret
0x00000000000774cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000139ebf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000139f9f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000001203df : nop ; mov rax, qword ptr [rip + 0x2a4491] ; ret
0x00000000000d0bbf : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e0bf : nop ; mov rax, rdi ; ret
0x0000000000113b15 : nop ; mov rdx, r13 ; call rax
0x00000000000843ff : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000f536f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a526f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000195994 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001944a8 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x00000000001944b0 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000084993 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000f534f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001afdb0 : nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000010fe6f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f5e2f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a49f : nop ; pop rbx ; ret
0x0000000000194b6c : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x0000000000194d84 : nop ; pop rsp ; cld ; jmp qword ptr [rax]
0x000000000019fe60 : nop ; pop rsp ; jmp 0x19fe66
0x0000000000194310 : nop ; pop rsp ; sti ; jmp rax
0x0000000000194fac : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000194fbc : nop ; push rbx ; cld ; call qword ptr [rax]
0x0000000000194f9c : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000188970 : nop ; push rdx ; hlt ; jmp rax
0x0000000000194fa4 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000194fb4 : nop ; push rsp ; cld ; call qword ptr [rax]
0x000000000002058f : nop ; ret
0x0000000000002f9e : nop ; ret 0x5bdb
0x0000000000005690 : nop ; ret 0xf
0x0000000000194aec : nop ; sbb esp, edi ; jmp rax
0x0000000000195768 : nop ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x000000000007c88f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001876b4 : nop ; sub edx, esi ; call qword ptr [rax]
0x00000000001ad670 : nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000195270 : nop ; test bh, ah ; jmp qword ptr [rax]
0x00000000001944cc : nop ; test eax, 0xb59dfffd ; std ; call rcx
0x0000000000195058 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x0000000000194a6c : nop ; xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000194a68 : nop ; xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x00000000001949cc : nop ; xor eax, 0x2820fffc ; cld ; jmp rax
0x00000000000c6cff : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074f5f : nop ; xor eax, eax ; ret
0x00000000001949c8 : nop ; xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x000000000008dfef : nop ; xor rax, rax ; ret
0x0000000000142df8 : nop dword ptr [rax + rax] ; call rcx
0x00000000000350d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000070153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a51ab : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000113de3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000105673 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a641b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012b99b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a33 : nop dword ptr [rax + rax] ; ret
0x000000000003a7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ab0bb : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000006b475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000ab38c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000173885 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000142ab4 : nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000174549 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000abc95 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000abc85 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000abc8d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000cce55 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000368c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000088a25 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012d49d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000c7dad : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000745fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002df1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000a5e7d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076ccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x0000000000093e64 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000010567d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000083d35 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000083a2c : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000006dded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x00000000000840f4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b93fc : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002bd51 : nop dword ptr [rax] ; ret
0x0000000000110015 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000d70cd : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d670d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006acd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000034a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5e37 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000142df7 : nop word ptr [rax + rax] ; call rcx
0x00000000000350d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a641a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012b99a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a3a : nop word ptr [rax + rax] ; ret
0x000000000003a7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ab0ba : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000beb3e : not eax ; add eax, 0x16e ; ret
0x000000000013b861 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000d6652 : not eax ; and eax, 2 ; ret
0x0000000000034790 : not eax ; and eax, edx ; ret
0x0000000000035f63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000218e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000035f62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000019e580 : or ah, 0xe9 ; call qword ptr [rsi]
0x00000000001947b4 : or ah, 0xfb ; call rax
0x0000000000198189 : or ah, dh ; call rsp
0x00000000000662e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000145187 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148d99 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001451b5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fc27a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000081b3c : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000db541 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089150 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000008233a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000662cc : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000bf501 : or al, 0 ; add rax, rdi ; jmp rax
0x00000000000fbb12 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000008e5ea : or al, 0 ; cmove rax, rdx ; ret
0x00000000000ab0f0 : or al, 0 ; ret
0x0000000000094e02 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x94df9 ; ret
0x000000000008a576 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000824c2 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00000000000bdfb5 : or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc4
0x0000000000129924 : or al, 0x24 ; call r12
0x00000000001ad544 : or al, 0x26 ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x0000000000112335 : or al, 0x2b ; add byte ptr [rax + 0xf], cl ; ret
0x00000000001ade44 : or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x000000000010697a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x0000000000053997 : or al, 0x31 ; div dh ; ret 0x4050
0x0000000000132c1b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001ae144 : or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00000000000cb532 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000116cfb : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4e : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c8a73 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000142be1 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000035be9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x0000000000070f03 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000122461 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000ab6a4 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c6a83 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a973 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000baa92 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000011473a : or al, 0x5d ; pop r12 ; ret
0x0000000000189048 : or al, 0x66 ; cmc ; push rsp ; cmc ; call rsp
0x000000000008db68 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000006c6da : or al, 0x7e ; ret
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000a58ac : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004bc85 : or al, 0x83 ; ret
0x000000000005155c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009de82 : or al, 0x88 ; add rax, r9 ; jmp rax
0x0000000000093d3f : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002be45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000001a3844 : or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00000000000e6a35 : or al, 0x89 ; push rsp ; ret
0x00000000001180fb : or al, 0x89 ; ret 0x6ae9
0x00000000000f227e : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000000891e3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000910c4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000015835d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000047c93 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000015042d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000003d495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000010a1b8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000033299 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000016d85f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a503b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000005c1ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00000000001bb8b1 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001a5844 : or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x0000000000002bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x0000000000150431 : or al, 0xb ; jmp r9
0x00000000000a503f : or al, 0xb ; jmp rcx
0x0000000000134cb8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013bb07 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000134cce : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003646f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000001a7644 : or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x0000000000036473 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x0000000000101d98 : or al, 0xdb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001a8e44 : or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x000000000006aa56 : or al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00000000000aafa5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5b33 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000015a8a3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000357a3 : or al, 0xf3 ; ret
0x00000000001aa544 : or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x0000000000198691 : or al, 0xf6 ; call rsp
0x0000000000121da2 : or al, 0xf6 ; ret 0xc602
0x000000000006ce2b : or al, 0xf6 ; ret 0xf04
0x000000000005678c : or al, 0xf6 ; ret 0xf08
0x00000000001005d5 : or al, 0xf7 ; ret 0xfc07
0x000000000002b391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x00000000001948ad : or al, 0xfc ; call qword ptr [rax]
0x00000000001948cd : or al, 0xfc ; call rax
0x00000000000f5c12 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f5d02 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bb344 : or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000000a5d70 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000000b9265 : or al, 5 ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000b92b9 : or al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000004b78c : or al, 6 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009df76 : or al, 7 ; test cl, cl ; jne 0x9df6f ; ret
0x000000000009c93f : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000096f7b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b32fd : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000037371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000014435d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146f71 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144381 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012cd92 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000195a85 : or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00000000000df191 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000e1418 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e569e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000aba5a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000003cfc1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x000000000006f2bd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x0000000000125769 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000199f0d : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], ah ; stc ; call rsp
0x000000000014c357 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009e8d2 : or al, ch ; cwde ; ret 0xfffe
0x0000000000045b5d : or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012a4a2 : or al, ch ; mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x000000000012b34b : or al, ch ; out dx, eax ; ret 0
0x000000000006dcd7 : or al, ch ; ret
0x00000000001948c9 : or bh, ah ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x000000000013b017 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008a8a1 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007781d : or bh, byte ptr [rax - 1] ; ret
0x00000000000b92bf : or bh, byte ptr [rcx] ; ret
0x00000000000e455f : or bh, dh ; ret
0x00000000000ff22f : or bh, dh ; ret 0xfc07
0x000000000012a40e : or bl, al ; mov eax, 1 ; ret
0x00000000000abc93 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000010567b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000001235a3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123400 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000001ac2c8 : or bl, bl ; call qword ptr [rdi]
0x00000000001bbac6 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bbadd ; ret 0xb
0x00000000000022dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x00000000000960c5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e9ab8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000011879d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000000780e8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x78084
0x000000000015aa63 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002da7f : or bl, dh ; ret
0x00000000000d4db8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000012b8b8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d4d31 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000033e4d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000abe86 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00000000000a1fcf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d4d22 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d4dee : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000074087 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000d6672 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000d4e01 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013af5a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000a1fae : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000001660b8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012db82 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000137dea : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000ead4f : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000039f32 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000102617 : or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000014c532 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000be723 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00000000000d8d54 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000a200e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000007250f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000000d4d91 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d4d51 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000012b383 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000074088 : or byte ptr [rax + 0x29], cl ; ret
0x000000000013edb4 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x000000000013fa37 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00000000000bb0d3 : or byte ptr [rax + 0x29], r9b ; ret
0x000000000007cc47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000001050b5 : or byte ptr [rax + 0x39], cl ; ret
0x00000000000819fc : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000048e15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000132b09 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d6673 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00000000001a92ca : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001af2ac : or byte ptr [rax + 0xb], cl ; ret
0x00000000001abe0d : or byte ptr [rax + 0xb], dl ; ret
0x000000000011880b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000010de6f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000310dc : or byte ptr [rax + 1], cl ; ret
0x00000000001057ee : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x00000000001123bb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000004b158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00000000000d4e02 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ddb1b : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000012f11b : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000008e79e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x000000000008e012 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x000000000009388d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x000000000009385e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00000000000abcc6 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31b2 ; ret
0x000000000008e026 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf812 ; ret
0x00000000000abcb2 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00000000000ab0e2 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x000000000011563e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8984a ; ret
0x000000000011572e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89eaa ; ret
0x000000000013a9f8 : or byte ptr [rax - 0x73], cl ; je 0x13aa2a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013ab3c : or byte ptr [rax - 0x73], cl ; je 0x13ab6e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007eb83 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000001097b1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000109812 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000102151 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f35a6 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000dc1bf : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013af5b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006ddd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012cd6d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134c62 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a1faf : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000001132b5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000088b4b : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000038f4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1ec0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001184a8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000326a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000137deb : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000139d1e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000001660b9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012db83 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000084e11 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012cb5b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007db2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000983e7 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012ed65 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013ac8f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000ef0cb : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039f33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000088a1d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000088ac7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000088d29 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00000000000819f8 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc241620f
0x00000000000819f7 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416210
0x00000000000824f8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000048c36 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000093ef6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000093f7e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006e67e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000054d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000007044b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007413d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000001445bc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010568a : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000007d9d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007d995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001445bd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147111 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001445e1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bb9d7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007bb1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000834d6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000019ee0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x000000000001e608 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x000000000001b380 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x000000000000b530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x0000000000019ec8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000000218a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000aa0e9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012cda2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000833d6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x833a9 ; ret
0x00000000000f272c : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3cae : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000004a608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000010527d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000107e80 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a90dd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a911b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a90bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006abcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014ab2e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004876c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000012329f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00000000000abe87 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000d6344 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00000000000ba672 : or byte ptr [rbp - 0x28], dh ; ret
0x000000000003d31d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000abb79 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000db9fb : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x0000000000003cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fc02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000012dc8b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000071fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000032dc3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000088a9f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007915a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000019c51d : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000033e4e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000050197 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000013d0ee : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000006d3d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000070a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001a9bb8 : or byte ptr [rbx], al ; call rdi
0x00000000001bb981 : or byte ptr [rbx], al ; ret
0x000000000004a00b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000be724 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x0000000000054b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000141ac5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e0e97 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000d8d55 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00000000001a02ea : or byte ptr [rcx + 0xb], cl ; ret
0x000000000006c203 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004842b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000490b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013def3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000130ac3 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x000000000011f36c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000013a9fd : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x0000000000037d67 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x00000000000391a7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x00000000001a84e8 : or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x0000000000048432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000007763a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d630c : or byte ptr [rcx - 0x75], cl ; je 0xd633c ; or byte ptr [rcx], ch ; ret
0x00000000000a200f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000d9a43 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000072510 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000003ce6f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x0000000000109888 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10989a ; ret
0x0000000000109918 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10992a ; ret
0x00000000001099b8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1099ca ; ret
0x0000000000109a48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109a5a ; ret
0x0000000000109ad8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109aea ; ret
0x0000000000109b68 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109b7a ; ret
0x0000000000109c08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109c1a ; ret
0x0000000000109ca8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109cba ; ret
0x0000000000109d48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109d5a ; ret
0x0000000000109dd8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109dea ; ret
0x0000000000109e73 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109e85 ; ret
0x0000000000109f08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109f1a ; ret
0x000000000010a22a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a23c ; ret
0x000000000010a2aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a2bc ; ret
0x000000000010a32a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a33c ; ret
0x000000000010a3aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a3bc ; ret
0x000000000010a42a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a43c ; ret
0x000000000010a4aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a4bc ; ret
0x000000000010a52a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a53c ; ret
0x000000000010a5aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a5bc ; ret
0x000000000010a62a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a63c ; ret
0x000000000010a6aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a6bc ; ret
0x000000000010a727 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a739 ; ret
0x000000000010a7aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a7bc ; ret
0x0000000000082f79 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003909a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e30f8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x0000000000037611 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000000e802a : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000000f5c22 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000359df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f5d14 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001976c5 : or byte ptr [rcx], al ; add byte ptr [rbx + rdi*8], dh ; out dx, eax ; call rsp
0x00000000000d4dd7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d4d52 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000ba66f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000013e823 : or byte ptr [rcx], bh ; ret 0x3875
0x00000000001a1ec8 : or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000000d4d92 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b933d : or byte ptr [rcx], ch ; ret
0x000000000012491c : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000114e50 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e6fdb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007db6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c8cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000184e9e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a33f3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000001a1a74 : or byte ptr [rdi + 0xb], al ; jae 0x1a1a88 ; ret
0x000000000019f6f9 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x00000000001afe28 : or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000026ec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000002a219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000002dd14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b42c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f61 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000ce6b3 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000006c851 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000077fcb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012e9f9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000453b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000035d64 : or byte ptr [rdi], cl ; ret 0xc289
0x00000000001509fb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000004753f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x000000000004c38e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000002086a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000019cfa2 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00000000001b32f8 : or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000001b6e98 : or byte ptr [rdx - 9], ch ; jmp rsi
0x00000000001bb76d : or byte ptr [rdx], al ; add byte ptr [rax], al ; jp 0x1bb771 ; call qword ptr [rcx]
0x00000000000d70c7 : or byte ptr [rdx], al ; jne 0xd70a5 ; jmp 0xd7095
0x00000000000d4d32 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d4db9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000012b8b9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000fb722 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fb721 : or byte ptr [rip + 0x100f], r12b ; ret
0x000000000019480c : or byte ptr [rip + 0x10fffc], 0xfc ; call rax
0x00000000000fba0a : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000000a4bc1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000010eb8b : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10eba1
0x00000000000d6751 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00000000000a1fd0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d4def : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ecff0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000d4d23 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00000000001948ac : or byte ptr [rsp + rdi*8], 0xff ; adc bh, bh ; sti ; call rax
0x0000000000003cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000019e640 : or ch, 0xe9 ; call qword ptr [rdx]
0x0000000000095f41 : or ch, bl ; ret 0x1f0f
0x00000000001bb9e8 : or ch, byte ptr [rdi + 5] ; ret
0x00000000001bbacb : or ch, byte ptr [rsi] ; ret 0xb
0x000000000004763f : or cl, al ; call 0xffffffffc28db76b
0x00000000000d9a40 : or cl, al ; jmp 0xffffffffc296db55
0x00000000000d9a3f : or cl, al ; jmp 0xffffffffc296db56
0x00000000000d9b43 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000003505b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000ba717 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029d94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000ab5b5 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x000000000007a5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000078bd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000662cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072faf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e7866 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00000000000c0a12 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006f75c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008d0ba : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8c2f : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000004ac1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000003d45d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000071f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000118845 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000013d46f : or cl, byte ptr [rcx + 0x39] ; ret
0x000000000010dad2 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00000000001187c5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000167fe6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000000857da : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x000000000003d323 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000013d0f1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000356f7 : or cl, ch ; ret
0x00000000000e4b40 : or cl, ch ; ret 0xfffe
0x0000000000002beb : or cl, cl ; clc ; ret
0x000000000008cc05 : or cl, cl ; cmove rax, rdx ; ret
0x000000000015a983 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000104ad5 : or dh, bl ; ret
0x00000000000aa266 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000198659 : or dh, dh ; jmp rsp
0x00000000000815d3 : or dh, dh ; ret 0x7404
0x00000000000f6613 : or dh, dh ; ret 0x7540
0x000000000012d294 : or dh, dh ; ret 0x8802
0x0000000000081546 : or dh, dh ; ret 0xf04
0x000000000001fe58 : or dh, dh ; ret 0xf08
0x000000000002f3de : or dh, dh ; ret 0xfdf
0x00000000001a9de1 : or dh, dl ; call rsi
0x00000000001948c8 : or dil, spl ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00000000001b58a8 : or dl, ah ; sti ; call rsi
0x00000000001ac1d8 : or dl, bl ; jmp qword ptr [rcx]
0x0000000000186df0 : or dl, bl ; out dx, eax ; jmp qword ptr [rax]
0x0000000000094ba2 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000001884bc : or dl, ch ; call qword ptr [rdi]
0x00000000001884d4 : or dl, ch ; jmp qword ptr [rdi]
0x000000000006656e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000011f2c0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a83d8 ; call rax
0x00000000001316a3 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000010dc09 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a2419
0x000000000009876b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000088ebe : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001444ed : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9df : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144447 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000073c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002122a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f5188 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006656f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4115 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000f1553 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f227a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f1a47 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000001bbb1e : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bbb34 ; ret 0xa
0x000000000003d43d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000018874c : or dword ptr [rbp - 0xc], edx ; call qword ptr [rbx]
0x000000000016ec96 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000012d5b6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010d4b6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ee15b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x0000000000188684 : or dword ptr [rbx - 0xc], edx ; call qword ptr [rbx]
0x000000000006dde3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d0a8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000112483 : or dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000488bc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000008a818 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x0000000000070fee : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00000000000857a6 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000095094 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d4740 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000085989 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000142b46 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000000bcbab : or dword ptr [rdi + 0x1490030], ecx ; ret
0x0000000000035f43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006ddf0 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fb7d7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000036086 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000011c3fb : or dword ptr [rdi], ecx ; ret
0x0000000000167fc6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000008a7c2 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x0000000000100f3a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001014ba : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001adb8a : or dword ptr [rsi], 0x54028310 ; ret
0x00000000000269b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x00000000001bbb23 : or dword ptr [rsi], ebp ; ret 0xa
0x0000000000136793 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087ca2 : or eax, 0x10429e ; mov rdx, rcx ; jmp 0x87c77
0x00000000000fbcfa : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019480d : or eax, 0x10fffc ; cld ; call rax
0x00000000000347fb : or eax, 0x15ef10 ; orpd xmm0, xmm1 ; ret
0x00000000000a6a71 : or eax, 0x1c478d48 ; ret
0x00000000000a78c1 : or eax, 0x1d478d48 ; ret
0x0000000000168048 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000019428d : or eax, 0x1e80fffb ; sti ; jmp qword ptr [rax]
0x000000000007bc62 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000fbcb1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000001a46dc : or eax, 0x380e0a03 ; ret
0x000000000006c232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c95a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000bd4b5 : or eax, 0x440f4800 ; ret 0x8d48
0x0000000000095bf2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000bf26a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000012bf8f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006acc2 : or eax, 0x5bd88948 ; ret
0x0000000000137b02 : or eax, 0x5c415d5b ; ret
0x00000000000a5b55 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000003d4b1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000145097 : or eax, 0x83480000 ; ret 0x4910
0x0000000000146c31 : or eax, 0x83480000 ; ret 0xe910
0x00000000001450c5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a7209 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000006e3ba : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008cc82 : or eax, 0x8c48348 ; ret
0x00000000000711f4 : or eax, 0xc2890000 ; jmp 0x7118e
0x000000000017c579 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000001844d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000102a7e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015a833 : or eax, 0xf7f0ff3 ; ret
0x000000000002db93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000059879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001faff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x000000000003577d : or eax, 0xffffffff ; ret
0x00000000001a43bf : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000009ce2c : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000005744f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014428d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146dd1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001442b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000dd98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000012cd82 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d1639 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d0ffc : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000cd499 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008a6ef : or eax, dword ptr [rax] ; ret
0x000000000002a694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x000000000011db2c : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001bbfa8 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000036848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001bac78 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x000000000019ed46 : or eax, dword ptr [rdx] ; ret 0x900e
0x00000000001a43c0 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001af44f : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000034cb7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034b67 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000118810 : or eax, edi ; bswap eax ; ret
0x0000000000106966 : or eax, edi ; ret
0x0000000000034a65 : or eax, edx ; movq xmm0, rax ; ret
0x00000000001069a2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003a68f : or eax, edx ; ret
0x0000000000035044 : or eax, esi ; je 0x34ff1 ; ret
0x00000000001069a5 : or eax, esi ; or rax, rdi ; ret
0x000000000007c884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006df38 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073ce0 : or ebp, eax ; ret 0xfabb
0x00000000000ffbe3 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000006fdc4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010bdac : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001bb882 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000015a9f3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000075ade : or ebx, esi ; ret
0x0000000000082d7a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ecd4 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000c0d5e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000006ffb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010b9bb : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000fee67 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000011008d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ec64b : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000024bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007d0a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000003d479 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ab044 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000ab094 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a5b13 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000001a1a3e : or ecx, dword ptr [rdx + 0xa] ; ret
0x0000000000093ee4 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000ccddb : or edi, dword ptr [rax + 0xfde8] ; jne 0xccdb4 ; ret
0x000000000010dddc : or edi, dword ptr [rax + 1] ; ret
0x000000000012d1b4 : or edi, dword ptr [rax + 2] ; ret
0x0000000000112714 : or edi, dword ptr [rax + 7] ; ret
0x0000000000113146 : or edi, dword ptr [rcx] ; ret 0xf7e
0x000000000017378d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a94a7 : or edi, edi ; loope 0xa951a ; nop dword ptr [rax + rax] ; ret
0x000000000010219b : or edi, edx ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000111c70 : or edx, 0x89480007 ; ret 0x894c
0x00000000001b6c32 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00000000001a1a76 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000001a0868 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000012adf4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000be501 : or esi, dword ptr [rsi + 0x30] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b6c33 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001a70c9 : or esi, eax ; jmp rbx
0x00000000000fb76e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000196d71 : or esi, ebp ; call rsp
0x000000000015a913 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f6104 : or esi, ebx ; ret
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000173731 : or esp, dword ptr [rax] ; and eax, 0x5be17500 ; ret
0x00000000000789d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000fa9b4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000035f42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000167fc5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000780e7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x78085
0x000000000015aa62 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015a9f2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015a982 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001a1a75 : or r14d, dword ptr [r11 + 0xa] ; ret
0x000000000015a912 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000faae6 : or r8b, r13b ; ret
0x00000000001bac77 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00000000001af44e : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x0000000000035043 : or r8d, esi ; je 0x34ff2 ; ret
0x0000000000093ee3 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000d9b42 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000029d93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00000000001a1a3d : or r9d, dword ptr [r10 + 0xa] ; ret
0x0000000000168047 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003577c : or rax, 0xffffffffffffffff ; ret
0x00000000001b9756 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014c232 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001069a7 : or rax, rdi ; ret
0x0000000000034a64 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a68e : or rax, rdx ; ret
0x00000000001069a4 : or rax, rsi ; or rax, rdi ; ret
0x000000000012d293 : or sil, sil ; ret 0x8802
0x0000000000034800 : orpd xmm0, xmm1 ; ret
0x0000000000034801 : orps xmm0, xmm1 ; ret
0x0000000000034bce : orps xmm0, xmm3 ; ret
0x0000000000127ad1 : out -0x18, eax ; cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000133534 : out -0x18, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffee
0x0000000000111452 : out -0x18, eax ; cwde ; ret
0x00000000000f51d2 : out -0x18, eax ; push -0x76000003 ; ret 0xcb8
0x00000000000cba77 : out -0x18, eax ; ret
0x0000000000183380 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000fd3ad : out -0x75, eax ; sub al, 0 ; add rsp, 8 ; ret
0x000000000006aa52 : out -0x77, eax ; push rsp ; and al, 0xc ; call 0xf6d07
0x0000000000039905 : out -0x77, eax ; ret
0x00000000000302fe : out -0x77, eax ; ret 0x8948
0x00000000000f0889 : out -0x77, eax ; ret 0x8b48
0x000000000002df33 : out -0x80, eax ; sete al ; ret
0x00000000001850a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000001ae1a9 : out -0xc, eax ; jmp qword ptr [rcx]
0x000000000015a27a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000194951 : out -5, eax ; call qword ptr [rax]
0x00000000001971f5 : out 0, al ; add byte ptr [rax + rdi*2], al ; out dx, al ; call rsp
0x0000000000197215 : out 0, eax ; add ah, dl ; jl 0x19720f ; jmp rsp
0x00000000001a96f5 : out 0, eax ; add byte ptr [rax], ch ; out dx, eax ; int1 ; jmp rcx
0x0000000000118819 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000111ac1 : out 0x31, eax ; shr al, 0xb7 ; ret
0x000000000003730b : out 0x41, eax ; call rdi
0x000000000003731c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000085f86 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f3453 : out 0x48, al ; mov edi, ebp ; call 0xef756
0x0000000000037345 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000088152 : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000129e2c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x000000000012db86 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000872b4 : out 0x48, al ; mov edi, ebx ; call rax
0x0000000000129a20 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000ab130 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000484c8 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000fe6d5 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000d0cbf : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000882a7 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000001295ef : out 0x4c, eax ; mov esi, esi ; call 0x558b6
0x00000000000acd6b : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00000000000854ae : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000007bfd3 : out 0x5b, al ; ret
0x0000000000138338 : out 0x5b, eax ; ret
0x0000000000085c8b : out 0x5d, al ; pop r12 ; jmp rax
0x000000000000247e : out 0xa9, al ; ret 0xbd07
0x00000000000f59d1 : out 0xe8, al ; fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000139bee : out 0xe8, al ; jl 0x139c56 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000011718d : out 0xe8, al ; lodsd eax, dword ptr [rsi] ; ret 0xfff5
0x00000000000eb027 : out 0xe8, al ; ret
0x00000000000b1288 : out 0xe8, al ; ret 0x594
0x00000000000cc821 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00000000001a6229 : out 0xee, al ; call qword ptr [rax]
0x0000000000082740 : out 0xf, al ; xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000015a1fa : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000094e09 : out 0xf3, al ; ret
0x00000000001ae149 : out 0xf4, al ; jmp qword ptr [rbx]
0x0000000000198d31 : out 0xf6, al ; call rsp
0x0000000000199551 : out 0xf7, al ; dec esp ; ret
0x0000000000199559 : out 0xf7, al ; jmp rsp
0x000000000006f734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001b95a5 : out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00000000001bc608 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000001233fc : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012359d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000208f1 : out 4, eax ; add rdi, rbp ; call rax
0x000000000011d5c3 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000093d59 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000012d759 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047d66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000001972ad : out dx, al ; add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00000000001a9ddd : out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x000000000012301f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x12302c ; ret
0x00000000000967d3 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009687b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000012301c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12302f ; ret
0x0000000000082d7d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000076a43 : out dx, al ; call 0x4d178
0x00000000001a5802 : out dx, al ; call qword ptr [rax]
0x0000000000186cfa : out dx, al ; call qword ptr [rcx - 0x12]
0x00000000001a5e6a : out dx, al ; call qword ptr [rcx]
0x00000000001a5882 : out dx, al ; call qword ptr [rdx]
0x00000000001a4cc2 : out dx, al ; call qword ptr [rsi]
0x00000000000882ad : out dx, al ; call rax
0x0000000000186bbe : out dx, al ; call rsp
0x0000000000186c4e : out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x0000000000186c4a : out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x0000000000139bf2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130247 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000013323b : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000186d26 : out dx, al ; dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x0000000000186bb6 : out dx, al ; dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001844d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000018648a : out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x000000000018648e : out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x0000000000186bba : out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00000000001872ad : out dx, al ; int1 ; call rax
0x00000000001872dd : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00000000001872cd : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00000000001872d5 : out dx, al ; int1 ; jmp rax
0x0000000000186492 : out dx, al ; jmp qword ptr [rax]
0x00000000001a5632 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a5312 : out dx, al ; jmp qword ptr [rdi]
0x00000000001a578a : out dx, al ; jmp qword ptr [rdx]
0x000000000018697a : out dx, al ; jmp qword ptr [rsi]
0x0000000000186462 : out dx, al ; jmp rax
0x00000000001a5db2 : out dx, al ; jmp rbx
0x00000000001a5a62 : out dx, al ; jmp rdx
0x0000000000186d2e : out dx, al ; jmp rsp
0x0000000000003795 : out dx, al ; jne 0x3775 ; ret 0x975
0x00000000001970ea : out dx, al ; lcall ptr [rcx + 0x6a440000] ; out dx, al ; jmp rsp
0x0000000000186976 : out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x0000000000197212 : out dx, al ; ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x0000000000003183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000015204a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ef0f4 : out dx, al ; mov rdi, rbx ; call 0x3b3c6
0x00000000000bce79 : out dx, al ; mov rdi, rbx ; call 0x89166
0x00000000000850cf : out dx, al ; mov rdi, rbx ; call rax
0x000000000015a60a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000ab4f9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014a88e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d9b45 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000008e7e4 : out dx, al ; or eax, dword ptr [rax] ; ret
0x0000000000186972 : out dx, al ; push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00000000001972aa : out dx, al ; push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00000000000e33fe : out dx, al ; ret
0x00000000000025b2 : out dx, al ; ret 0x88ad
0x00000000001882dc : out dx, al ; sal ebx, 1 ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00000000000c790d : out dx, al ; xor edx, edx ; jmp 0xc78d9
0x00000000000aa3dd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000100f3d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf68f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000001b9f1d : out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x000000000007ecd7 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000139b9c : out dx, eax ; add rbx, r12 ; call r14
0x0000000000171f7d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000f3456 : out dx, eax ; call 0xef753
0x00000000000faaf2 : out dx, eax ; call 0xf6d03
0x000000000012d75f : out dx, eax ; call qword ptr [rbx]
0x00000000001a6d52 : out dx, eax ; call qword ptr [rdi]
0x000000000011f36f : out dx, eax ; call r12
0x00000000000391ad : out dx, eax ; call r14
0x0000000000037348 : out dx, eax ; call r15
0x000000000011c306 : out dx, eax ; call rax
0x00000000000ac6e7 : out dx, eax ; call rbx
0x000000000013b3a2 : out dx, eax ; call rcx
0x000000000012d256 : out dx, eax ; call rdx
0x0000000000197452 : out dx, eax ; call rsp
0x00000000001891f8 : out dx, eax ; cmc ; call qword ptr [rdi]
0x000000000012a4a6 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134195 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001341d4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x000000000019759a : out dx, eax ; dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00000000001975e2 : out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00000000001861c9 : out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001861cd : out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001976c2 : out dx, eax ; inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x000000000019755a : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00000000001872e1 : out dx, eax ; int1 ; call qword ptr [rax]
0x00000000001872e5 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x00000000001a96f9 : out dx, eax ; int1 ; jmp rcx
0x000000000009ce11 : out dx, eax ; jmp 0x9c7bb
0x000000000009d84b : out dx, eax ; jmp 0x9c843
0x0000000000186e2e : out dx, eax ; jmp qword ptr [rax + 0x24]
0x0000000000186df2 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a706a : out dx, eax ; jmp qword ptr [rbx]
0x000000000012b998 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x0000000000186e0e : out dx, eax ; jmp rsi
0x00000000001973b2 : out dx, eax ; jmp rsp
0x0000000000186e06 : out dx, eax ; lcall ptr [rax - 0x23] ; out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x0000000000186e0a : out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x0000000000197612 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x000000000012bed6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013a89b : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013a8e5 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000000bce5d : out dx, eax ; mov esi, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000151e7a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151f76 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000151ec2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000048b80 : out dx, eax ; mov rax, rdx ; ret
0x00000000001147f0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000134fcb : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000131b93 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013199b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000129e2f : out dx, eax ; mov rcx, r13 ; call rbx
0x00000000000378b5 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000015a68a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014a98d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001737bc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000084e14 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000173609 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b1
0x0000000000072cc1 : out dx, eax ; pop rbx ; ret
0x00000000001973aa : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f940000] ; out dx, eax ; jmp rsp
0x000000000016d8e3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016d8f8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016d90d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa268 : out dx, eax ; ret
0x000000000012b34d : out dx, eax ; ret 0
0x00000000000a96f3 : out dx, eax ; ret 0xf66
0x000000000016edfc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016ede5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016edce : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016d88a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012cb5e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000048088 : out dx, eax ; xor eax, eax ; ret
0x000000000014653e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187a72 : outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00000000000beb41 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010bb0e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016fd9e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001b1d8d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b1dbd : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000000b2774 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000000c8a00 : outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001afd39 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000034cbb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000018700d : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187009 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187011 : outsb dx, byte ptr [rsi] ; int1 ; jmp rax
0x0000000000184c83 : outsb dx, byte ptr [rsi] ; ja 0x184c0c ; ret 0x48f
0x0000000000197121 : outsb dx, byte ptr [rsi] ; out dx, al ; call rsp
0x00000000000be8fe : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00000000001829c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000f5850 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000000366d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000fd908 : outsb dx, byte ptr [rsi] ; sub al, 0 ; mov rdx, rax ; jmp 0xfd8a4
0x000000000008ebaa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000001093ad : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000195ead : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00000000000964fd : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b1e7d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b1ec5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b1e95 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b1e4d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000d58cc : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e1683d
0x00000000001bb379 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000001bb349 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001bb469 : outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00000000000f36b0 : outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001afe29 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000114a9d : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000089338 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008f27e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000d58c8 : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16841
0x000000000016ebfd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016ec9d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008c97a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003d2fc : outsd dx, dword ptr [rsi] ; ret
0x0000000000114aa1 : outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000183386 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000001527b7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000016eca2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000e0132 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000008c9ca : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000e0115 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000019c3c9 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000000fd872 : outsd dx, dword ptr [rsi] ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000183385 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000144182 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000ab384 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000ab36f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000144181 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000184785 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000184786 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000009ddf1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000009e465 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000034b41 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034e71 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000009e473 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009e515 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9e599 ; xor eax, eax ; ret
0x0000000000034b40 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034e70 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000008ab9f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8abb3 ; bsf eax, edx ; ret
0x00000000001a3f25 : pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00000000000db305 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x00000000001144b5 : pop r10 ; ret
0x0000000000184c0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000840fa : pop r12 ; jmp rax
0x0000000000085f8c : pop r12 ; jmp rcx
0x0000000000101c8f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000101ca9 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000017360c : pop r12 ; pop r13 ; jmp 0x1f8ae
0x00000000000423cc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010345b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002024f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb02 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d125 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000206c2 : pop r12 ; pop r13 ; ret
0x00000000000b5a24 : pop r12 ; pop r14 ; ret
0x00000000000398c6 : pop r12 ; pop rbp ; ret
0x000000000001fb12 : pop r12 ; ret
0x000000000017360e : pop r13 ; jmp 0x1f8ac
0x00000000000423ce : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010345d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb04 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e5 : pop r13 ; pop r14 ; ret
0x0000000000073632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d127 : pop r13 ; pop rbp ; ret
0x00000000000206c4 : pop r13 ; ret
0x00000000000423d0 : pop r14 ; fmul st(0) ; ret
0x000000000004234e : pop r14 ; fmulp st(1) ; ret
0x000000000010345f : pop r14 ; pop r15 ; jmp rax
0x0000000000020253 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210ff : pop r14 ; pop r15 ; ret
0x00000000000ccb06 : pop r14 ; pop rbp ; ret
0x00000000000202e7 : pop r14 ; ret
0x0000000000073634 : pop r14 ; sar rax, 2 ; ret
0x0000000000103461 : pop r15 ; jmp rax
0x0000000000020255 : pop r15 ; pop rbp ; ret
0x0000000000021101 : pop r15 ; ret
0x000000000007e80c : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000134546 : pop r8 ; mov eax, 1 ; ret
0x0000000000193ab7 : pop r9 ; clc ; ret 0x6e1f
0x00000000000ed0af : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000134c7e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001a0765 : pop rax ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x000000000005df1c : pop rax ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001b07ad : pop rax ; add dword ptr [rax], eax ; jo 0x1b073d ; cmc ; jmp rax
0x00000000001b2078 : pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000134e44 : pop rax ; call rax
0x0000000000194f99 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000194e19 : pop rax ; cld ; call rdx
0x0000000000194f59 : pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x0000000000194f95 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000001af508 : pop rax ; cmc ; jmp rax
0x00000000001ade48 : pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x0000000000186e08 : pop rax ; fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x0000000000134c86 : pop rax ; jmp rcx
0x00000000001b03e8 : pop rax ; js 0x1b03e3 ; jmp qword ptr [rbx]
0x000000000019d968 : pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x000000000019ff98 : pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x000000000007e80d : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000134547 : pop rax ; mov eax, 1 ; ret
0x000000000002def4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012dbde : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000101408 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e455e : pop rax ; or bh, dh ; ret
0x00000000000a4114 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000001f92e : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000106829 : pop rax ; pop rdi ; call rax
0x00000000001429c1 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000033544 : pop rax ; ret
0x00000000001a0888 : pop rax ; shr ah, 1 ; jmp rbx
0x0000000000199f39 : pop rax ; stc ; jmp rsp
0x00000000000d0dc6 : pop rbp ; adc al, ch ; ret
0x00000000000dded7 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000ddd0d : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x00000000001186c6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009d859 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000010f5df : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019827d : pop rbp ; add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x000000000012dc8d : pop rbp ; add eax, edx ; ret
0x00000000001147f3 : pop rbp ; clc ; leave ; ret
0x0000000000194d81 : pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x0000000000194bc1 : pop rbp ; cld ; call rsi
0x0000000000194bbd : pop rbp ; cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x000000000019a801 : pop rbp ; cli ; call rsp
0x0000000000048daa : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000001968e1 : pop rbp ; in eax, dx ; jmp rsp
0x00000000001a8d51 : pop rbp ; int1 ; jmp qword ptr [rcx]
0x000000000017360f : pop rbp ; jmp 0x1f8ab
0x0000000000071fc4 : pop rbp ; jmp rax
0x000000000012b375 : pop rbp ; jmp rcx
0x000000000012cb62 : pop rbp ; jmp rdx
0x00000000001735ba : pop rbp ; jo 0x17360c ; mov edi, dword ptr [rbx] ; call 0x1f8af
0x000000000013cb0b : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000007ec45 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000000840f9 : pop rbp ; pop r12 ; jmp rax
0x0000000000085f8b : pop rbp ; pop r12 ; jmp rcx
0x0000000000101c8e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000101ca8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000017360b : pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8af
0x00000000000423cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042349 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010345a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000210fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000202e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b5a23 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb11 : pop rbp ; pop r12 ; ret
0x000000000012bf16 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000423cf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000004234d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000010345e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000020252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fe : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ccb05 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000202e6 : pop rbp ; pop r14 ; ret
0x0000000000073633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x000000000006d128 : pop rbp ; pop rbp ; ret
0x0000000000048438 : pop rbp ; pop rbx ; ret
0x000000000001f930 : pop rbp ; ret
0x0000000000048db2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000076ca6 : pop rbp ; sbb al, ch ; ret
0x000000000007915c : pop rbp ; sub rax, rdx ; ret
0x00000000000d4b37 : pop rbp ; test al, 0xe8 ; ret 0xfd7a
0x0000000000112741 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000001a0a7d : pop rbx ; add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x0000000000181f58 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000aa08c : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000aa0bf : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000114737 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000194b91 : pop rbx ; cld ; call qword ptr [rsi]
0x0000000000194d51 : pop rbx ; cld ; call rax
0x0000000000194cd1 : pop rbx ; cld ; jmp rsp
0x0000000000194ccd : pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00000000001af9c1 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000181f56 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006e28e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f8ca : pop rbx ; jmp rax
0x00000000001186f8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000070b80 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000070b6c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000d4d82 : pop rbx ; mov eax, 1 ; ret
0x00000000000ef0db : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000003a725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000aa12c : pop rbx ; mov eax, eax ; ret
0x0000000000047a11 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000011615e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000717ca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb8eb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000173c49 : pop rbx ; mov esp, 0x1f0fffea ; add bl, dh ; ret
0x000000000009e2bd : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000072220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006eff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fc82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000085c88 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x0000000000132dd4 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000ccb01 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006d124 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000398c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012dc8c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc3 : pop rbx ; pop rbp ; jmp rax
0x000000000012b374 : pop rbx ; pop rbp ; jmp rcx
0x000000000012cb61 : pop rbx ; pop rbp ; jmp rdx
0x00000000000840f8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000085f8a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000101c8d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000101ca7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000017360a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b0
0x00000000000202e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b5a22 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb10 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012bf15 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f92f : pop rbx ; pop rbp ; ret
0x000000000007915b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x000000000002a69a : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x0000000000185240 : pop rbx ; ret 0x6f9
0x000000000019434d : pop rbx ; sti ; jmp qword ptr [rax]
0x00000000000ac5a9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000001fb74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009e2ab : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000019aadd : pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x0000000000193730 : pop rcx ; clc ; ret 0x6e1f
0x0000000000034ce0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000001a31f9 : pop rcx ; in eax, dx ; call qword ptr [rax]
0x00000000001968b9 : pop rcx ; in eax, dx ; jmp rsp
0x0000000000029c93 : pop rcx ; lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00000000000662e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000bd4b4 : pop rcx ; or eax, 0x440f4800 ; ret 0x8d48
0x0000000000186979 : pop rcx ; out dx, al ; jmp qword ptr [rsi]
0x0000000000186461 : pop rcx ; out dx, al ; jmp rax
0x0000000000186975 : pop rcx ; out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x000000000013c01f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010134b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9aba : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000188804 : pop rcx ; push rbx ; hlt ; jmp qword ptr [rdx]
0x000000000003c1af : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fc3e2 : pop rcx ; ret
0x000000000007d87e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000abe33 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x000000000012d1c4 : pop rcx ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001509f8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000f63e2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014b01d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010682a : pop rdi ; call rax
0x0000000000194bb1 : pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x0000000000194ced : pop rdi ; cld ; call rsp
0x0000000000194ce9 : pop rdi ; cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x0000000000194b6d : pop rdi ; cld ; jmp qword ptr [rax]
0x0000000000152419 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152229 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001844fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000019ff19 : pop rdi ; jmp 0x19ff1d
0x000000000019ff18 : pop rdi ; jmp 0x19ff1e
0x0000000000103462 : pop rdi ; jmp rax
0x00000000001834c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000186c51 : pop rdi ; out dx, al ; call rsp
0x0000000000186c4d : pop rdi ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x0000000000152049 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151e79 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151f75 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000151ec1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000020256 : pop rdi ; pop rbp ; ret
0x0000000000021102 : pop rdi ; ret
0x0000000000067499 : pop rdi ; ret 0xffff
0x00000000000c6cd5 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001100fe : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000145906 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000001af961 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000003a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001840e1 : pop rdx ; je 0x1840ab ; ret 0xacfc
0x0000000000003185 : pop rdx ; jmp 0xffffffff88c2d332
0x00000000000abcd3 : pop rdx ; or al, 0 ; ret
0x00000000001850a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x000000000018648d : pop rdx ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x0000000000186491 : pop rdx ; out dx, al ; jmp qword ptr [rax]
0x00000000001144b4 : pop rdx ; pop r10 ; ret
0x000000000010140c : pop rdx ; pop rbx ; ret
0x00000000000e9ab9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000001144d9 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000184c10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000ab9c5 : pop rdx ; test al, 0xf0 ; jne 0xab9f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014af1e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012354c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x000000000010876c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x0000000000194c35 : pop rsi ; cld ; call qword ptr [rdx]
0x0000000000194b79 : pop rsi ; cld ; call rax
0x0000000000194b75 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x0000000000194bb5 : pop rsi ; cld ; jmp qword ptr [rsi]
0x0000000000194d75 : pop rsi ; cld ; jmp rax
0x00000000000cd30e : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000423d1 : pop rsi ; fmul st(0) ; ret
0x000000000004234f : pop rsi ; fmulp st(1) ; ret
0x0000000000188128 : pop rsi ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000194550 : pop rsi ; mov bh, 0xfd ; call rcx
0x0000000000093ef5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000186bbd : pop rsi ; out dx, al ; call rsp
0x0000000000186bb9 : pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x0000000000186a0d : pop rsi ; out dx, al ; jmp qword ptr [rsi]
0x0000000000103460 : pop rsi ; pop r15 ; jmp rax
0x0000000000020254 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000021100 : pop rsi ; pop r15 ; ret
0x00000000000ccb07 : pop rsi ; pop rbp ; ret
0x00000000000202e8 : pop rsi ; ret
0x00000000001011cb : pop rsi ; ret 0xcdbb
0x0000000000073635 : pop rsi ; sar rax, 2 ; ret
0x00000000000f84e5 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000146750 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000197614 : pop rsp ; add al, 1 ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x0000000000145c04 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019ab4d : pop rsp ; add al, byte ptr [rax] ; in al, -0x2a ; cli ; call rsp
0x00000000001a3094 : pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00000000000d89b2 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000147450 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000bad45 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000194b89 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000194d85 : pop rsp ; cld ; jmp qword ptr [rax]
0x0000000000194b8d : pop rsp ; cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x0000000000194c49 : pop rsp ; cld ; jmp rdx
0x00000000001b8994 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x0000000000197951 : pop rsp ; int1 ; call rsp
0x0000000000189c70 : pop rsp ; jle 0x189c6c ; jmp rdx
0x000000000019fe61 : pop rsp ; jmp 0x19fe65
0x00000000000840fb : pop rsp ; jmp rax
0x0000000000085f8d : pop rsp ; jmp rcx
0x000000000019932c : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x0000000000187bb4 : pop rsp ; mov dr0, ebx ; jmp rdx
0x0000000000101c90 : pop rsp ; mov esi, 2 ; jmp rax
0x0000000000101caa : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001445e0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139bf1 : pop rsp ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000001b1e94 : pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x000000000017360d : pop rsp ; pop r13 ; jmp 0x1f8ad
0x00000000000423cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010345c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb03 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d126 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x00000000000b5a25 : pop rsp ; pop r14 ; ret
0x00000000000398c7 : pop rsp ; pop rbp ; ret
0x0000000000186978 : pop rsp ; pop rcx ; out dx, al ; jmp qword ptr [rsi]
0x000000000019ff94 : pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00000000001b0594 : pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb1e
0x0000000000003838 : pop rsp ; ret
0x000000000011b1d8 : pop rsp ; ret 0x2a
0x000000000000318d : pop rsp ; ret 0x52c0
0x0000000000194311 : pop rsp ; sti ; jmp rax
0x000000000019d994 : pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00000000001ae394 : pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001966f5 : popfq ; add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196701
0x00000000001a4cbd : popfq ; add byte ptr [rax], al ; nop ; add esi, ebp ; call qword ptr [rsi]
0x00000000001b4c7d : popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x0000000000198dad : popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00000000001ad77e : popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000195811 : popfq ; cld ; call rdx
0x000000000019584d : popfq ; cld ; jmp qword ptr [rdx]
0x00000000001944d0 : popfq ; mov ch, 0xfd ; call rcx
0x000000000011db2b : popfq ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000c89ff : popfq ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e84d5 : popfq ; ret
0x0000000000147e30 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000005a7b3 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000015a752 : psllq mm1, qword ptr [r15] ; jg 0x15a76d ; ret
0x000000000015d222 : psllq mm1, qword ptr [r15] ; jg 0x15d23d ; ret
0x000000000015fd42 : psllq mm1, qword ptr [r15] ; jg 0x15fd5d ; ret
0x000000000015a753 : psllq mm1, qword ptr [rdi] ; jg 0x15a76c ; ret
0x000000000015d223 : psllq mm1, qword ptr [rdi] ; jg 0x15d23c ; ret
0x000000000015fd43 : psllq mm1, qword ptr [rdi] ; jg 0x15fd5c ; ret
0x00000000000a52b6 : psllq mm1, qword ptr [rdi] ; jg 0xa52ca ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a52b5 : psllq mm1, qword ptr [rdi] ; jg 0xa52cb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5317 : psllq mm1, qword ptr [rdi] ; jg 0xa532c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5f86 : psllq mm1, qword ptr [rdi] ; jg 0xa5f9a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5f85 : psllq mm1, qword ptr [rdi] ; jg 0xa5f9b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5fe7 : psllq mm1, qword ptr [rdi] ; jg 0xa5ffc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8396 : psllq mm1, qword ptr [rdi] ; jg 0xa83aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8395 : psllq mm1, qword ptr [rdi] ; jg 0xa83ab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a83f7 : psllq mm1, qword ptr [rdi] ; jg 0xa840c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8e66 : psllq mm1, qword ptr [rdi] ; jg 0xa8e7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8e65 : psllq mm1, qword ptr [rdi] ; jg 0xa8e7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8ec7 : psllq mm1, qword ptr [rdi] ; jg 0xa8edc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000be66c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x0000000000002c01 : push -0x7329150 ; ret
0x00000000000f51d4 : push -0x76000003 ; ret 0xcb8
0x000000000004b15c : push -0x76000005 ; ret 0x8941
0x000000000005c896 : push -0x7c000006 ; ret 0x8908
0x000000000016fd84 : push -0x9ffffff ; ret 0x7501
0x000000000002057f : push -0xcfffff7 ; ret
0x00000000000ab9b7 : push -0xfb872b8 ; ret
0x000000000012b8ba : push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000045f8f : push 0x11b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000004665e : push 0x13b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000012b8bc : push 0x19 ; call qword ptr [rax]
0x00000000000f97e8 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000e04dc : push 0x2494b60f ; ret
0x000000000005633c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x00000000001b973a : push 0x41380e0a ; ret
0x0000000000198405 : push 0x44940001 ; cmc ; jmp rsp
0x00000000000850cc : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000000abcd2 : push 0x5a ; or al, 0 ; ret
0x000000000012acd4 : push 0x5b0029d0 ; ret
0x00000000000e7e93 : push 0x5c415d5b ; pop r13 ; ret
0x0000000000185cb9 : push 0x65f7ffed ; in eax, dx ; call rdx
0x0000000000185ca5 : push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000184c82 : push 0x6e ; ja 0x184c0d ; ret 0x48f
0x0000000000188260 : push 0xd3 ; call qword ptr [rcx]
0x000000000019d009 : push 0xe9 ; jmp rax
0x00000000001970f1 : push 0xee ; jmp rsp
0x00000000001b6e99 : push 0xf7 ; jmp rsi
0x000000000009628b : push 0xff ; ja 0x96271 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001343de : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000a5d12 : push 5 ; add byte ptr [rax], al ; ret
0x000000000002cdd2 : push 6 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000504c1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000194b17 : push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x0000000000194b03 : push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x0000000000194b73 : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x000000000019505f : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x000000000019576f : push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x0000000000195557 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000194d8b : push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x0000000000194327 : push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000187b93 : push qword ptr [rax + 0x6dfff381] ; jl 0x187b96 ; jmp rdx
0x0000000000187b92 : push qword ptr [rax + 0x6dfff381] ; jl 0x187b97 ; jmp rdx
0x0000000000187403 : push qword ptr [rax + 1] ; jmp qword ptr [rax - 0x2f000dff]
0x000000000019421b : push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x0000000000199e3b : push qword ptr [rax + rax + 0x3bf40002] ; stc ; jmp rsp
0x0000000000195403 : push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x0000000000187217 : push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x000000000018a4b7 : push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x0000000000188983 : push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00000000001873f3 : push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x000000000018741b : push qword ptr [rax - 0x2f000dff] ; add edx, esi ; jmp rax
0x00000000001947bf : push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00000000001872cb : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187257 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187007 : push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001957bf : push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00000000001959c3 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000060dbb : push qword ptr [rax - 0x77] ; ret
0x0000000000194937 : push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x000000000019498b : push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000001947ef : push qword ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000194877 : push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x000000000019471b : push qword ptr [rax] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00000000001954cb : push qword ptr [rax] ; ja 0x1954cf ; call rax
0x00000000001952c7 : push qword ptr [rax] ; js 0x1952cf ; jmp qword ptr [rax + 0x16fffc77]
0x00000000000a4b1f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001945cf : push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x0000000000194f57 : push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00000000001942ef : push qword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000171708 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000001887ef : push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x000000000007469b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000007ba4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000072b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000141db0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000013365e : push qword ptr [rbp + rcx - 0x18] ; ret 0xffee
0x0000000000072b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000c7dfe : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048b7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000011f192 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x0000000000127bcb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017368c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000484c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000114f82 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000cb6e5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f4e98 : push qword ptr [rbx + 0x34] ; ret
0x000000000003576c : push qword ptr [rbx + 1] ; ret
0x0000000000047b26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000072cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000194ccf : push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x0000000000073cde : push qword ptr [rbx + rcx - 0x18] ; ret 0xfabb
0x00000000001982d3 : push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x0000000000186973 : push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x0000000000196cf3 : push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x000000000019a473 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00000000001969c3 : push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x000000000019452f : push qword ptr [rcx - 0x4a] ; std ; call rcx
0x0000000000074b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ce7db : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000075f78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000504c2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000b7065 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x0000000000114cec : push qword ptr [rdi + 0x1b] ; ret
0x000000000003542d : push qword ptr [rdi + 0x20] ; ret
0x00000000000f6a68 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f6b0c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000018127f : push qword ptr [rdi + 0x7bffeb21] ; and ch, bl ; call rdx
0x00000000000fbbb3 : push qword ptr [rdi + 0xa] ; ret
0x00000000000f6102 : push qword ptr [rdi + 0xb] ; ret
0x00000000000357a1 : push qword ptr [rdi + 0xc] ; ret
0x00000000000cc9dc : push qword ptr [rdi + 1] ; ret
0x00000000000357eb : push qword ptr [rdi + 2] ; ret
0x00000000000f600a : push qword ptr [rdi + 3] ; ret
0x00000000000f6059 : push qword ptr [rdi + 4] ; ret
0x00000000000cb5c0 : push qword ptr [rdi + 5] ; ret
0x00000000000cb4cf : push qword ptr [rdi + 6] ; ret
0x00000000000c8aa6 : push qword ptr [rdi + 7] ; ret
0x0000000000035735 : push qword ptr [rdi + 8] ; ret
0x00000000000c782c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000bb88c : push qword ptr [rdi + 9] ; ret
0x000000000007b596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000e7916 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001951d3 : push qword ptr [rdi + rax*4 - 0x78bb0004] ; cld ; call rsp
0x0000000000187b13 : push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x0000000000133c46 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x0000000000194ce7 : push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x00000000001973ab : push qword ptr [rdi + rsi*8 + 0x1f940000] ; out dx, eax ; jmp rsp
0x000000000009628c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114cc4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195643 : push qword ptr [rdx + 0x42fffca8] ; test al, 0xfc ; call rdx
0x0000000000199f0b : push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x0000000000197e1b : push qword ptr [rdx + rdi + 0x24540001] ; jmp rsp
0x00000000000ac6fb : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000188487 : push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x0000000000195317 : push qword ptr [rdx] ; jle 0x19531f ; jmp qword ptr [rdx + 0x22fffc7d]
0x0000000000194bbb : push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00000000001950a7 : push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x000000000019559f : push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x0000000000108dc9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000001972ab : push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00000000001943af : push qword ptr [rsi - 0x60] ; std ; jmp qword ptr [rdx]
0x000000000019508f : push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00000000001887e7 : push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x0000000000188783 : push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x0000000000199a83 : push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x000000000019691b : push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x0000000000196b23 : push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x000000000018869c : push r11 ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00000000001886a0 : push r11 ; hlt ; jmp qword ptr [rdx]
0x0000000000134476 : push r12 ; mov eax, 1 ; ret
0x0000000000188938 : push r13 ; hlt ; jmp qword ptr [rdx]
0x000000000007b20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000071c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012bb4d : push rax ; adc dh, dh ; ret 0x7401
0x0000000000080c4d : push rax ; adc dh, dh ; ret 0xf0f
0x000000000019a92d : push rax ; add al, byte ptr [rax] ; je 0x19a8d8 ; cli ; call rsp
0x0000000000194897 : push rax ; add bh, ah ; call rax
0x000000000007b20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019ff95 : push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x000000000018744b : push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000077f5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001b0005 : push rax ; add dword ptr [rax], eax ; jno 0x1b0006 ; jmp qword ptr [rcx]
0x00000000001aff75 : push rax ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0035 : push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x000000000002d711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x0000000000094b9f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000001948fb : push rax ; add edi, esp ; jmp rax
0x0000000000187427 : push rax ; add edx, esi ; call qword ptr [rax]
0x00000000001947f3 : push rax ; add esp, edi ; call rax
0x0000000000194874 : push rax ; add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x000000000013b019 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ac77 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000140471 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001b1e50 : push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000218e8 : push rax ; call rbx
0x0000000000187393 : push rax ; cld ; int1 ; call qword ptr [rax]
0x00000000001b2910 : push rax ; cmp al, 0xf6 ; call qword ptr [rax]
0x000000000004b829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000195287 : push rax ; cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x0000000000194613 : push rax ; fsincos ; call rax
0x0000000000188749 : push rax ; hlt ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x0000000000188935 : push rax ; hlt ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00000000001885c1 : push rax ; hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x0000000000188841 : push rax ; hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00000000001885d1 : push rax ; hlt ; jmp qword ptr [rdx]
0x0000000000188547 : push rax ; hlt ; jmp rax
0x0000000000188801 : push rax ; hlt ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00000000001887e5 : push rax ; hlt ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00000000001ae3b0 : push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000187267 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x000000000019466c : push rax ; in eax, -5 ; jmp rax
0x0000000000187293 : push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000174ca4 : push rax ; jb 0x174c95 ; call rax
0x00000000001b00b0 : push rax ; jb 0x1b00ab ; jmp qword ptr [rcx]
0x00000000001952a0 : push rax ; jge 0x1952a2 ; call rax
0x00000000001952a8 : push rax ; jl 0x1952aa ; call rax
0x00000000001a5c30 : push rax ; jle 0x1a5c24 ; jmp qword ptr [rcx]
0x00000000001966f9 : push rax ; jmp 0x1966fd
0x00000000001952b0 : push rax ; jnp 0x1952b2 ; call rax
0x000000000019b600 : push rax ; jnp 0x19b603 ; jmp qword ptr [rdx]
0x00000000001952b8 : push rax ; jp 0x1952ba ; call rax
0x00000000001957bb : push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x0000000000074fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000195758 : push rax ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000005f10a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x00000000001959e8 : push rax ; mov ah, bh ; call rax
0x0000000000195a2c : push rax ; mov bh, ah ; call rax
0x00000000001959f8 : push rax ; mov dr1, esp ; call rax
0x0000000000023ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000194750 : push rax ; mov ebp, 0xc190fffb ; sti ; jmp rax
0x00000000001959f0 : push rax ; mov edi, esp ; call rax
0x0000000000134c66 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000112736 : push rax ; mov rsi, rdx ; call rax
0x0000000000195a3c : push rax ; nop ; cld ; call rax
0x000000000007eb82 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000815d2 : push rax ; or dh, dh ; ret 0x7404
0x0000000000081545 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe57 : push rax ; or dh, dh ; ret 0xf08
0x00000000001444ec : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001872db : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00000000001afd50 : push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000193ab6 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001af9f0 : push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000000abf5e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194d74 : push rax ; pop rsi ; cld ; jmp rax
0x0000000000194d90 : push rax ; push rcx ; cld ; call qword ptr [rax]
0x00000000001873e3 : push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000188977 : push rax ; push rdx ; hlt ; jmp rax
0x0000000000023ad0 : push rax ; push rsp ; ret
0x000000000019598f : push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x000000000000bb70 : push rax ; ret
0x000000000007c4dc : push rax ; ret 0x34
0x00000000000bf651 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c25e4 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000007c886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000010f4f2 : push rax ; sbb dh, dh ; ret 0x7508
0x0000000000194283 : push rax ; sbb ebx, edi ; jmp rax
0x0000000000113e35 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f4fa1 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001873b3 : push rax ; std ; int1 ; jmp qword ptr [rax]
0x00000000001942f7 : push rax ; sti ; call rax
0x00000000001942ec : push rax ; sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000194ab4 : push rax ; sub ah, bh ; jmp qword ptr [rax]
0x0000000000194a9c : push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00000000001008bc : push rax ; sub dword ptr [rax + rax], ebp ; ret
0x0000000000194a1c : push rax ; sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x0000000000194997 : push rax ; sub edi, esp ; call rax
0x0000000000195a1c : push rax ; test bh, ah ; call rax
0x00000000001959e0 : push rax ; test edi, esp ; call rax
0x0000000000195260 : push rax ; xchg ah, bh ; jmp rax
0x0000000000195a44 : push rax ; xchg eax, ebx ; cld ; call rax
0x0000000000195a00 : push rax ; xchg eax, ecx ; cld ; call rax
0x00000000001ace10 : push rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x0000000000195a08 : push rax ; xchg eax, esp ; cld ; call rax
0x0000000000195a24 : push rax ; xchg esp, edi ; call rax
0x0000000000194a8c : push rax ; xor al, 0xfc ; jmp rax
0x000000000007bfcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000000e1860 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e1885 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x0000000000171f87 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012e18c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000f5072 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4ff4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000004950f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000f189d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001023a1 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d3a1c : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000194fb1 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000194fad : push rbp ; cld ; call qword ptr [rax]
0x0000000000194e31 : push rbp ; cld ; call rdx
0x0000000000194f71 : push rbp ; cld ; jmp qword ptr [rax + 0x20fffc54]
0x0000000000194f6d : push rbp ; cld ; jmp qword ptr [rax]
0x00000000000ed0f8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000018874d : push rbp ; hlt ; call qword ptr [rbx]
0x0000000000188755 : push rbp ; hlt ; jmp qword ptr [rdi]
0x0000000000188939 : push rbp ; hlt ; jmp qword ptr [rdx]
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x00000000000e2427 : push rbp ; jno 0xe242f ; dec dword ptr [rax - 0x77] ; ret
0x0000000000194510 : push rbp ; mov ch, 0xfd ; call rcx
0x0000000000113b14 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000148f78 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001132b4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000d630b : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd633d ; or byte ptr [rcx], ch ; ret
0x00000000000fa2fa : push rbp ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000188743 : push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00000000000989b8 : push rbp ; ret
0x000000000009afc6 : push rbp ; ret 0x8348
0x00000000000989aa : push rbp ; ret 0x8349
0x0000000000104e2a : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x0000000000113722 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x0000000000110ab8 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000004bccf : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d4c3b : push rbp ; test al, 0x89 ; ret
0x0000000000023657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x0000000000113141 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000114de0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008df6a : push rbp ; xor rax, rax ; ret
0x0000000000088621 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000b5c99 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000105231 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000da657 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000853cf : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001b0335 : push rbx ; add dword ptr [rax], eax ; js 0x1b03b6 ; cmc ; jmp qword ptr [rcx]
0x000000000010fe8c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000194fbd : push rbx ; cld ; call qword ptr [rax]
0x0000000000194f7d : push rbx ; cld ; jmp qword ptr [rax]
0x000000000019a6e1 : push rbx ; cli ; call rsp
0x00000000001892eb : push rbx ; cmc ; call qword ptr [rbx]
0x00000000001af731 : push rbx ; cmc ; call qword ptr [rdx]
0x0000000000002053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000df806 : push rbx ; cmp cl, ch ; ret
0x00000000000df307 : push rbx ; cmp cl, ch ; ret 0xfffe
0x00000000001884e4 : push rbx ; fcomi st(3) ; inc dword ptr [rcx - 0x25] ; call rcx
0x0000000000188685 : push rbx ; hlt ; call qword ptr [rbx]
0x000000000018869d : push rbx ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00000000001886e5 : push rbx ; hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x000000000018868d : push rbx ; hlt ; jmp qword ptr [rdi]
0x00000000001886a1 : push rbx ; hlt ; jmp qword ptr [rdx]
0x0000000000188985 : push rbx ; hlt ; jmp rax
0x000000000002a692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x0000000000072ad9 : push rbx ; je 0x72b3d ; pop rbp ; pop r12 ; ret
0x0000000000072b7e : push rbx ; je 0x72be2 ; pop rbp ; pop r12 ; ret
0x00000000000cd01d : push rbx ; je 0xccffa ; mov eax, 1 ; ret
0x00000000000cd01c : push rbx ; je 0xccffb ; mov eax, 1 ; ret
0x00000000000ab99c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a6372 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006ce2a : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000007b42b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000012a4a5 : push rbx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000002d8a8 : push rbx ; ret
0x0000000000088625 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000076ba6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000100e3a : push rbx ; sub al, 0 ; add rsp, 8 ; ret
0x000000000007a8a4 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000078771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001840dc : push rbx ; xchg eax, edx ; jae 0x1840bb ; push rsi ; pop rdx ; je 0x1840b0 ; ret 0xacfc
0x0000000000131725 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000b6da6 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000001b007d : push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b010d : push rcx ; add dword ptr [rax], eax ; loopne 0x1b018a ; cmc ; jmp qword ptr [rcx]
0x00000000001b00ad : push rcx ; add dword ptr [rax], eax ; push rax ; jb 0x1b00ae ; jmp qword ptr [rcx]
0x00000000000d61be : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x0000000000080203 : push rcx ; add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x000000000009e239 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009e2b8 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000139f4e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000183365 : push rcx ; call qword ptr [rsi]
0x0000000000194d91 : push rcx ; cld ; call qword ptr [rax]
0x0000000000194fcd : push rcx ; cld ; inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000194f91 : push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x0000000000194e11 : push rcx ; cld ; jmp rdx
0x00000000001885c5 : push rcx ; hlt ; call qword ptr [rcx]
0x0000000000188609 : push rcx ; hlt ; call rdx
0x00000000001885d9 : push rcx ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x0000000000188605 : push rcx ; hlt ; dec eax ; push rcx ; hlt ; call rdx
0x00000000001885cd : push rcx ; hlt ; jmp qword ptr [rdx]
0x0000000000188611 : push rcx ; hlt ; jmp rsi
0x00000000001885c9 : push rcx ; hlt ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x000000000009f16d : push rcx ; jl 0x9f1be ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f2d4 : push rcx ; jl 0x9f325 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009f8c0 : push rcx ; jl 0x9f911 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fa27 : push rcx ; jl 0x9fa78 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a000d : push rcx ; jl 0xa005e ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0174 : push rcx ; jl 0xa01c5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000010c98b : push rcx ; jle 0x10c9bf ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000001873e5 : push rcx ; jmp qword ptr [rax]
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x000000000019451f : push rcx ; mov ch, 0xfd ; call rcx
0x000000000019453f : push rcx ; mov dh, 0xfd ; call rcx
0x00000000001873e1 : push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00000000001ba12e : push rcx ; ret
0x000000000011b1cf : push rcx ; ret 0x2a
0x000000000003d31f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000a9232 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a77c2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a9390 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9068 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a907a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009def4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a760a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000015a8b9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000009de64 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009ddf4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002da7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000019aa5d : push rdi ; add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x000000000019aa65 : push rdi ; add al, byte ptr [rax] ; push rsp ; ret
0x00000000000a903a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a688c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a76cc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000fde5a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00000000000a9098 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000107eaa : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001b95a9 : push rdi ; call qword ptr [rdx]
0x0000000000151d08 : push rdi ; clc ; ret
0x00000000000038eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000194fa1 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000194f9d : push rdi ; cld ; call qword ptr [rax]
0x0000000000194e21 : push rdi ; cld ; call rdx
0x0000000000194f61 : push rdi ; cld ; jmp qword ptr [rax + 0x20fffc56]
0x0000000000194f5d : push rdi ; cld ; jmp qword ptr [rax]
0x0000000000151e80 : push rdi ; cld ; ret
0x000000000019a751 : push rdi ; cli ; jmp rsp
0x00000000001529a7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a199 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000134ce5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x0000000000087b2a : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000015a119 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000130245 : push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000185cbb : push rdi ; in eax, dx ; call rdx
0x0000000000159f6a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000007b164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000159ffa : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000122460 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a90dc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a911a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a90ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000ba671 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000004a00a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004842a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000013def2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000048431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000077f60 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a6a70 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a78c0 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000016ebfe : push rdi ; ret
0x000000000009c935 : push rdi ; ret 0xf800
0x000000000016ec9e : push rdi ; ret 0xff3
0x00000000000f3595 : push rdi ; ret 0xfff2
0x0000000000111380 : push rdi ; rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000013b2c3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010e986 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013c3db : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000152ba7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001523ca : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00000000001527a7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000134d2d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000010403c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007400f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000a9370 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008c97b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000198185 : push rdx ; add dword ptr [rax], eax ; add al, 8 ; hlt ; call rsp
0x00000000001b01b5 : push rdx ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b0185 : push rdx ; add dword ptr [rax], eax ; js 0x1b0203 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0184 : push rdx ; add dword ptr [rax], eax ; js 0x1b0204 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0155 : push rdx ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000012330e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000197be1 : push rdx ; call rsp
0x0000000000194dc9 : push rdx ; cld ; call rax
0x000000000018896d : push rdx ; hlt ; call qword ptr [rax - 0x1f000bae]
0x0000000000188681 : push rdx ; hlt ; dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x0000000000188785 : push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x0000000000188995 : push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x000000000018899d : push rdx ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x000000000018862d : push rdx ; hlt ; jmp qword ptr [rdx]
0x00000000001889a1 : push rdx ; hlt ; jmp qword ptr [rsi]
0x0000000000188971 : push rdx ; hlt ; jmp rax
0x0000000000188629 : push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00000000001887dd : push rdx ; hlt ; ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x0000000000188631 : push rdx ; hlt ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x0000000000188975 : push rdx ; hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00000000001a3099 : push rdx ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000fe9ca : push rdx ; jbe 0xfea01 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000088ac6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000013e822 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x0000000000194c48 : push rdx ; pop rsp ; cld ; jmp rdx
0x0000000000194e30 : push rdx ; push rbp ; cld ; call rdx
0x0000000000194e20 : push rdx ; push rdi ; cld ; call rdx
0x0000000000194e28 : push rdx ; push rsi ; cld ; call rdx
0x0000000000194e38 : push rdx ; push rsp ; cld ; call rdx
0x00000000001a65f5 : push rdx ; ret
0x0000000000188334 : push rdx ; retf ; jmp qword ptr [rdi]
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000199f11 : push rdx ; stc ; call rsp
0x000000000019562c : push rdx ; stosd dword ptr [rdi], eax ; cld ; jmp rdx
0x0000000000111834 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000195134 : push rdx ; test bh, ah ; jmp rdx
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000016d8e4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a9b39 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xa9b90 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000720a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000081314 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000075be0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x000000000015ab51 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000f8a16 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001b0595 : push rsi ; add dword ptr [rax], eax ; call 0x221afb1d
0x00000000001b05f5 : push rsi ; add dword ptr [rax], eax ; jnp 0x1b05f6 ; jmp qword ptr [rcx]
0x00000000001b0625 : push rsi ; add dword ptr [rax], eax ; js 0x1b06ab ; cmc ; jmp qword ptr [rcx]
0x00000000001b057d : push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b05dd : push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000015abc1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5245 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000020c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015aae1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a51e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000016d8f9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000151e32 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000194fa9 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000194fa5 : push rsi ; cld ; call qword ptr [rax]
0x0000000000194e29 : push rsi ; cld ; call rdx
0x0000000000194f69 : push rsi ; cld ; jmp qword ptr [rax + 0x20fffc55]
0x0000000000194f65 : push rsi ; cld ; jmp qword ptr [rax]
0x00000000001525a1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001521d5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001523b5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152595 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000151ff5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000019a711 : push rsi ; cli ; jmp rsp
0x0000000000184c80 : push rsi ; cli ; push 0x6e ; ja 0x184c0f ; ret 0x48f
0x0000000000171246 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000171236 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000171206 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000112712 : push rsi ; je 0x112728 ; mov eax, 7 ; ret
0x000000000019cdd9 : push rsi ; jmp 0x1b90e1
0x00000000000f533b : push rsi ; js 0xf538f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f5cd8 : push rsi ; js 0xf5d2c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000194570 : push rsi ; mov dh, 0xfd ; call rcx
0x0000000000056808 : push rsi ; or al, 0x83 ; ret
0x000000000005678b : push rsi ; or al, 0xf6 ; ret 0xf08
0x0000000000093f7d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000ba66e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00000000001840e0 : push rsi ; pop rdx ; je 0x1840ac ; ret 0xacfc
0x0000000000034bcf : push rsi ; ret
0x00000000000e4597 : push rsi ; ret 0x7420
0x000000000009ee1a : push rsi ; ret 0x7518
0x0000000000061bbf : push rsi ; ret 0xf02
0x00000000000e3f71 : push rsi ; ret 0xf08
0x00000000000582e8 : push rsi ; ret 0xf10
0x0000000000080eca : push rsi ; sub al, 0x34 ; add dh, dh ; ret 0xf02
0x00000000000ee3af : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000171216 : push rsi ; sub eax, edx ; ret
0x00000000001955c8 : push rsi ; test al, 0xfc ; jmp rsi
0x00000000000fa9b7 : push rsi ; xor ax, ax ; ret
0x000000000016d90e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000198ef8 : push rsp ; adc edi, esi ; jmp rsp
0x00000000001b03e5 : push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e6 ; jmp qword ptr [rbx]
0x000000000010e2f1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010e1ed : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000e35cf : push rsp ; and al, 0x18 ; call 0x1f8a5
0x000000000003dfe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x000000000012bc08 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000080d10 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x000000000008108c : push rsp ; and al, 0x20 ; call rax
0x00000000000b9b3e : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fd164 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000083d3a : push rsp ; and al, 0x68 ; call rax
0x00000000000850ca : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000006aa54 : push rsp ; and al, 0xc ; call 0xf6d05
0x0000000000197e20 : push rsp ; and al, 0xf3 ; jmp rsp
0x0000000000198790 : push rsp ; and al, 0xf6 ; call rsp
0x000000000004a1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000809a2 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000001ae851 : push rsp ; call rsi
0x00000000001bacf1 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bad29 : push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001999e8 : push rsp ; clc ; jmp rsp
0x0000000000194fb9 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000194fb5 : push rsp ; cld ; call qword ptr [rax]
0x0000000000194e39 : push rsp ; cld ; call rdx
0x0000000000194f79 : push rsp ; cld ; jmp qword ptr [rax + 0x20fffc53]
0x0000000000194f75 : push rsp ; cld ; jmp qword ptr [rax]
0x00000000001a5fe9 : push rsp ; cli ; call qword ptr [rax]
0x000000000018904b : push rsp ; cmc ; call rsp
0x000000000002d9cf : push rsp ; cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x0000000000197aa0 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000198db0 : push rsp ; div esi ; call rsp
0x00000000001999e4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00000000001886e9 : push rsp ; hlt ; call qword ptr [rcx]
0x00000000001886f5 : push rsp ; hlt ; jmp qword ptr [rdx]
0x00000000001886f1 : push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x0000000000188741 : push rsp ; hlt ; push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00000000001a188c : push rsp ; imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x000000000019540c : push rsp ; ja 0x19540e ; jmp rsp
0x00000000000cce26 : push rsp ; jne 0xccdb3 ; mov eax, 0x7d00 ; ret
0x00000000001a208c : push rsp ; jno 0x1a2096 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x000000000009e57b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000fd740 : push rsp ; mov byte ptr [rax + rax], ch ; ret
0x0000000000134477 : push rsp ; mov eax, 1 ; ret
0x00000000001a698c : push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x0000000000199558 : push rsp ; out 0xf7, al ; jmp rsp
0x00000000001b1d8c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000188930 : push rsp ; push rcx ; hlt ; jmp qword ptr [rdx]
0x0000000000188644 : push rsp ; push rdx ; hlt ; jmp qword ptr [rdx]
0x0000000000023ad1 : push rsp ; ret
0x0000000000034df8 : push rsp ; ret 0x2e0f
0x0000000000109844 : push rsp ; ret 0x8940
0x0000000000034aba : push rsp ; ret 0xf66
0x000000000019950b : push rsp ; ret 1
0x00000000000e6a33 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00000000001978dc : push rsp ; sbb byte ptr [rcx], al ; add ah, dh ; int1 ; call rsp
0x000000000019a3c8 : push rsp ; sti ; stc ; jmp rsp
0x00000000001956f4 : push rsp ; stosb byte ptr [rdi], al ; cld ; jmp rsp
0x0000000000100ddb : push rsp ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197450 : push rsp ; xor ch, bh ; call rsp
0x0000000000146410 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001ab3d4 : pushfq ; add al, 1 ; add byte ptr [rax], bl ; call rcx
0x000000000019a6dc : pushfq ; add al, byte ptr [rax] ; push rbx ; cli ; call rsp
0x00000000000857dd : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000001aedd4 : pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001bb8a4 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00000000001afbd4 : pushfq ; add qword ptr [rax], r8 ; call 0x221af150
0x0000000000023ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000da65f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000019a2a4 : pushfq ; and al, 2 ; add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x0000000000195991 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x0000000000195951 : pushfq ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x00000000001b89d4 : pushfq ; fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x000000000001fb06 : pushfq ; jmp 0x1face
0x00000000001970ec : pushfq ; loope 0x1970f6 ; add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x000000000007841c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000196bac : pushfq ; mov edi, 0xc7440000 ; in eax, dx ; call rsp
0x0000000000103c08 : pushfq ; mov esp, 0x8b49fff1 ; jge 0x103c18 ; call rbx
0x00000000001b53d4 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x0000000000147110 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001450c4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000001966f4 : pushfq ; popfq ; add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196702
0x0000000000019ee8 : pushfq ; ret
0x00000000000bcbdf : pushfq ; ret 0xb60f
0x00000000000ab5cb : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000001968dc : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x196946 ; in eax, dx ; jmp rsp
0x0000000000197bdc : pushfq ; sub al, 1 ; add byte ptr [rdx + rdx*2], dl ; call rsp
0x00000000001a0a80 : rcl ah, 1 ; in al, dx ; call rsp
0x00000000000f84ca : rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000195a40 : rcl byte ptr [rcx - 0x6caf0004], 1 ; cld ; call rax
0x0000000000195a04 : rcl byte ptr [rdx - 0x6baf0004], 1 ; cld ; call rax
0x00000000001b9f20 : rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x0000000000194e34 : rcl byte ptr [rsp + rdi*8 - 1], cl ; push rdx ; push rsp ; cld ; call rdx
0x00000000001947c4 : rcl cl, 0xfb ; call qword ptr [rax]
0x00000000000f4fa0 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001840df : rcl dword ptr [rsi + 0x5a], cl ; je 0x1840ad ; ret 0xacfc
0x00000000001840db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1840b1 ; ret 0xacfc
0x0000000000103cfc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000034f9f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x000000000003c1b0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fb8ee : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000001fb76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c9030 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047a13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000048437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000cc858 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000075051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000ba9b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c907c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054b8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000083ff8 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000045c48 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006fb6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010bde8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001844fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001aee50 : rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x0000000000194d70 : rcr byte ptr [rsi - 4], 0xff ; push rax ; pop rsi ; cld ; jmp rax
0x0000000000194afc : rcr byte ptr [rsi], 1 ; cld ; jmp qword ptr [rax]
0x0000000000048469 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000014d086 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001423f4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000123238 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x0000000000196c45 : ret 0
0x00000000000a6b1a : ret 0x10
0x00000000000007bf : ret 0x102
0x000000000006cddf : ret 0x107
0x000000000000d6a1 : ret 0x11
0x0000000000081882 : ret 0x110
0x00000000000e6397 : ret 0x110f
0x000000000004840c : ret 0x114d
0x00000000000e021c : ret 0x1175
0x00000000000d8406 : ret 0x1176
0x00000000000242a8 : ret 0x1189
0x0000000000106e29 : ret 0x11e8
0x00000000000b3104 : ret 0x11eb
0x0000000000005fa9 : ret 0x12
0x000000000006c099 : ret 0x1202
0x000000000001f8fa : ret 0x1231
0x00000000000feddc : ret 0x1274
0x00000000000a0a5a : ret 0x13
0x000000000005b04a : ret 0x134b
0x000000000009861a : ret 0x1374
0x0000000000116cda : ret 0x1376
0x0000000000051f17 : ret 0x13e8
0x000000000005a6dc : ret 0x144
0x00000000001228d9 : ret 0x1472
0x000000000009e5b9 : ret 0x147c
0x00000000000493f2 : ret 0x148
0x0000000000044099 : ret 0x1480
0x00000000000d637b : ret 0x148b
0x000000000007bfe2 : ret 0x149
0x00000000000407e8 : ret 0x14b8
0x000000000003763d : ret 0x14c
0x000000000009f52c : ret 0x14d
0x00000000000d253c : ret 0x14eb
0x0000000000030f90 : ret 0x15
0x0000000000040e3a : ret 0x152c
0x000000000007903a : ret 0x157
0x0000000000034c00 : ret 0x1575
0x00000000000ec9c1 : ret 0x1589
0x0000000000031d46 : ret 0x15a2
0x000000000000e460 : ret 0x16
0x0000000000107a97 : ret 0x1674
0x0000000000116b27 : ret 0x1676
0x000000000008b01a : ret 0x17
0x00000000000fc136 : ret 0x1777
0x000000000009f469 : ret 0x180f
0x0000000000135495 : ret 0x1872
0x000000000002c4a6 : ret 0x1874
0x000000000008dfd5 : ret 0x1876
0x000000000001e610 : ret 0x18bb
0x000000000001b388 : ret 0x18e7
0x000000000007d9c5 : ret 0x18eb
0x00000000001a2a31 : ret 0x18f
0x00000000000bc764 : ret 0x190
0x00000000000587ca : ret 0x197
0x000000000008dc75 : ret 0x1974
0x000000000005ec5e : ret 0x1a
0x000000000009e21a : ret 0x1a74
0x000000000003bf12 : ret 0x1a75
0x0000000000184a5a : ret 0x1ad4
0x00000000000d45ba : ret 0x1aeb
0x00000000001831ed : ret 0x1b49
0x0000000000107eb2 : ret 0x1b72
0x000000000009457a : ret 0x1b8
0x0000000000001bf5 : ret 0x1bb7
0x00000000000bd92b : ret 0x1be
0x00000000000834df : ret 0x1bf
0x000000000000349f : ret 0x1bf9
0x00000000000fc231 : ret 0x1c77
0x000000000017e650 : ret 0x1d4
0x000000000017ede8 : ret 0x1d5
0x000000000008db76 : ret 0x1d74
0x00000000000021d9 : ret 0x1dd4
0x000000000002c79d : ret 0x1de8
0x00000000000bfa54 : ret 0x1e74
0x0000000000024c2b : ret 0x1e76
0x00000000000268e2 : ret 0x1f0f
0x00000000000abbc3 : ret 0x1f74
0x000000000008417e : ret 0x1f76
0x00000000000c1804 : ret 0x1fbd
0x000000000002d952 : ret 0x200
0x00000000000b0b05 : ret 0x2041
0x0000000000088dfd : ret 0x2074
0x00000000000d51a9 : ret 0x20be
0x000000000005cb3b : ret 0x21
0x0000000000034778 : ret 0x2148
0x00000000000f4f19 : ret 0x21e8
0x0000000000088d8b : ret 0x2275
0x00000000000a9c97 : ret 0x2276
0x0000000000088eb8 : ret 0x2288
0x0000000000003ff0 : ret 0x23
0x000000000016ee02 : ret 0x2373
0x00000000000368a2 : ret 0x237f
0x00000000000025e7 : ret 0x23cb
0x000000000017d658 : ret 0x24
0x00000000000027d8 : ret 0x244f
0x00000000000cf0fc : ret 0x2476
0x000000000007aa6e : ret 0x2501
0x000000000009e098 : ret 0x2574
0x00000000000836ad : ret 0x2575
0x0000000000023dc8 : ret 0x2576
0x0000000000005ec8 : ret 0x26
0x000000000008ae56 : ret 0x2774
0x00000000000fc413 : ret 0x27e8
0x000000000013c6d4 : ret 0x28
0x000000000000054f : ret 0x2800
0x00000000000a0bf5 : ret 0x280f
0x0000000000126c60 : ret 0x2875
0x0000000000024273 : ret 0x2876
0x00000000000bf65a : ret 0x28f5
0x0000000000126c28 : ret 0x29
0x000000000013658a : ret 0x2919
0x00000000000b2401 : ret 0x2941
0x00000000000556a3 : ret 0x2944
0x0000000000047468 : ret 0x2948
0x00000000000afc0a : ret 0x2949
0x000000000009a71f : ret 0x294c
0x0000000000078cdf : ret 0x294d
0x0000000000048b64 : ret 0x2973
0x00000000000aa394 : ret 0x2975
0x00000000000779aa : ret 0x2976
0x00000000000e9d84 : ret 0x2977
0x0000000000060591 : ret 0x29e9
0x000000000011b143 : ret 0x2a
0x0000000000127d9a : ret 0x2a09
0x0000000000001b19 : ret 0x2a63
0x000000000008408b : ret 0x2a75
0x0000000000119c79 : ret 0x2aea
0x0000000000106b84 : ret 0x2b
0x0000000000046198 : ret 0x2b48
0x000000000002322e : ret 0x2b49
0x0000000000120712 : ret 0x2b74
0x000000000006ad97 : ret 0x2b76
0x00000000000a9ff2 : ret 0x2b77
0x000000000012ec9b : ret 0x2b8
0x000000000010b572 : ret 0x2bb0
0x00000000000f6bac : ret 0x2c
0x0000000000126c59 : ret 0x2c3c
0x00000000000812ec : ret 0x2c75
0x00000000000fd69a : ret 0x2c88
0x0000000000034df9 : ret 0x2e0f
0x000000000012edd5 : ret 0x2e66
0x00000000000fed7c : ret 0x2f3c
0x0000000000087b2e : ret 0x2f74
0x00000000000e21ea : ret 0x2fe9
0x0000000000010e90 : ret 0x30
0x000000000003aca8 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000bce96 : ret 0x308b
0x00000000000bcdfa : ret 0x308c
0x0000000000081f1c : ret 0x30be
0x0000000000061cda : ret 0x30e8
0x00000000000e142b : ret 0x30f
0x000000000000d7b8 : ret 0x31
0x000000000002310d : ret 0x3101
0x0000000000125fe2 : ret 0x3108
0x0000000000047fd9 : ret 0x3145
0x000000000012ed68 : ret 0x314c
0x00000000000ac03a : ret 0x3151
0x0000000000030389 : ret 0x31e8
0x0000000000086b0c : ret 0x33
0x00000000000f6152 : ret 0x3375
0x00000000000ef45d : ret 0x33eb
0x000000000007c475 : ret 0x34
0x000000000009e599 : ret 0x347c
0x00000000000310a5 : ret 0x348
0x000000000002944d : ret 0x349
0x00000000000662ba : ret 0x34c
0x000000000006d71a : ret 0x3549
0x0000000000087b38 : ret 0x3574
0x00000000000f60f0 : ret 0x3575
0x000000000003bf68 : ret 0x357e
0x0000000000068db2 : ret 0x35a0
0x00000000000d8ca5 : ret 0x35e8
0x0000000000056c42 : ret 0x36
0x00000000000e72a1 : ret 0x3673
0x000000000015ebca : ret 0x36b
0x00000000000464a1 : ret 0x37
0x0000000000054e2a : ret 0x3708
0x00000000000cb703 : ret 0x37e8
0x0000000000036b7a : ret 0x38
0x000000000018433a : ret 0x3827
0x00000000000bb14e : ret 0x3840
0x000000000007371f : ret 0x3841
0x00000000001022bf : ret 0x3845
0x000000000003a73a : ret 0x386a
0x000000000013e825 : ret 0x3875
0x000000000008dfb5 : ret 0x3876
0x000000000007b52b : ret 0x389
0x00000000001829c6 : ret 0x38ae
0x000000000006e516 : ret 0x38b
0x000000000005ed1d : ret 0x38e9
0x00000000000663be : ret 0x3901
0x00000000000d8fb8 : ret 0x3902
0x0000000000121a5b : ret 0x3904
0x000000000009dfb6 : ret 0x3941
0x00000000000e3ba7 : ret 0x3944
0x00000000000dd217 : ret 0x3945
0x0000000000037381 : ret 0x3948
0x000000000002772a : ret 0x3949
0x000000000002a296 : ret 0x394c
0x000000000003413d : ret 0x394d
0x00000000000300fa : ret 0x3985
0x00000000000537c2 : ret 0x39e9
0x0000000000133c4a : ret 0x3a
0x00000000000a95a2 : ret 0x3a01
0x0000000000023016 : ret 0x3a18
0x000000000016edeb : ret 0x3a73
0x00000000000e33e0 : ret 0x3ae9
0x00000000000d2631 : ret 0x3b01
0x00000000000db187 : ret 0x3b42
0x00000000000db1d7 : ret 0x3b43
0x000000000013cb43 : ret 0x3b48
0x0000000000134172 : ret 0x3b74
0x00000000000bec65 : ret 0x3b8
0x00000000000bbafa : ret 0x3bba
0x000000000010fa14 : ret 0x3bf
0x00000000000cf6de : ret 0x3c01
0x0000000000088d71 : ret 0x3c75
0x00000000000f08bf : ret 0x3c76
0x000000000003953e : ret 0x3ce8
0x00000000000d7666 : ret 0x3d01
0x0000000000034840 : ret 0x3d75
0x0000000000042180 : ret 0x3d7e
0x000000000010c396 : ret 0x3d83
0x0000000000046ef7 : ret 0x3dbe
0x00000000000be712 : ret 0x3e9
0x0000000000070efb : ret 0x3f7
0x00000000000f4779 : ret 0x3f76
0x00000000000d869a : ret 0x4001
0x00000000000eb535 : ret 0x4002
0x000000000007f142 : ret 0x4007
0x00000000000009f5 : ret 0x4021
0x000000000005399b : ret 0x4050
0x00000000000ac009 : ret 0x408d
0x0000000000022d30 : ret 0x4101
0x00000000000b79e5 : ret 0x4102
0x00000000000dd752 : ret 0x4104
0x000000000004d6a9 : ret 0x4108
0x000000000004f20c : ret 0x4110
0x000000000008218c : ret 0x4117
0x00000000000ed5f8 : ret 0x4118
0x000000000009e263 : ret 0x4153
0x000000000012bbc3 : ret 0x415f
0x00000000000f71c5 : ret 0x4164
0x0000000000023b8e : ret 0x41c3
0x000000000009a767 : ret 0x4201
0x000000000012d2a5 : ret 0x4203
0x00000000000bba44 : ret 0x4240
0x000000000009ebaa : ret 0x4266
0x00000000000d9fb6 : ret 0x428b
0x00000000000bc86c : ret 0x428d
0x000000000002c1b8 : ret 0x42e8
0x0000000000099dca : ret 0x4301
0x000000000002a853 : ret 0x4389
0x0000000000074d83 : ret 0x4401
0x00000000000e0c15 : ret 0x4404
0x00000000000c1ca4 : ret 0x4407
0x00000000000cc245 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x000000000004dc71 : ret 0x440f
0x0000000000072857 : ret 0x4410
0x0000000000000456 : ret 0x4412
0x00000000000d81f4 : ret 0x4422
0x000000000010e9a6 : ret 0x4428
0x00000000001127d8 : ret 0x4430
0x00000000000e0c46 : ret 0x4489
0x0000000000034ea0 : ret 0x448b
0x000000000003ce72 : ret 0x44c6
0x00000000000e51c2 : ret 0x44c7
0x000000000005d3da : ret 0x45
0x00000000000e30fb : ret 0x4501
0x000000000006c712 : ret 0x4502
0x00000000000662db : ret 0x4504
0x0000000000116fa7 : ret 0x4510
0x00000000000b79be : ret 0x4574
0x0000000000036b2e : ret 0x4577
0x00000000000df74f : ret 0x45c6
0x000000000011f12b : ret 0x45e9
0x000000000006e678 : ret 0x45f6
0x00000000000aa377 : ret 0x4675
0x0000000000029d97 : ret 0x4676
0x0000000000112616 : ret 0x46e9
0x00000000000b7957 : ret 0x4703
0x0000000000099faf : ret 0x470e
0x000000000009e014 : ret 0x474
0x00000000001834c4 : ret 0x474c
0x00000000000256f6 : ret 0x4801
0x0000000000093d61 : ret 0x4802
0x000000000006e681 : ret 0x4803
0x000000000002656d : ret 0x4804
0x0000000000093e0d : ret 0x4805
0x0000000000093df5 : ret 0x4806
0x0000000000107e9b : ret 0x4807
0x00000000001263bf : ret 0x4808
0x000000000002c4b4 : ret 0x4809
0x000000000010a5e2 : ret 0x480a
0x000000000010a1e2 : ret 0x480b
0x00000000000baaf2 : ret 0x480e
0x0000000000051184 : ret 0x480f
0x0000000000048d94 : ret 0x4810
0x000000000001f91e : ret 0x4811
0x0000000000136a71 : ret 0x4812
0x000000000010838d : ret 0x4814
0x000000000004b632 : ret 0x481e
0x000000000004b652 : ret 0x4820
0x000000000005432c : ret 0x482d
0x000000000012504e : ret 0x482e
0x000000000002146f : ret 0x4830
0x0000000000066165 : ret 0x4840
0x00000000000cb8bc : ret 0x4864
0x0000000000114add : ret 0x4874
0x0000000000116bd5 : ret 0x4875
0x0000000000110308 : ret 0x48b
0x0000000000132fe4 : ret 0x48bf
0x000000000008aba8 : ret 0x48c3
0x000000000003aba0 : ret 0x48d
0x0000000000184c86 : ret 0x48f
0x0000000000022cfa : ret 0x4901
0x000000000003437c : ret 0x4903
0x0000000000029019 : ret 0x4904
0x000000000002648c : ret 0x4906
0x000000000004f8a9 : ret 0x4908
0x00000000000be7a9 : ret 0x4909
0x000000000012eef0 : ret 0x4910
0x00000000000867ee : ret 0x4920
0x0000000000085738 : ret 0x4930
0x00000000000c6ca9 : ret 0x4948
0x00000000000038f3 : ret 0x49ec
0x00000000000ea100 : ret 0x4a08
0x00000000000820a5 : ret 0x4a74
0x00000000000733b0 : ret 0x4ae8
0x00000000000b7e80 : ret 0x4ae9
0x0000000000032d55 : ret 0x4c01
0x0000000000093fd1 : ret 0x4c02
0x00000000000d7062 : ret 0x4c04
0x00000000000539a6 : ret 0x4c05
0x0000000000061c84 : ret 0x4c08
0x00000000000d7cab : ret 0x4c20
0x000000000004acf6 : ret 0x4c40
0x00000000000d8d58 : ret 0x4c6
0x00000000000bfc15 : ret 0x4c80
0x0000000000053400 : ret 0x4c8b
0x00000000000415b5 : ret 0x4d01
0x0000000000023ca1 : ret 0x4d02
0x00000000000a54b2 : ret 0x4d10
0x000000000010f542 : ret 0x4d30
0x0000000000022800 : ret 0x4d74
0x00000000001846e7 : ret 0x4e27
0x00000000000755d0 : ret 0x4e8b
0x00000000000bdfb9 : ret 0x4eb
0x0000000000021938 : ret 0x4ee9
0x000000000000b328 : ret 0x4f
0x0000000000029d8e : ret 0x4f72
0x00000000000369d4 : ret 0x4f77
0x00000000001bb8a9 : ret 0x503
0x00000000000d6e95 : ret 0x5089
0x000000000016edd4 : ret 0x5173
0x00000000000eb38a : ret 0x51e
0x00000000000fc9e9 : ret 0x51e8
0x000000000002c2b3 : ret 0x527e
0x000000000000318e : ret 0x52c0
0x0000000000008658 : ret 0x53
0x0000000000138a1a : ret 0x535
0x000000000006d008 : ret 0x5389
0x000000000012dcfb : ret 0x53ff
0x00000000000ed0bc : ret 0x5408
0x00000000000bb21b : ret 0x5438
0x000000000009e579 : ret 0x547c
0x000000000004a1f6 : ret 0x5488
0x000000000002a11a : ret 0x5489
0x000000000018294c : ret 0x5508
0x000000000003295f : ret 0x5525
0x000000000000245e : ret 0x5576
0x00000000000d634a : ret 0x5589
0x000000000000b538 : ret 0x56
0x0000000000088d57 : ret 0x5675
0x000000000011cc12 : ret 0x56e9
0x00000000000bd1fa : ret 0x572
0x0000000000086c52 : ret 0x575
0x00000000001169e2 : ret 0x577
0x0000000000100be3 : ret 0x57e8
0x00000000000cece3 : ret 0x57e9
0x0000000000184c18 : ret 0x5803
0x00000000000396fb : ret 0x589
0x000000000006afe2 : ret 0x58e8
0x0000000000182620 : ret 0x591c
0x00000000000b128a : ret 0x594
0x00000000000d8491 : ret 0x5974
0x000000000011f073 : ret 0x5978
0x0000000000003269 : ret 0x5a51
0x0000000000123343 : ret 0x5a74
0x0000000000183387 : ret 0x5ae4
0x00000000000e6ee9 : ret 0x5ba
0x0000000000002f9f : ret 0x5bdb
0x0000000000110ab0 : ret 0x5bf
0x0000000000026d01 : ret 0x5c77
0x0000000000003055 : ret 0x5cbe
0x00000000000b55ce : ret 0x5ce8
0x000000000012d91a : ret 0x5e6
0x00000000000e910d : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000002725 : ret 0x617e
0x00000000001850b2 : ret 0x62c1
0x0000000000054d53 : ret 0x6348
0x0000000000077662 : ret 0x6349
0x00000000000d83c0 : ret 0x634d
0x00000000000aa35a : ret 0x6375
0x000000000008cd2f : ret 0x63be
0x0000000000125c7a : ret 0x646
0x000000000009e569 : ret 0x647c
0x00000000001302c9 : ret 0x6600
0x00000000000e864a : ret 0x6601
0x000000000003d251 : ret 0x6610
0x000000000008df42 : ret 0x6620
0x0000000000002827 : ret 0x6642
0x000000000008abf5 : ret 0x66c3
0x00000000000f8a26 : ret 0x674
0x000000000018263f : ret 0x67b2
0x00000000001074d3 : ret 0x67e8
0x00000000000bba41 : ret 0x6948
0x00000000000f3639 : ret 0x69e9
0x0000000000105cea : ret 0x69f
0x00000000001180fd : ret 0x6ae9
0x00000000000c1cff : ret 0x6b45
0x00000000000cd5df : ret 0x6b8
0x0000000000003ce2 : ret 0x6bba
0x000000000010f1a2 : ret 0x6bf
0x00000000000abb21 : ret 0x6c74
0x00000000000216fa : ret 0x6d7
0x0000000000193733 : ret 0x6e1f
0x000000000011db1a : ret 0x6e4
0x0000000000185241 : ret 0x6f9
0x000000000002face : ret 0x6fe9
0x00000000001189de : ret 0x708d
0x0000000000107fc9 : ret 0x71e8
0x0000000000113cd8 : ret 0x71e9
0x00000000000214fa : ret 0x723
0x000000000014d11e : ret 0x7280
0x000000000007ba51 : ret 0x7401
0x0000000000084283 : ret 0x7402
0x00000000000815d5 : ret 0x7404
0x0000000000072b69 : ret 0x7408
0x000000000006dba1 : ret 0x7420
0x0000000000051562 : ret 0x7450
0x00000000000c5435 : ret 0x748d
0x00000000000a9e4f : ret 0x74e9
0x00000000000a06e7 : ret 0x7501
0x00000000000a06ec : ret 0x7502
0x0000000000061ba6 : ret 0x7504
0x0000000000072b11 : ret 0x7508
0x000000000016fd5b : ret 0x7510
0x000000000008e744 : ret 0x7518
0x000000000016fd68 : ret 0x7520
0x00000000000d8288 : ret 0x7540
0x00000000000d5a67 : ret 0x7580
0x00000000000e1105 : ret 0x75e8
0x000000000016dcc2 : ret 0x7677
0x0000000000023222 : ret 0x774
0x000000000004878a : ret 0x777
0x00000000001073c3 : ret 0x77e8
0x000000000011cbf1 : ret 0x77e9
0x0000000000110e0a : ret 0x793
0x0000000000002eec : ret 0x793b
0x00000000000cced9 : ret 0x7974
0x000000000011eb1c : ret 0x7a8d
0x00000000000b25b0 : ret 0x7ae8
0x0000000000023dfa : ret 0x7b8
0x0000000000034d85 : ret 0x7c7
0x000000000008ded2 : ret 0x7e20
0x00000000000f6d33 : ret 0x7e8
0x000000000008933c : ret 0x7f10
0x0000000000059904 : ret 0x7f3c
0x000000000015844e : ret 0x80
0x000000000008a519 : ret 0x8000
0x00000000000343bc : ret 0x8001
0x00000000000be9a2 : ret 0x8010
0x00000000000cf0a9 : ret 0x8040
0x00000000000e03cf : ret 0x8041
0x00000000000a58ed : ret 0x8072
0x000000000011d5c6 : ret 0x8080
0x00000000000038b0 : ret 0x80fc
0x00000000000d72fd : ret 0x8141
0x0000000000045d16 : ret 0x8148
0x000000000003508f : ret 0x8166
0x00000000000f4eb9 : ret 0x81e8
0x00000000000e0ad9 : ret 0x820f
0x000000000012b016 : ret 0x828d
0x0000000000080ebf : ret 0x82e9
0x0000000000076cd1 : ret 0x82eb
0x0000000000031275 : ret 0x8301
0x00000000001303fe : ret 0x8302
0x0000000000121019 : ret 0x8303
0x00000000000d816a : ret 0x8304
0x0000000000098f05 : ret 0x8305
0x0000000000098efd : ret 0x8306
0x000000000005e0cb : ret 0x8308
0x0000000000055c34 : ret 0x830f
0x000000000012f122 : ret 0x8320
0x00000000000de57f : ret 0x833b
0x0000000000046daa : ret 0x8341
0x000000000003a61d : ret 0x8348
0x000000000003d6e4 : ret 0x8349
0x000000000006f353 : ret 0x8389
0x00000000000affa7 : ret 0x83e8
0x0000000000074cf0 : ret 0x840
0x00000000000cdfde : ret 0x8401
0x000000000010d278 : ret 0x8408
0x000000000002006c : ret 0x840f
0x00000000000e85dd : ret 0x844
0x0000000000096bf8 : ret 0x8440
0x00000000000a9db6 : ret 0x8444
0x0000000000096827 : ret 0x8445
0x00000000000dfb40 : ret 0x8488
0x0000000000054d45 : ret 0x8504
0x000000000006ce96 : ret 0x8508
0x000000000002191c : ret 0x850f
0x00000000000456b1 : ret 0x8539
0x00000000000f0fbd : ret 0x8545
0x0000000000020130 : ret 0x8548
0x000000000002c2c5 : ret 0x854d
0x00000000000ea728 : ret 0x8589
0x00000000000522bc : ret 0x858b
0x000000000004ea24 : ret 0x85c7
0x00000000000240f0 : ret 0x860f
0x00000000000355b6 : ret 0x870f
0x0000000000181f5e : ret 0x871e
0x000000000003d6d7 : ret 0x875
0x000000000008dfe5 : ret 0x876
0x000000000003ce6d : ret 0x87e
0x00000000000fc3b3 : ret 0x87e8
0x000000000002bc4a : ret 0x87e9
0x00000000000887da : ret 0x8801
0x000000000009ee32 : ret 0x8802
0x0000000000024e31 : ret 0x8804
0x0000000000057621 : ret 0x880f
0x0000000000025949 : ret 0x8840
0x00000000000025b4 : ret 0x88ad
0x0000000000024202 : ret 0x8901
0x000000000005c89b : ret 0x8908
0x0000000000109845 : ret 0x8940
0x000000000004b161 : ret 0x8941
0x00000000000b8bd5 : ret 0x8942
0x0000000000076b9c : ret 0x8944
0x0000000000050ebe : ret 0x8945
0x00000000000b8ff6 : ret 0x8946
0x0000000000026dc1 : ret 0x8948
0x0000000000024ffe : ret 0x8949
0x0000000000030cca : ret 0x894c
0x0000000000022d0f : ret 0x894d
0x00000000000490ab : ret 0x894e
0x000000000003b360 : ret 0x8966
0x000000000008db4a : ret 0x8a04
0x0000000000002553 : ret 0x8a4c
0x000000000006562f : ret 0x8ae9
0x000000000006c962 : ret 0x8b04
0x000000000002da3e : ret 0x8b05
0x00000000000d7cc0 : ret 0x8b10
0x000000000018478e : ret 0x8b36
0x000000000002c53a : ret 0x8b41
0x00000000000efc43 : ret 0x8b44
0x00000000000d64c0 : ret 0x8b47
0x0000000000035d75 : ret 0x8b48
0x00000000000744d6 : ret 0x8b49
0x000000000004902e : ret 0x8b4a
0x000000000002a27d : ret 0x8b4c
0x000000000006e418 : ret 0x8b64
0x00000000000ad12c : ret 0x8b8
0x00000000000c0e98 : ret 0x8c0f
0x00000000000037b6 : ret 0x8cba
0x000000000005bd95 : ret 0x8d01
0x000000000004ac1d : ret 0x8d04
0x0000000000051fef : ret 0x8d0f
0x00000000000c3651 : ret 0x8d41
0x00000000001188ff : ret 0x8d44
0x0000000000118950 : ret 0x8d45
0x0000000000020778 : ret 0x8d48
0x0000000000030319 : ret 0x8d49
0x0000000000048529 : ret 0x8d4a
0x00000000000483c5 : ret 0x8d4c
0x00000000000a2742 : ret 0x8d4d
0x00000000000821ec : ret 0x8d4e
0x000000000013e2ab : ret 0x8d8b
0x000000000002854c : ret 0x8e0f
0x00000000000fba11 : ret 0x8e75
0x00000000000b094d : ret 0x8eb
0x000000000010dcac : ret 0x8ee8
0x00000000000dfbe9 : ret 0x8f0f
0x00000000000711f8 : ret 0x8feb
0x000000000019ed48 : ret 0x900e
0x00000000000d712d : ret 0x9066
0x000000000002d90d : ret 0x90c3
0x000000000013f705 : ret 0x90f3
0x00000000000780ec : ret 0x91eb
0x0000000000052008 : ret 0x92e8
0x0000000000118a05 : ret 0x930f
0x0000000000086e8e : ret 0x93be
0x0000000000126153 : ret 0x93c
0x0000000000061b92 : ret 0x940f
0x000000000003dad7 : ret 0x941
0x000000000007fefa : ret 0x945
0x00000000000da4ff : ret 0x947c
0x000000000012ef37 : ret 0x948
0x000000000008ca18 : ret 0x94c
0x00000000000dc01a : ret 0x94d
0x000000000004c391 : ret 0x9522
0x0000000000113a69 : ret 0x952b
0x0000000000030b18 : ret 0x953d
0x00000000001835b3 : ret 0x9576
0x0000000000071389 : ret 0x95eb
0x00000000000f7f3f : ret 0x970f
0x0000000000003798 : ret 0x975
0x0000000000080ed9 : ret 0x976
0x00000000000f66a3 : ret 0x97e8
0x00000000000e337c : ret 0x9848
0x0000000000088da5 : ret 0x9874
0x0000000000075be4 : ret 0x98eb
0x000000000002a0da : ret 0x9a
0x0000000000042208 : ret 0x9a74
0x000000000013d477 : ret 0x9ae9
0x00000000000cf893 : ret 0x9aeb
0x00000000000b7fc7 : ret 0x9be9
0x000000000006af23 : ret 0x9ce9
0x000000000006820a : ret 0x9d
0x00000000000a58d0 : ret 0x9d72
0x00000000000ada18 : ret 0x9e74
0x0000000000022f83 : ret 0x9e9
0x00000000000ae02c : ret 0x9eb
0x0000000000044e11 : ret 0x9f74
0x00000000000ee161 : ret 0xa
0x00000000001aa9ec : ret 0xa02
0x000000000006f64a : ret 0xa1
0x00000000000e7869 : ret 0xa1e8
0x000000000003bfe8 : ret 0xa274
0x00000000001832a3 : ret 0xa514
0x00000000000ea35d : ret 0xa6e9
0x000000000012a01f : ret 0xa74
0x00000000000b9b82 : ret 0xa8e9
0x0000000000183727 : ret 0xac65
0x00000000001840e4 : ret 0xacfc
0x00000000000f57ed : ret 0xade9
0x00000000000d8c2d : ret 0xaeb
0x00000000000a9e3a : ret 0xaf0f
0x0000000000020cce : ret 0xaf72
0x00000000000861b1 : ret 0xafe9
0x00000000001bbac2 : ret 0xb
0x00000000000818bf : ret 0xb48b
0x000000000004b1ad : ret 0xb589
0x0000000000069a45 : ret 0xb5e8
0x000000000002f459 : ret 0xb60f
0x00000000000fd468 : ret 0xb6e9
0x00000000000bc885 : ret 0xb70f
0x0000000000126c88 : ret 0xb74
0x0000000000077d0c : ret 0xb76
0x00000000000bfb3e : ret 0xb77d
0x00000000000f6483 : ret 0xb7e8
0x0000000000034b83 : ret 0xb8
0x00000000000347b1 : ret 0xb848
0x000000000002c305 : ret 0xb87f
0x00000000000607c8 : ret 0xb908
0x00000000001835ee : ret 0xb9b9
0x0000000000003189 : ret 0xba88
0x00000000000c8d23 : ret 0xbb
0x000000000006c81d : ret 0xbb41
0x000000000005dfff : ret 0xbbe9
0x00000000000488b2 : ret 0xbc41
0x0000000000002480 : ret 0xbd07
0x00000000001289af : ret 0xbd74
0x000000000004b19a : ret 0xbd89
0x0000000000061808 : ret 0xbe08
0x00000000000c1c86 : ret 0xbe0f
0x0000000000183344 : ret 0xbe57
0x0000000000053498 : ret 0xbf07
0x0000000000060051 : ret 0xbf08
0x000000000007db9e : ret 0xbfe9
0x00000000001341d8 : ret 0xbfeb
0x000000000008a3d9 : ret 0xc000
0x000000000004242e : ret 0xc001
0x00000000000423e2 : ret 0xc002
0x00000000001228e7 : ret 0xc019
0x000000000006c072 : ret 0xc031
0x00000000000dcf8a : ret 0xc041
0x000000000012affa : ret 0xc069
0x0000000000047d6c : ret 0xc083
0x00000000000fedd5 : ret 0xc084
0x000000000008c9e5 : ret 0xc085
0x00000000000dd1cc : ret 0xc141
0x0000000000034a17 : ret 0xc148
0x000000000004a538 : ret 0xc149
0x00000000001354a8 : ret 0xc173
0x00000000000358bd : ret 0xc189
0x0000000000107279 : ret 0xc1e8
0x0000000000047542 : ret 0xc221
0x000000000003aba6 : ret 0xc229
0x000000000003ad40 : ret 0xc269
0x00000000000c3431 : ret 0xc26b
0x00000000000833db : ret 0xc275
0x00000000000f505a : ret 0xc283
0x0000000000035d67 : ret 0xc289
0x000000000016eca4 : ret 0xc2b2
0x000000000011cbc0 : ret 0xc2e9
0x000000000003a6f8 : ret 0xc35b
0x00000000000833dd : ret 0xc3f3
0x00000000000f8a90 : ret 0xc3f6
0x0000000000181162 : ret 0xc4c3
0x0000000000182ef8 : ret 0xc4ff
0x000000000014d1b8 : ret 0xc580
0x00000000000e4db5 : ret 0xc5e8
0x000000000010da6a : ret 0xc601
0x0000000000121da4 : ret 0xc602
0x00000000000e431e : ret 0xc683
0x0000000000056263 : ret 0xc689
0x000000000009e8f4 : ret 0xc6e8
0x0000000000086c91 : ret 0xc6eb
0x000000000012ec16 : ret 0xc707
0x00000000000f8a1a : ret 0xc72
0x0000000000037291 : ret 0xc748
0x00000000000442b6 : ret 0xc749
0x00000000000aa3b1 : ret 0xc75
0x000000000009c69f : ret 0xc76
0x0000000000081bae : ret 0xc789
0x00000000000f28bd : ret 0xc7e9
0x00000000000334a8 : ret 0xc801
0x0000000000097be1 : ret 0xc829
0x0000000000071cb4 : ret 0xc883
0x0000000000025b9c : ret 0xc985
0x0000000000088e16 : ret 0xc9ff
0x00000000000ddfe2 : ret 0xca39
0x00000000000ea327 : ret 0xca83
0x000000000005cb8d : ret 0xcb73
0x00000000000d263d : ret 0xcb75
0x00000000000f5089 : ret 0xcb8
0x000000000018298a : ret 0xcca7
0x000000000012b45a : ret 0xcd
0x0000000000184a6d : ret 0xcd11
0x00000000000a58a0 : ret 0xcd72
0x00000000001011cc : ret 0xcdbb
0x0000000000082d81 : ret 0xce31
0x0000000000031ff8 : ret 0xce80
0x000000000005c46d : ret 0xce83
0x000000000007ecdb : ret 0xcf31
0x00000000000afed6 : ret 0xd
0x00000000000d1f2e : ret 0xd008
0x00000000000d9080 : ret 0xd009
0x00000000000bb3b3 : ret 0xd021
0x00000000000cccf2 : ret 0xd029
0x000000000014d02c : ret 0xd073
0x0000000000046dbf : ret 0xd084
0x000000000003296e : ret 0xd089
0x00000000000b4d3d : ret 0xd0f7
0x00000000000edbf1 : ret 0xd101
0x00000000000fde44 : ret 0xd108
0x000000000005fc5d : ret 0xd129
0x00000000000d7a1a : ret 0xd138
0x00000000000db282 : ret 0xd139
0x00000000000dd1d3 : ret 0xd141
0x000000000012ed39 : ret 0xd148
0x0000000000107f69 : ret 0xd1e8
0x0000000000033e55 : ret 0xd231
0x000000000002086d : ret 0xd284
0x000000000009e270 : ret 0xd308
0x0000000000061a97 : ret 0xd309
0x0000000000061f73 : ret 0xd329
0x0000000000085666 : ret 0xd341
0x000000000003c3db : ret 0xd348
0x0000000000036942 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x00000000000528e2 : ret 0xd5e9
0x00000000000dffd3 : ret 0xd609
0x000000000005febd : ret 0xd629
0x00000000000daeda : ret 0xd639
0x0000000000107bbe : ret 0xd6e9
0x00000000000b9a2d : ret 0xd721
0x00000000000dd381 : ret 0xd739
0x0000000000105216 : ret 0xd74
0x00000000000b8979 : ret 0xd76
0x00000000000cb763 : ret 0xd7e8
0x00000000000c29a4 : ret 0xd801
0x00000000000a9e3f : ret 0xd889
0x0000000000184505 : ret 0xd8f
0x00000000000204df : ret 0xd975
0x00000000000d6a9d : ret 0xd9eb
0x00000000001224d0 : ret 0xda21
0x00000000000ddd10 : ret 0xda39
0x00000000001147b3 : ret 0xda75
0x0000000000034eb1 : ret 0xdaf7
0x00000000000f00d2 : ret 0xdb31
0x000000000002539b : ret 0xdb85
0x00000000000ba541 : ret 0xdc00
0x00000000000e1ad1 : ret 0xdc74
0x00000000001845e6 : ret 0xdcd9
0x0000000000087c1e : ret 0xdce8
0x00000000000c78f0 : ret 0xdd72
0x00000000000e0133 : ret 0xddeb
0x0000000000183562 : ret 0xde5d
0x0000000000074615 : ret 0xde74
0x0000000000139ba7 : ret 0xde77
0x0000000000045ced : ret 0xde8
0x00000000001822f1 : ret 0xde9e
0x000000000010e885 : ret 0xdeb
0x000000000008a299 : ret 0xe000
0x000000000019bd15 : ret 0xe01
0x000000000016fd19 : ret 0xe074
0x0000000000023ded : ret 0xe077
0x0000000000123bf6 : ret 0xe083
0x00000000001a90f9 : ret 0xe0a
0x000000000012d1ca : ret 0xe0ff
0x00000000000e1c9c : ret 0xe174
0x0000000000028555 : ret 0xe183
0x000000000002429b : ret 0xe277
0x0000000000020628 : ret 0xe281
0x0000000000027352 : ret 0xe283
0x00000000000afffa : ret 0xe2d
0x00000000000210b9 : ret 0xe2ff
0x000000000004b173 : ret 0xe383
0x0000000000095176 : ret 0xe3e9
0x00000000000e1889 : ret 0xe474
0x000000000011dee6 : ret 0xe4e8
0x0000000000095fc0 : ret 0xe575
0x000000000007d9b7 : ret 0xe675
0x0000000000050583 : ret 0xe680
0x0000000000184706 : ret 0xe71f
0x00000000000d84d6 : ret 0xe775
0x00000000000d2a98 : ret 0xe777
0x000000000006f1c2 : ret 0xe8
0x00000000000fa584 : ret 0xe801
0x00000000000d89bb : ret 0xe875
0x0000000000051e85 : ret 0xe87f
0x000000000006c20b : ret 0xe883
0x00000000000ccbdf : ret 0xe8b8
0x0000000000020497 : ret 0xe8c1
0x000000000002ba92 : ret 0xe901
0x000000000002fb2e : ret 0xe902
0x0000000000026ec9 : ret 0xe904
0x00000000000baaa1 : ret 0xe907
0x0000000000088ea6 : ret 0xe908
0x0000000000146276 : ret 0xe910
0x000000000004b70d : ret 0xe920
0x00000000000857e3 : ret 0xe96e
0x0000000000182a67 : ret 0xe970
0x000000000003bf2c : ret 0xe974
0x0000000000110094 : ret 0xe975
0x000000000008598c : ret 0xe977
0x000000000002acaa : ret 0xea
0x000000000004607b : ret 0xea75
0x00000000000a9fea : ret 0xea81
0x000000000004b18a : ret 0xeac0
0x00000000000d62b2 : ret 0xeac1
0x000000000009c924 : ret 0xeb01
0x00000000000d6baa : ret 0xeb04
0x00000000001442b6 : ret 0xeb10
0x00000000000c9642 : ret 0xeb11
0x00000000000857af : ret 0xeb5b
0x00000000000394fa : ret 0xeb72
0x0000000000185218 : ret 0xec2
0x00000000000b8225 : ret 0xec77
0x00000000000d6df1 : ret 0xec7f
0x0000000000118a58 : ret 0xed75
0x0000000000028098 : ret 0xed85
0x00000000000e0217 : ret 0xee72
0x0000000000022c8f : ret 0xee75
0x000000000012d0cc : ret 0xeee8
0x0000000000184eba : ret 0xef32
0x000000000013895a : ret 0xef5c
0x0000000000072a2e : ret 0xef75
0x00000000000d2639 : ret 0xef7c
0x0000000000005691 : ret 0xf
0x000000000008a159 : ret 0xf000
0x0000000000025941 : ret 0xf01
0x0000000000061bc1 : ret 0xf02
0x00000000000db522 : ret 0xf039
0x000000000006ce2d : ret 0xf04
0x000000000009ee13 : ret 0xf077
0x000000000001fe5a : ret 0xf08
0x000000000011897f : ret 0xf089
0x000000000009947b : ret 0xf0e
0x000000000002fb37 : ret 0xf0e9
0x0000000000080c50 : ret 0xf0f
0x00000000000582ea : ret 0xf10
0x000000000010e9e2 : ret 0xf10e
0x000000000010e7da : ret 0xf110
0x000000000009e67c : ret 0xf188
0x0000000000020341 : ret 0xf189
0x00000000000fb649 : ret 0xf1e8
0x000000000006ee5c : ret 0xf20
0x000000000008a849 : ret 0xf201
0x000000000006c375 : ret 0xf229
0x00000000000f282a : ret 0xf2cf
0x0000000000037614 : ret 0xf301
0x0000000000187c98 : ret 0xf377
0x00000000000e4e2a : ret 0xf3a9
0x0000000000122d1e : ret 0xf3c3
0x00000000000567ca : ret 0xf40
0x0000000000099b4e : ret 0xf41
0x00000000000db8aa : ret 0xf43f
0x00000000000ddf1b : ret 0xf44
0x00000000000db9a5 : ret 0xf45
0x000000000003cbc6 : ret 0xf48
0x0000000000052ef7 : ret 0xf4c
0x000000000011da5a : ret 0xf4f5
0x00000000000d6676 : ret 0xf53
0x000000000001fa3a : ret 0xf58
0x00000000000966c5 : ret 0xf5e8
0x00000000000c0a18 : ret 0xf601
0x0000000000049aa2 : ret 0xf631
0x0000000000118a3b : ret 0xf641
0x00000000001189ab : ret 0xf643
0x0000000000034abb : ret 0xf66
0x0000000000189da8 : ret 0xf678
0x00000000000fe6c4 : ret 0xf683
0x00000000000a9c0c : ret 0xf685
0x00000000000fdfda : ret 0xf6f7
0x0000000000035d5d : ret 0xf701
0x00000000000818a3 : ret 0xf710
0x0000000000049b15 : ret 0xf74
0x0000000000047645 : ret 0xf741
0x000000000008eb3c : ret 0xf748
0x0000000000048774 : ret 0xf749
0x000000000010405a : ret 0xf771
0x0000000000113148 : ret 0xf7e
0x0000000000052bd3 : ret 0xf7e9
0x00000000000df37c : ret 0xf80
0x000000000008a019 : ret 0xf800
0x00000000000acb7a : ret 0xf810
0x000000000010e5fa : ret 0xf852
0x00000000001821d0 : ret 0xf869
0x00000000000ae1d5 : ret 0xf883
0x00000000000c53a5 : ret 0xf889
0x00000000000c1679 : ret 0xf8c1
0x000000000002100d : ret 0xf8e9
0x00000000000f89ca : ret 0xf95c
0x0000000000126c80 : ret 0xf980
0x0000000000063814 : ret 0xf983
0x00000000000f1c3a : ret 0xf9cb
0x00000000000c35bf : ret 0xfa29
0x000000000007b9e2 : ret 0xfa3e
0x00000000000523c0 : ret 0xfa80
0x000000000003dee2 : ret 0xfa81
0x0000000000029a79 : ret 0xfa83
0x0000000000073ce2 : ret 0xfabb
0x0000000000032982 : ret 0xfac1
0x00000000000dae9d : ret 0xfad1
0x00000000001414ca : ret 0xfb58
0x0000000000127031 : ret 0xfb80
0x00000000000d900e : ret 0xfb83
0x0000000000089ed9 : ret 0xfc00
0x000000000003f4d6 : ret 0xfc01
0x000000000003f48a : ret 0xfc02
0x00000000000ff231 : ret 0xfc07
0x000000000005c8da : ret 0xfc2f
0x000000000008a869 : ret 0xfc3
0x0000000000194e44 : ret 0xfc52
0x0000000000194c44 : ret 0xfc5c
0x0000000000057fda : ret 0xfc78
0x0000000000195130 : ret 0xfc84
0x000000000019583c : ret 0xfc9f
0x0000000000195834 : ret 0xfca0
0x000000000019582c : ret 0xfca1
0x0000000000195824 : ret 0xfca2
0x000000000019581c : ret 0xfca3
0x0000000000195628 : ret 0xfcab
0x000000000004b3e2 : ret 0xfd44
0x00000000000d4b3a : ret 0xfd7a
0x00000000000a9d18 : ret 0xfd83
0x00000000000f464a : ret 0xfda2
0x000000000002f3e0 : ret 0xfdf
0x0000000000089d99 : ret 0xfe00
0x00000000000a9d39 : ret 0xfe83
0x0000000000120738 : ret 0xfe9
0x0000000000044b7a : ret 0xfe90
0x0000000000033ee2 : ret 0xfeb9
0x000000000014cffe : ret 0xfec5
0x000000000012d0bc : ret 0xfee8
0x0000000000089c59 : ret 0xff00
0x00000000001236fa : ret 0xff0d
0x0000000000044d4f : ret 0xff2
0x00000000000b68a0 : ret 0xff25
0x000000000009eada : ret 0xff3
0x00000000000885b5 : ret 0xff31
0x000000000009dd1d : ret 0xff41
0x000000000002b3e2 : ret 0xff44
0x0000000000088d54 : ret 0xff48
0x00000000001009ca : ret 0xff63
0x0000000000089b19 : ret 0xff80
0x000000000003c216 : ret 0xff81
0x000000000003c1ca : ret 0xff82
0x0000000000063832 : ret 0xff83
0x0000000000069de9 : ret 0xffaf
0x000000000001f96b : ret 0xffb8
0x0000000000042317 : ret 0xffbf
0x00000000000899d9 : ret 0xffc0
0x000000000009b45c : ret 0xffd0
0x000000000009dc39 : ret 0xffd3
0x000000000008225a : ret 0xffd5
0x000000000009b74c : ret 0xffd7
0x0000000000086ad1 : ret 0xffdf
0x0000000000089899 : ret 0xffe0
0x0000000000057afa : ret 0xffe1
0x0000000000066b2d : ret 0xffe5
0x0000000000020fda : ret 0xffe8
0x0000000000021005 : ret 0xffe9
0x00000000001735c1 : ret 0xffea
0x0000000000040f87 : ret 0xffec
0x0000000000196b81 : ret 0xffed
0x0000000000133537 : ret 0xffee
0x000000000003b58c : ret 0xffef
0x0000000000089759 : ret 0xfff0
0x0000000000031d08 : ret 0xfff1
0x00000000000f3511 : ret 0xfff2
0x00000000000c3c27 : ret 0xfff3
0x00000000000afb6e : ret 0xfff4
0x000000000009db05 : ret 0xfff5
0x00000000000eea6e : ret 0xfff6
0x00000000000bd4a1 : ret 0xfff7
0x000000000004ec76 : ret 0xfff8
0x00000000000346c6 : ret 0xfff9
0x000000000005115a : ret 0xfffa
0x000000000002b0b3 : ret 0xfffb
0x00000000000343c6 : ret 0xfffc
0x000000000005fac0 : ret 0xfffd
0x00000000000ff7f7 : ret 0xfffe
0x000000000002d905 : ret 0xffff
0x000000000001f6bc : ret 1
0x000000000004b519 : ret 2
0x00000000000011c8 : ret 3
0x0000000000007608 : ret 4
0x0000000000001570 : ret 5
0x000000000000dda0 : ret 6
0x00000000000aa8fa : ret 7
0x0000000000001a8c : ret 8
0x00000000001707ca : ret 9
0x0000000000185ca8 : retf -0x1298 ; jmp qword ptr [rdx]
0x0000000000185cb8 : retf -0x1298 ; push rdi ; in eax, dx ; call rdx
0x000000000009207f : retf -0x7af1 ; call qword ptr [rsi]
0x0000000000101eda : retf -0xe27 ; dec dword ptr [rax - 0x75] ; jge 0x101eea ; call rbx
0x00000000001a7a1d : retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00000000001a7a4d : retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00000000000be9f7 : retf ; jmp 0xbea0b
0x0000000000188335 : retf ; jmp qword ptr [rdi]
0x0000000000142ab3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000188485 : retf ; push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00000000000a9665 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000aa12e : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000fec1c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000009e0bc : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009e51d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000ac1bd : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000aceeb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000072e8c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008e13d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000003a6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000011000d : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000009eab2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000bcc82 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x000000000008ae52 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000180020 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000081636 : rol byte ptr [rax + rax], cl ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000024bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000006632c : rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000123549 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000003d320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001959d4 : rol byte ptr [rax - 0x7daf0004], 1 ; cld ; call rax
0x00000000000abd9d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000016dbcd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000196bcd : rol byte ptr [rax], 0 ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00000000000bba58 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006b62f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000104897 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7390 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003569c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000008cc5b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x0000000000095b22 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000005d9e1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000036269 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x000000000011cb67 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011cd4d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000195a20 : rol byte ptr [rbp - 0x78af0004], 1 ; cld ; call rax
0x000000000004846b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000118539 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000104e2b : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000d6607 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x0000000000109aec : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000073058 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002df31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000d0af5 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000001959dc : rol byte ptr [rbx - 0x7aaf0004], 1 ; cld ; call rax
0x000000000005df0f : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x00000000000ab3e2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000121f16 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012d011 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000187468 : rol byte ptr [rbx], 0xf2 ; jmp rax
0x00000000000a9fe1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000011cb69 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x000000000011cd4f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x0000000000096773 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009dfb2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000b7a7b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x000000000009e06b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000d5985 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x000000000002975b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000ab49e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xab470 ; ret
0x0000000000123202 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001025e7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000c1c9e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00000000000dae3e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x00000000000c17fd : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x000000000008a842 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000ab3c2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e754a : rol byte ptr [rcx], 0x39 ; ret
0x00000000000d89b8 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000e5242 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x0000000000048082 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48081 ; xor eax, eax ; ret
0x00000000000a9deb : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x0000000000108dcd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000d8697 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002b152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006ee57 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000004606a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000101577 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00000000000a9e4b : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000a9e36 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000187420 : rol byte ptr [rcx], 1 ; jmp rax
0x000000000014d02e : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000018ba14 : rol byte ptr [rcx], 1 ; sti ; jmp rax
0x000000000019bd12 : rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001bbb18 : rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bbac0 : rol byte ptr [rcx], cl ; ret 0xb
0x00000000000f5e5c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000109ebd : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000ab422 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000001874a4 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x00000000001874a8 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000195a18 : rol byte ptr [rdx - 0x7baf0004], 1 ; cld ; call rax
0x0000000000195084 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00000000000ab3d2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000218e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x00000000001a4180 : rol byte ptr [rdx], 0xfd ; jmp rsp
0x0000000000106825 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cc677 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000187448 : rol byte ptr [rdx], 1 ; push rax ; add dh, dl ; call qword ptr [rax]
0x00000000000beb3f : rol byte ptr [rip + 0x16e], 1 ; ret
0x0000000000109d8d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x000000000006bd99 : rol byte ptr [rip - 0x76b7ffee], 1 ; ret 0x8948
0x00000000001959e4 : rol byte ptr [rsi - 0x77af0004], 1 ; cld ; call rax
0x000000000019525c : rol byte ptr [rsi - 0x79af0004], 0xfc ; jmp rax
0x00000000000ab412 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d6e91 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000181160 : rol cl, 0xc2 ; ret
0x0000000000194764 : rol dh, 1 ; sti ; jmp qword ptr [rax]
0x000000000011c4e7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000001a4660 : rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000ab36c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000010ffe1 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000196c0d : rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00000000001a707d : rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x000000000006bcf8 : rol dword ptr [rax], 1 ; ret
0x000000000009e517 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000001f9be : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000000c557b : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x0000000000066328 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000022d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000111381 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a72b9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001233ae : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000360c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008a8a9 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c838b : rol ebx, 0x2f ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000136b88 : rol ecx, 1 ; jmp 0xffffffff80d662a4
0x0000000000136e0f : rol ecx, 1 ; jmp 0xffffffff80d6652b
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008a8a8 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000360c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001187b2 : ror ax, 8 ; ret
0x0000000000035f64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000360c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008dfb2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8dff9 ; add rax, rdi ; ret
0x000000000008ad07 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a06de : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000007442a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000023db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000013b1bd : ror byte ptr [rax + 0x39], 0xca ; je 0x13b1d7 ; ret
0x00000000000fc23f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc277 ; ret
0x0000000000113eb8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f5e5e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f60ed : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000048f16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000113dd8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000d3400 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000046f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bb850 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000114ef2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000012831c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000096db7 : ror byte ptr [rax + 0xf], 1 ; ret
0x0000000000047fd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x000000000002c864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000049a9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000009e663 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000959fc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008c8a9 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000123383 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000076b99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000ae571 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b7626 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000042205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000ada15 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000003bfe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003bf29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000008ad04 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000dec70 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000017c428 : ror byte ptr [rax + rax], 0 ; ret
0x000000000008e135 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000a9c9c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f29f8
0x000000000002d902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000108b06 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000005715a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000bf652 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000baa48 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cd008 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008df72 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008dfa2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009e552 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008df92 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000ce7dd : ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000109841 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c5558 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x000000000007ba0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000195a28 : ror byte ptr [rax - 0x75af0004], 1 ; cld ; call rax
0x0000000000048db3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000009e199 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012d6b9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12d65b ; xor eax, eax ; pop rbx ; ret
0x0000000000096db4 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x00000000001321d8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000114de2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000139b99 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x000000000008755c : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000013f44a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x000000000003b35d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000078f65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000be645 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000052005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x000000000012ed36 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000020625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000866f2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000131809 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000ef0f1 : ror byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x3b3c9
0x000000000007db6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007a391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00000000001018fb : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000000773e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000094921 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003adac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013a731 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001364e6 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000013626e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d5 ; ret
0x00000000000f7d70 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003a08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000142a80 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000132c1d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b76a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000121626 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009e5b2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009e592 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009e572 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f628e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000821e5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2916a04
0x00000000000c25e5 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e0116 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000004f583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000fcf25 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000075f7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000046180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d46c3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a58c6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000be29e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077ccf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002593e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007818a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116d2a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000af36a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000008cc04 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b79bb : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00000000000ac4c7 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000f00d6 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x0000000000195a30 : ror byte ptr [rbx - 0x72af0004], 1 ; cld ; call rax
0x00000000000f614f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x0000000000024c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x0000000000024270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000abe07 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000000adfb3 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x000000000012972b : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000034f34 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000094386 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000003522e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00000000001959ec : ror byte ptr [rcx - 0x74af0004], 1 ; cld ; call rax
0x000000000012245e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000d62ee : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00000000000a9c94 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x000000000011f071 : ror byte ptr [rcx - 0x7ca6873e], 0x3d ; ret
0x00000000000943c8 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000a54af : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000098efa : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000abda0 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000ba6a0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x000000000010697c : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008e979 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000001959fc : ror byte ptr [rdi - 0x6eaf0004], 1 ; cld ; call rax
0x00000000001053e0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000001010b5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000e9e00 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000bc882 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000003a6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000004745f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000bce3d : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007573c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000964fa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000087a36 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000f3f87 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e2d8f : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c3e46 : ror byte ptr [rdi], 0x84 ; ret 1
0x000000000009642a : ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000063693 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000002aecd : ror byte ptr [rdi], 0x84 ; ret 5
0x000000000010fff2 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x000000000007638c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000164c0a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000083f05 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009e4dc : ror byte ptr [rdi], 0x85 ; jge 0x9e4ea ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000085a91 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a4111 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005cd99 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a0a57 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000600bb : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000dacdf : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x0000000000112d25 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x0000000000118cae : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000001216a8 : ror byte ptr [rdi], 0x88 ; ret
0x00000000000f7b17 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000000ff7f4 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00000000000bb223 : ror byte ptr [rdi], 0x89 ; ret 3
0x00000000000cccef : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000008794d : ror byte ptr [rdi], 0x94 ; ret
0x00000000000ec9be : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e21e7 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000bb14b : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000136126 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000bb218 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x0000000000059901 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000080ebc : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00000000000dff48 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x0000000000020775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000061a94 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000006ffba : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010efe3 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d8f35 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00000000000b9b7f : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00000000000b9a2a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x0000000000045c3d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000ac6ff : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ac9ec : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00000000000d900b : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000007371c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000cd005 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000e9dfd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ab5cc : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f7f5a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000033bce : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33bb8 ; ret
0x00000000000e5245 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000db51f : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000007f239 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c0d4b : ror byte ptr [rdi], 1 ; test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009676d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009e5fd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007550c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000bb49a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x0000000000097db7 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b6cd0 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x0000000000195a38 : ror byte ptr [rsi - 0x6faf0004], 1 ; cld ; call rax
0x00000000001959f4 : ror byte ptr [rsp + rdi*8 - 0x371af01], 1 ; call rax
0x0000000000188564 : ror byte ptr [rsp + rsi*8 - 1], 0xc0 ; hlt ; jmp rax
0x00000000001947b8 : ror ch, 1 ; sti ; jmp qword ptr [rax]
0x0000000000194770 : ror dl, 0xfb ; call qword ptr [rax]
0x0000000000098f7f : ror dword ptr [r9 + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x0000000000074143 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000c262c : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000cc801 : ror dword ptr [rax + 0x63], cl ; ret
0x0000000000149b95 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000149a59 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000149cae : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x000000000013e717 : ror dword ptr [rax + 1], cl ; ret
0x0000000000109634 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000000ddc7e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000d9fcc : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000049da3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000009e185 : ror dword ptr [rax - 0x77], 0xa ; ret
0x000000000010523d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000dc017 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x0000000000142191 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000052bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000014d082 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000071bfd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bf7 ; ret
0x000000000007af3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x000000000003a178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000032752 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000004b64f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000c0a15 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000e4b3f : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x000000000012f190 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x000000000009a4d0 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x0000000000098f80 : ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00000000000dc014 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x000000000002c2c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000093ee5 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000000e6a34 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00000000000e86ab : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00000000000e86b3 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x000000000016fd17 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000099b43 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009e475 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003c3d8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000e33dd : ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00000000000d7a17 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000016e438 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016eb44 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e916 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000016fa40 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e896 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016ebd4 : ror dword ptr [rdi], -0x7b ; je 0x16ebe4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e6cb : ror dword ptr [rdi], -0x7b ; jno 0x16e6e0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e793 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011a0e7 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000016e410 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007edbf : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000000f7f3c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000009e267 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000123045 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000001187b3 : ror eax, 8 ; ret
0x00000000001884ec : ror edx, 1 ; jmp qword ptr [rdi]
0x0000000000071bfc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x71bf8 ; ret
0x000000000007af3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7af38 ; ret
0x0000000000087ca3 : sahf ; adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c76
0x000000000019671d : sahf ; add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x196729
0x0000000000071385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x0000000000195849 : sahf ; cld ; call qword ptr [rdx + 0x22fffc9d]
0x0000000000195845 : sahf ; cld ; jmp qword ptr [rdx]
0x00000000001959c5 : sahf ; cld ; jmp rax
0x0000000000195550 : sahf ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00000000000025e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00000000000025e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x000000000011e79e : sahf ; mov edx, 0x448b0006 ; ret 0x4804
0x000000000014a9de : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e85d3 : sahf ; ret
0x00000000000493f1 : sahf ; ret 0x148
0x00000000000c1803 : sahf ; ret 0x1fbd
0x00000000001829c5 : sahf ; ret 0x38ae
0x000000000003887c : sahf ; ret 0x8348
0x00000000000e85dc : sahf ; ret 0x844
0x00000000000bb3df : sahf ; ret 0xe8c1
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x000000000004baae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000beb3d : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000d6651 : sal bh, 0xd0 ; and eax, 2 ; ret
0x000000000013616e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001367b9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010e012 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006b31b : sal bh, 0xd8 ; ret
0x00000000000aa142 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000008a517 : sal bh, 1 ; ret 0x8000
0x000000000008a3d7 : sal bh, 1 ; ret 0xc000
0x000000000008a297 : sal bh, 1 ; ret 0xe000
0x000000000008a157 : sal bh, 1 ; ret 0xf000
0x000000000008a017 : sal bh, 1 ; ret 0xf800
0x0000000000089ed7 : sal bh, 1 ; ret 0xfc00
0x0000000000089d97 : sal bh, 1 ; ret 0xfe00
0x0000000000089c57 : sal bh, 1 ; ret 0xff00
0x0000000000089b17 : sal bh, 1 ; ret 0xff80
0x00000000000899d7 : sal bh, 1 ; ret 0xffc0
0x0000000000089897 : sal bh, 1 ; ret 0xffe0
0x0000000000089757 : sal bh, 1 ; ret 0xfff0
0x0000000000089617 : sal bh, 1 ; ret 0xfff8
0x00000000000894d7 : sal bh, 1 ; ret 0xfffc
0x0000000000089397 : sal bh, 1 ; ret 0xfffe
0x00000000000504c4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000123237 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000018829d : sal bl, 1 ; call qword ptr [rcx]
0x0000000000045a28 : sal bl, 1 ; ret
0x0000000000088b13 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000abb6f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000ce6b1 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000135df5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x0000000000194a44 : sal byte ptr [rax], 1 ; cld ; call rax
0x00000000001735f7 : sal byte ptr [rbp + 0x1e], 0x49 ; mov edi, dword ptr [rbp] ; call 0x1f8b1
0x000000000008df68 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000053995 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x000000000013b891 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000008cc80 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006acc0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000005155e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000113ec7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035307 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000012d5b4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001145a4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007a394 : sal byte ptr [rbp + 9], cl ; ret
0x000000000012b633 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012d251 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000133514 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000001376c9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000149b90 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000137b00 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001144b1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007c845 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009df35 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000001a6a20 : sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x0000000000048086 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000001147ee : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000088a20 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000a97d0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000071c00 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009e22a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000138336 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009ec5b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000d0a1f : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000009dfd3 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033bd3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000001229cb : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000aba72 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000008cc5d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x0000000000087b8e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000000faaee : sal byte ptr [rbp - 0x61], 0x89 ; out dx, eax ; call 0xf6d07
0x0000000000114946 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000088aca : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000acf1b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000012a452 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x000000000012c09c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000fe662 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000fe383 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000012cc42 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x0000000000113144 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000fee65 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001376f2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000006dcdf : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000012d28e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000006f61a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000009e25e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00000000001051e9 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000008ac4c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000174ca8 : sal byte ptr [rcx - 0x15], 1 ; call rax
0x0000000000174c94 : sal byte ptr [rcx - 0x15], 1 ; jmp rax
0x0000000000113eb6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000fa0d5 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00000000000f5ef1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001029f2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x000000000012333e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x00000000001954c8 : sal byte ptr [rdi - 4], 0xff ; xor byte ptr [rdi - 4], dh ; call rax
0x0000000000195488 : sal byte ptr [rdi - 4], 1 ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x0000000000045ce4 : sal byte ptr [rdi], 1 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000008ae1b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000122893 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00000000000a06e3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000088eb3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009e5fb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000113ddc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000194a48 : sal byte ptr [rdx], 1 ; cld ; call rax
0x000000000013d187 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000013223a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132258 ; call rax
0x00000000001383ba : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1383d8 ; call rax
0x0000000000138ad3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138af1 ; call rax
0x000000000013441e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134494 ; call rax
0x0000000000134e3e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134ea4 ; call rax
0x00000000000f0166 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298497a
0x0000000000111fa1 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x111f77
0x000000000008a971 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000121da0 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x00000000001081f2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000019493c : sal dh, 0xfb ; call qword ptr [rax]
0x0000000000194930 : sal dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000034e0a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x0000000000034acf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x000000000004876f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000013b2d4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000aba52 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x000000000013b1bb : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13b1d9 ; ret
0x000000000009e197 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000123235 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ba08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000001944d4 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call rcx
0x0000000000194558 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call rsi
0x00000000001945e8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; jmp qword ptr [rax]
0x000000000019454c : sal dword ptr [rdi - 0x48a10003], 1 ; std ; call rcx
0x000000000019458c : sal dword ptr [rdi - 0x48b80003], 1 ; std ; call rcx
0x00000000001945cc : sal dword ptr [rdi - 0x48cf0003], 1 ; std ; call rcx
0x000000000019453c : sal dword ptr [rdi - 0x490e0003], 1 ; std ; call rcx
0x000000000019457c : sal dword ptr [rdi - 0x49290003], 1 ; std ; call rcx
0x00000000001945bc : sal dword ptr [rdi - 0x49440003], 1 ; std ; call rcx
0x00000000001945fc : sal dword ptr [rdi - 0x495f0003], 1 ; std ; call rcx
0x000000000019452c : sal dword ptr [rdi - 0x498e0003], 1 ; std ; call rcx
0x000000000019456c : sal dword ptr [rdi - 0x49a90003], 1 ; std ; call rcx
0x00000000001945ac : sal dword ptr [rdi - 0x49c40003], 1 ; std ; call rcx
0x00000000001945ec : sal dword ptr [rdi - 0x49df0003], 1 ; std ; call rcx
0x000000000019451c : sal dword ptr [rdi - 0x4a0e0003], 1 ; std ; call rcx
0x000000000019455c : sal dword ptr [rdi - 0x4a290003], 1 ; std ; call rcx
0x000000000019459c : sal dword ptr [rdi - 0x4a440003], 1 ; std ; call rcx
0x00000000001945dc : sal dword ptr [rdi - 0x4a5f0003], 1 ; std ; call rcx
0x00000000001944dc : sal dword ptr [rdi - 0x4a6e0003], 1 ; std ; call rcx
0x00000000001944fc : sal dword ptr [rdi - 0x4a7f0003], 1 ; std ; call rcx
0x00000000001944ec : sal dword ptr [rdi - 0x4a990003], 1 ; std ; call rcx
0x000000000019450c : sal dword ptr [rdi - 0x4aaa0003], 1 ; std ; call rcx
0x000000000009e029 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9e028 ; ret
0x0000000000186f69 : sal eax, -1 ; pop rax ; ret
0x00000000001882dd : sal ebx, 1 ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x000000000014d085 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000188261 : sal ebx, cl ; call qword ptr [rcx]
0x0000000000198cd1 : sal esi, -1 ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00000000001ada11 : sal esp, 1 ; jmp rcx
0x000000000016fd56 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001998dd : salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00000000001321db : salc ; add rdi, 0x10 ; jmp rcx
0x00000000001503c6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000173551 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112739 : salc ; call rax
0x00000000000a9a3a : salc ; clc ; ret
0x000000000019ab51 : salc ; cli ; call rsp
0x0000000000110010 : salc ; cmovne eax, ecx ; ret
0x000000000012334f : salc ; ja 0x12333c ; mov eax, 0xffffffff ; ret
0x00000000000038ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004821e : salc ; jne 0x48215 ; xor eax, eax ; ret
0x0000000000194560 : salc ; mov ch, 0xfd ; call rcx
0x0000000000194580 : salc ; mov dh, 0xfd ; call rcx
0x0000000000073020 : salc ; mov eax, 0xffffffff ; ja 0x73039 ; ret
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000111fa3 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f75
0x00000000000abb89 : salc ; mov rax, rdi ; ret
0x00000000000e06b1 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000c4721 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000022e4 : salc ; ret
0x00000000000025e6 : salc ; ret 0x23cb
0x0000000000140336 : salc ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000187390 : sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00000000001873e0 : sar bh, 0xf1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000061b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005ebe8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000120380 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001947c1 : sar bl, 1 ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00000000001211e3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000120e11 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00000000001400b2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000cd01f : sar byte ptr [rax + 1], cl ; ret
0x0000000000084c67 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000075adc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000026ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000001067f3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00000000001b2ad0 : sar byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001b0580 : sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000d671d : sar byte ptr [rdx], 0xe ; je 0xd66bc ; pop rbx ; ret
0x0000000000002b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x0000000000102f1c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cc64c : sar byte ptr [rsi + 9], 1 ; ret
0x000000000018335f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001952a4 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x1952ae ; call rax
0x00000000001873b0 : sar ch, 1 ; int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x0000000000194984 : sar cl, 1 ; sti ; jmp qword ptr [rax]
0x00000000000d8c25 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd8c42
0x000000000009ef33 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9ef3e ; ret
0x000000000009f686 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9f691 ; ret
0x000000000009fdd3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9fdde ; ret
0x00000000000fde9b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000103ad3 : sar dword ptr [rbp - 0x74b6000f], 1 ; cmp al, 0x24 ; call rbx
0x00000000000e7246 : sar dword ptr [rcx], 1 ; ret
0x000000000001f969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00000000000d2637 : sar dword ptr [rcx], cl ; ret 0xef7c
0x0000000000041925 : sar dword ptr [rdx + 1], -0x77 ; ret
0x00000000000fde3f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000034f03 : sar eax, 0x10 ; ret
0x0000000000034b69 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000013fa74 : sar eax, 0x1f ; ret
0x0000000000034ebb : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003478d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000fda02 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000072d6c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000075660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000734f9 : sar eax, 2 ; ret
0x00000000001184ad : sar eax, 6 ; ret
0x00000000001947c5 : sar ebx, 1 ; call qword ptr [rax]
0x000000000019a2a9 : sar ecx, 1 ; call rsp
0x00000000001830c3 : sar ecx, 1 ; jnp 0x183084 ; ret
0x000000000003a634 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003a647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008e137 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000072d6b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003478c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000734f8 : sar rax, 2 ; ret
0x00000000001184ac : sar rax, 6 ; ret
0x000000000008e136 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000194ae9 : sbb ah, bh ; call qword ptr [rax - 0x1f0003e7]
0x00000000000f5d29 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x000000000019cc25 : sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x000000000019cbf5 : sbb al, 0 ; add byte ptr [rax], ch ; cmp ch, cl ; call qword ptr [rax]
0x000000000011273e : sbb al, 0x20 ; je 0x1127a6 ; xor eax, eax ; pop rbx ; ret
0x000000000011273d : sbb al, 0x20 ; je 0x1127a7 ; xor eax, eax ; pop rbx ; ret
0x00000000001ad654 : sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad609 ; hlt ; jmp qword ptr [rcx]
0x0000000000187718 : sbb al, 0x29 ; jmp rsp
0x000000000013611d : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000002f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000010eb88 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10ebb4 ; mov rdx, r8 ; jmp 0x10eba4
0x00000000001afe54 : sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0154 : sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1f54 : sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000ff163 : sbb al, 0x83 ; ret
0x000000000006999b : sbb al, 0x83 ; ret 0x8308
0x0000000000068ac8 : sbb al, 0x89 ; ret
0x00000000000d4e03 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001a7154 : sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b8d
0x0000000000186e0c : sbb al, 0xdb ; out dx, eax ; jmp rsi
0x00000000000de095 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00000000001a84e9 : sbb al, 0xf1 ; jmp qword ptr [rcx]
0x00000000001aec69 : sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001acc0d : sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00000000001a1ec5 : sbb al, byte ptr [rax] ; add byte ptr [rax], cl ; sbb ebp, ebp ; jmp qword ptr [rax]
0x0000000000123110 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000004b9a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00000000000abb7c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000005aa9a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000000e35d1 : sbb al, ch ; leave ; ret 0xfff3
0x0000000000076ca7 : sbb al, ch ; ret
0x0000000000034ab4 : sbb al, dh ; adc eax, 0x540f6600 ; ret 0xf66
0x00000000001ab3d8 : sbb al, dh ; call rcx
0x0000000000194289 : sbb bh, bl ; call qword ptr [rax]
0x00000000000d4dba : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001a5fb9 : sbb bh, dl ; call qword ptr [rax]
0x0000000000181e45 : sbb bl, byte ptr [rsi] ; ret
0x0000000000033e51 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000076b8e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000001429bf : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013b231 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000001126a7 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000c8fe2 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013b5d6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064133 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00000000000a92b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a92d6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9314 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000081c50 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x00000000000741da : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000076b8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007ec13 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d57b6 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000001429c0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007d397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x0000000000116cd3 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62b
0x000000000013b232 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013cc3d : sbb byte ptr [rax + 1], cl ; ret
0x00000000001126a8 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00000000001880bc : sbb byte ptr [rax - 0x437d000d], dh ; jmp qword ptr [rbx]
0x00000000000c8702 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000024368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000dca1a : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007b161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f37b7 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000ef45a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x0000000000088626 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000073f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000000b170a : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000078b09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c8fe3 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f84e6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000093d5e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000837d7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000093d5d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000ca2b9 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d87f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001bbac7 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bbb1f : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x000000000007b9af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b5d7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000773e6 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a92b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a92d7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9315 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013dd68 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000012bc0a : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000137271 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x0000000000021859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000001afc08 : sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001a8d68 : sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x0000000000032854 : sbb byte ptr [rbx + 0x29480005], al ; ret
0x00000000000f6292 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000076b04 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009e89d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000076ba7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012bf14 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000003b177 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000007c887 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001ae918 : sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x000000000009dfaf : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000081c51 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x0000000000072bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000013c3dc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00000000000eb52e : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x0000000000081146 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00000000000ce346 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ac800 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000acab8 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000038382 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000000750c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000acd68 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000779c5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000824c3 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000019cfb8 : sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x0000000000113723 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000009dd4e : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000744d3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x00000000000741db : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000000b8fac : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000000000abb71 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001978dd : sbb byte ptr [rcx], al ; add ah, dh ; int1 ; call rsp
0x00000000000ef454 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef49c
0x00000000000fbfe1 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000d4382 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000075117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000116d28 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000006b318 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000139f98 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013b76e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000033e52 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012d768 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b2188 : sbb byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x00000000001aa518 : sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000002057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x000000000018862c : sbb byte ptr [rdx - 0xc], dl ; jmp qword ptr [rdx]
0x0000000000194af8 : sbb byte ptr [rip + 0x1ed0fffc], 0xfc ; jmp qword ptr [rax]
0x0000000000188ddc : sbb byte ptr [rip + 0x518fff5], al ; cmc ; call rax
0x0000000000188de8 : sbb byte ptr [rip + 0x518fff5], al ; cmc ; jmp rax
0x0000000000188e60 : sbb byte ptr [rip + 0x580fff5], al ; cmc ; call rax
0x0000000000108de2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000108de1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000194290 : sbb byte ptr [rsi], 0xfb ; jmp qword ptr [rax]
0x00000000000d437f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001b1ec9 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000f59de : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000128833 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000010fd0d : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000a5d0f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000144c5d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146dcd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014484d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144359 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b69 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad7a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a59a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014a98a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a1aa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014792d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014710d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001445dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001468ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014491d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000144c39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a349 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144d09 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014744d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014640d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001475ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000144abd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001442ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001446ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014a83a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a05a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b16a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014437d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014674d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014441f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014477d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146883 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147583 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001470a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a73b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b06b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001449ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001478c3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146bc3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001466e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001473e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a88b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a0ab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144443 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000199049 : sbb dh, bh ; call rsp
0x000000000010f4f3 : sbb dh, dh ; ret 0x7508
0x00000000001ac250 : sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001a0768 : sbb dl, cl ; in al, dx ; jmp rax
0x0000000000148088 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d4d93 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000001051f6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000013f7c4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000148011 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148089 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cce25 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000000962d3 : sbb dword ptr [rbp - 0x76b70008], edx ; ret 0x8949
0x00000000000aa17e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x0000000000115683 : sbb dword ptr [rbx + rax], edi ; ret
0x00000000001846fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000012330a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000136581 : sbb dword ptr [rcx], ebp ; add byte ptr [rbp + 0xa], dh ; jmp 0x1365b3
0x00000000000a742e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x000000000018851c : sbb eax, -0xd ; jmp rax
0x000000000016c01c : sbb eax, -1 ; ret
0x0000000000114f74 : sbb eax, 0 ; leave ; ret
0x0000000000047062 : sbb eax, 0x146ad7 ; mov rax, rbx ; pop rbx ; ret
0x0000000000194af9 : sbb eax, 0x1ed0fffc ; cld ; jmp qword ptr [rax]
0x0000000000173730 : sbb eax, 0x25200b ; jne 0x173720 ; pop rbx ; ret
0x0000000000108971 : sbb eax, 0x2ba8ca ; pop rbx ; ret
0x00000000001942cd : sbb eax, 0x3a40fffb ; sti ; jmp qword ptr [rax]
0x00000000000a5d99 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000112732 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a74ed : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000001acc4d : sbb eax, 0x66b00001 ; stc ; call qword ptr [rax]
0x000000000010527a : sbb eax, 0x888bf ; mov rax, rbx ; pop rbx ; ret
0x000000000010fff5 : sbb eax, 0x89000001 ; ret 0x8944
0x000000000012702b : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x0000000000125ada : sbb eax, 0xf48002a ; ret 0xff81
0x0000000000126c7a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x0000000000147e31 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147ea9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000132470 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000d6606 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004846a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d6650 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00000000001228e8 : sbb eax, eax ; ret
0x0000000000171725 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001a1ec9 : sbb ebp, ebp ; jmp qword ptr [rax]
0x00000000000d5143 : sbb ebp, ecx ; ret
0x00000000000baef7 : sbb ebx, 0x89000001 ; ret
0x0000000000194285 : sbb ebx, edi ; jmp rax
0x0000000000194281 : sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00000000000fe385 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x0000000000054d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012c0a1 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000124d64 : sbb edi, dword ptr [rcx] ; ret
0x00000000001885cc : sbb edx, dword ptr [rcx - 0xc] ; jmp qword ptr [rdx]
0x000000000019a479 : sbb edx, edi ; jmp rsp
0x00000000001aa1c9 : sbb edx, esi ; jmp qword ptr [rcx]
0x00000000000025df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x0000000000196e11 : sbb esi, ebp ; call rsp
0x0000000000114cee : sbb esi, ebx ; ret
0x00000000000dba04 : sbb esi, esi ; ret
0x0000000000194aed : sbb esp, edi ; jmp rax
0x000000000016c01b : sbb rax, -1 ; ret
0x0000000000194ae8 : sbb spl, dil ; call qword ptr [rax - 0x1f0003e7]
0x0000000000145db2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d4177 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001a5d7d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d10 ; out dx, al ; call qword ptr [rsi]
0x00000000001a5d7c : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d11 ; out dx, al ; call qword ptr [rsi]
0x00000000001a5dad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d40 ; out dx, al ; jmp rbx
0x000000000008d82d : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014adce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000195595 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x0000000000189cc8 : scasb al, byte ptr [rdi] ; jns 0x189cc4 ; jmp qword ptr [rdx]
0x0000000000189cd0 : scasb al, byte ptr [rdi] ; jns 0x189ccc ; jmp qword ptr [rdx]
0x0000000000189d6c : scasb al, byte ptr [rdi] ; jns 0x189d68 ; jmp qword ptr [rdx]
0x00000000001736f6 : scasb al, byte ptr [rdi] ; shr edx, -1 ; ret
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014aecd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a5ef5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov bh, bh ; stc ; call qword ptr [rax]
0x000000000007b5d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x000000000008d2cd : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000134113 : scasd eax, dword ptr [rdi] ; add eax, 0x3d8d4800 ; ret
0x0000000000187f3d : scasd eax, dword ptr [rdi] ; call qword ptr [rcx]
0x0000000000187f39 : scasd eax, dword ptr [rdi] ; dec dword ptr [rbp - 0x51] ; call qword ptr [rcx]
0x00000000001a0439 : scasd eax, dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x0000000000116b23 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a475
0x0000000000116cd6 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a628
0x000000000011879f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x000000000009c93e : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000037300 : scasd eax, dword ptr [rdi] ; ret
0x000000000007407c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a9e4e : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000866f8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000a9e39 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000037290 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000033e54 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000108b0d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000109633 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000002bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00000000000025ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000087b90 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x0000000000187f3c : scasq rax, qword ptr [rdi] ; call qword ptr [rcx]
0x0000000000108e15 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000f7f58 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000113ebc : setae al ; ret
0x00000000000c6a08 : setbe al ; movzx eax, al ; pop rbx ; ret
0x0000000000109af0 : setbe al ; ret
0x000000000012a408 : sete al ; add rsp, 8 ; ret
0x0000000000139ea4 : sete al ; movzx eax, al ; ret
0x000000000002df35 : sete al ; ret
0x00000000000d4fb9 : setg dl ; jmp 0xd4f42
0x00000000000ab5ca : setl al ; movzx eax, al ; neg eax ; ret
0x000000000013626c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000e9dfb : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x000000000006b349 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000e9ddd : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000101984 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035f26 : setne al ; movzx eax, al ; ret
0x000000000007305c : setne al ; neg eax ; ret
0x00000000000773e8 : setne al ; ret
0x00000000000ae02a : setne dl ; jmp 0xae03a
0x00000000000b094b : setne dl ; jmp 0xb095a
0x00000000000b3102 : setne dl ; jmp 0xb311a
0x0000000000095455 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ed5f2 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000001a7080 : shl bl, 1 ; out dx, eax ; call rsp
0x0000000000194320 : shl byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00000000001b1dc0 : shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001aa410 : shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x0000000000194b08 : shl byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x0000000000181288 : shl byte ptr [rdx], cl ; jmp 0x18128e
0x00000000000a96ef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000034853 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000016fd13 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000890f5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016edcb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016ede2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000008c9b6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008c9c7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000009e438 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000016ecc1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017d650 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000183248 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000016ed46 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a954b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008c9b2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016edfd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016ede6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016edcf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016d88b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed61 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008dd8c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009e678 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000016ec21 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000045a24 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000012356a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000036083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000048a2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048986 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000093ee1 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000208f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000e442b : shl edx, 2 ; xor esi, esi ; call 0x8e699
0x00000000001233fb : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012359c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000048a2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048985 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000036082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x000000000012359b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000018725c : shr ah, 0xf1 ; call rax
0x0000000000187260 : shr ah, 1 ; int1 ; jmp rax
0x00000000001a0889 : shr ah, 1 ; jmp rbx
0x0000000000111b15 : shr al, 0x65 ; ret
0x00000000000fa0d9 : shr al, 0x71 ; ret
0x00000000000e964d : shr al, 0x7d ; ret
0x0000000000111ac3 : shr al, 0xb7 ; ret
0x0000000000113e36 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000143221 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c790f : shr bl, cl ; ret
0x0000000000047a2e : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x0000000000195754 : shr byte ptr [rbp - 0x52af0004], 0xfc ; jmp rax
0x00000000000bca3e : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c167f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000019557c : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x000000000009ec5f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000001a5310 : shr byte ptr [rcx], 0xee ; jmp qword ptr [rdi]
0x00000000000b939f : shr byte ptr [rcx], 1 ; ret
0x0000000000029ae8 : shr byte ptr [rcx], cl ; ret
0x000000000008e13b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000f7f5d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000187f30 : shr byte ptr [rdx - 0x5586000d], 0xf3 ; jmp qword ptr [rdi]
0x00000000000e6f14 : shr byte ptr [rip + 0x28b4800], 0x48 ; mov dword ptr [rdx], edi ; ret
0x000000000018700c : shr byte ptr [rsi - 0xf], 0xff ; shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x0000000000187010 : shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x0000000000196bd1 : shr ch, 1 ; call rsp
0x0000000000187290 : shr ch, 1 ; int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000044ac0 : shr cl, cl ; ret
0x00000000001872d0 : shr dh, 0xf1 ; call rax
0x00000000001872d4 : shr dh, 1 ; int1 ; jmp rax
0x00000000000c64d0 : shr dword ptr [rcx], 1 ; ret
0x0000000000118848 : shr eax, 0x18 ; ret
0x0000000000034b91 : shr eax, 0x1f ; ret
0x000000000016fc8c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x16fc9f ; xor eax, eax ; ret
0x00000000000347c0 : shr eax, 0x3f ; ret
0x0000000000106978 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000aa06a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000113e37 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000d6705 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x0000000000077f02 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000123570 : shr eax, 4 ; ret
0x0000000000077f12 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000aa049 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000035f3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000010988b : shr eax, cl ; and eax, 1 ; ret
0x00000000001423f1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000035f97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048b3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000c9c06 : shr ecx, cl ; ret
0x00000000001736f7 : shr edx, -1 ; ret
0x0000000000072e73 : shr edx, 2 ; sub eax, edx ; ret
0x000000000013bb0a : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000759b0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000075aa0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002da79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x0000000000048b3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000347bf : shr rax, 0x3f ; ret
0x0000000000106977 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000012356f : shr rax, 4 ; ret
0x0000000000072e72 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000013bb09 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000009dee1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009de51 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x0000000000098b5e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009b17c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000106963 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017c829 : sldt word ptr [rax] ; ret
0x00000000000e0411 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b5
0x000000000012d76b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000123041 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000126c7c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001a5efa : stc ; call qword ptr [rax]
0x000000000019a1e2 : stc ; call qword ptr [rdi + rbx + 2]
0x00000000000acd6e : stc ; call rbx
0x0000000000199e22 : stc ; call rsp
0x000000000010d261 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012a012 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000f84cc : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000877c6 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f2942 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000f3f83 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x0000000000088b0f : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000f8332 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000f8a12 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000019a262 : stc ; inc dword ptr [rdx - 0x366bfffe] ; stc ; call rsp
0x000000000019a0ca : stc ; inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x000000000000366f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001a9989 : stc ; int1 ; call rsi
0x0000000000149e82 : stc ; je 0x149e4e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b512 : stc ; je 0x14b4de ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001b1eca : stc ; jmp qword ptr [rsi]
0x000000000003329d : stc ; jmp rcx
0x0000000000199e42 : stc ; jmp rsp
0x00000000001830c4 : stc ; jnp 0x183083 ; ret
0x000000000019a2a2 : stc ; lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x000000000019a0e2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x0000000000152ba8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000126f02 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ddcb : stc ; mov rax, rdi ; ret
0x0000000000199e3a : stc ; push qword ptr [rax + rax + 0x3bf40002] ; stc ; jmp rsp
0x0000000000048b7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000199f0a : stc ; push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00000000000a9a39 : stc ; salc ; clc ; ret
0x000000000010988a : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000194985 : stc ; sti ; jmp qword ptr [rax]
0x000000000009f434 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008a845 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000083562 : stc ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000046075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000ccdde : std ; add byte ptr [rax], al ; jne 0xccdb1 ; ret
0x00000000000e7272 : std ; add byte ptr [rcx], bh ; ret
0x00000000001bad25 : std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x000000000004c8ac : std ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x000000000019449e : std ; call qword ptr [rax + 0x10fffda3]
0x00000000001944a6 : std ; call qword ptr [rax + 0x10fffda4]
0x00000000001944ae : std ; call qword ptr [rax + 0x10fffda5]
0x000000000019449a : std ; call qword ptr [rax - 0x6f00025e]
0x00000000001944a2 : std ; call qword ptr [rax]
0x00000000001944de : std ; call qword ptr [rcx - 0x2e00024b]
0x00000000001943d2 : std ; call qword ptr [rcx]
0x00000000001944d2 : std ; call rcx
0x0000000000194436 : std ; call rsi
0x000000000019adaa : std ; call rsp
0x00000000000f5851 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012dc49 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000076a47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001870fa : std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000019ada2 : std ; dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x000000000003505d : std ; fstp st(1) ; ret
0x00000000001ae7a9 : std ; hlt ; jmp qword ptr [rcx]
0x000000000007676f : std ; imul edi, ebp, 0x89c085ff ; ret
0x00000000001944fe : std ; inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x0000000000194406 : std ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x000000000019458e : std ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x0000000000194432 : std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x000000000019442e : std ; inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00000000001873ad : std ; int1 ; call rax
0x00000000001873b5 : std ; int1 ; jmp qword ptr [rax]
0x00000000001873b1 : std ; int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00000000001735cf : std ; ja 0x17359d ; call 0x1f8ad
0x00000000001945fe : std ; jmp qword ptr [rax - 0x2e00024a]
0x00000000001945de : std ; jmp qword ptr [rax - 0x2e00024b]
0x00000000001943ca : std ; jmp qword ptr [rax]
0x0000000000194402 : std ; jmp qword ptr [rcx + 0x41fffda8]
0x000000000019c0d2 : std ; jmp qword ptr [rdi]
0x00000000001943b2 : std ; jmp qword ptr [rdx]
0x0000000000194446 : std ; jmp qword ptr [rsi]
0x00000000001943d6 : std ; jmp rcx
0x00000000001a4182 : std ; jmp rsp
0x00000000001944ce : std ; lcall ptr [rbp - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x000000000019454e : std ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x000000000019460e : std ; ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00000000001523cb : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000000f36af : std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001945ce : std ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x000000000019452e : std ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00000000001943ae : std ; push qword ptr [rsi - 0x60] ; std ; jmp qword ptr [rdx]
0x00000000001885c0 : std ; push rax ; hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00000000001886e4 : std ; push rbx ; hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x000000000019451e : std ; push rcx ; mov ch, 0xfd ; call rcx
0x000000000019453e : std ; push rcx ; mov dh, 0xfd ; call rcx
0x000000000011b01f : std ; ret
0x00000000000ae029 : std ; setne dl ; jmp 0xae03b
0x00000000000b094a : std ; setne dl ; jmp 0xb095b
0x00000000000b3101 : std ; setne dl ; jmp 0xb311b
0x0000000000051341 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000001029f0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000005a6d8 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000019462a : sti ; call qword ptr [rax + 0x20fffbe5]
0x0000000000194972 : sti ; call qword ptr [rax - 0x1f00040c]
0x000000000019491e : sti ; call qword ptr [rax - 0x1f000413]
0x00000000001947a6 : sti ; call qword ptr [rax - 0x1f000438]
0x0000000000194752 : sti ; call qword ptr [rax - 0x1f00043f]
0x000000000019430e : sti ; call qword ptr [rax - 0x1f0004a4]
0x0000000000194796 : sti ; call qword ptr [rax - 0x3d]
0x0000000000194222 : sti ; call qword ptr [rax]
0x000000000019431e : sti ; call rax
0x00000000001b53da : sti ; call rcx
0x00000000001b58aa : sti ; call rsi
0x000000000019ac9a : sti ; call rsp
0x000000000019498e : sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000000bdebe : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cd310 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dcdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000007f13e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000006d361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000018ba0e : sti ; dec eax ; add ebx, edi ; call rax
0x00000000001942a6 : sti ; inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00000000001942c6 : sti ; inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00000000001942ce : sti ; inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00000000001946ae : sti ; inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x000000000019421e : sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x000000000019491a : sti ; inc dword ptr [rax - 0x14] ; sti ; call qword ptr [rax - 0x1f000413]
0x000000000019494e : sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x000000000019467e : sti ; inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x00000000001946b2 : sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00000000001946ce : sti ; inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x000000000019497e : sti ; inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x000000000019492a : sti ; inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00000000001947a2 : sti ; inc dword ptr [rax - 0x39] ; sti ; call qword ptr [rax - 0x1f000438]
0x000000000019496e : sti ; inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x00000000001948f2 : sti ; inc dword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000019494a : sti ; inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00000000001946d2 : sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x0000000000194792 : sti ; inc dword ptr [rax] ; ret 0xfffb
0x000000000019427e : sti ; inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00000000001942d6 : sti ; inc dword ptr [rax] ; sti ; call rax
0x000000000019493a : sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00000000001947c2 : sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x000000000019432a : sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000189918 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000194352 : sti ; jmp qword ptr [rax + 0x20fffb74]
0x000000000019435a : sti ; jmp qword ptr [rax + 0x20fffb77]
0x0000000000194362 : sti ; jmp qword ptr [rax + 0x20fffb7a]
0x000000000019436a : sti ; jmp qword ptr [rax + 0x20fffb7d]
0x0000000000194372 : sti ; jmp qword ptr [rax + 0x20fffb80]
0x000000000019437a : sti ; jmp qword ptr [rax + 0x20fffb83]
0x0000000000194382 : sti ; jmp qword ptr [rax + 0x20fffb86]
0x00000000001942c2 : sti ; jmp qword ptr [rax + 0x40fffb33]
0x0000000000194236 : sti ; jmp qword ptr [rax]
0x00000000001ba3aa : sti ; jmp qword ptr [rdx]
0x000000000018ba16 : sti ; jmp rax
0x00000000000d63ab : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001527a8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000173ca9 : sti ; mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x000000000009ddad : sti ; mov rax, rdi ; ret
0x00000000000e8029 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000011c3fa : sti ; or dword ptr [rdi], ecx ; ret
0x00000000001976c9 : sti ; out dx, eax ; call rsp
0x0000000000194326 : sti ; push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019421a : sti ; push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00000000001947be : sti ; push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x0000000000194936 : sti ; push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x000000000019498a : sti ; push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000019471a : sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00000000001942ee : sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000194612 : sti ; push rax ; fsincos ; call rax
0x0000000000194282 : sti ; push rax ; sbb ebx, edi ; jmp rax
0x00000000001942f6 : sti ; push rax ; sti ; call rax
0x000000000018324a : sti ; ret
0x0000000000036b79 : sti ; ret 0x38
0x0000000000042316 : sti ; ret 0xffbf
0x000000000018849c : sti ; retf ; jmp qword ptr [rdi]
0x000000000019a3c9 : sti ; stc ; jmp rsp
0x000000000012702d : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x000000000002c377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x00000000000afa0f : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd8f2e
0x00000000000b4eb7 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccde3d6
0x0000000000101c40 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000002314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00000000000ef48c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000122a32 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001968dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x196945 ; in eax, dx ; jmp rsp
0x0000000000195639 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00000000001955b5 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi]
0x0000000000195775 : stosb byte ptr [rdi], al ; cld ; call rax
0x0000000000195771 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00000000001956f5 : stosb byte ptr [rdi], al ; cld ; jmp rsp
0x0000000000183724 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000187f35 : stosb byte ptr [rdi], al ; jmp qword ptr [rdi]
0x0000000000047a30 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x0000000000002317 : stosb byte ptr [rdi], al ; ret
0x000000000000366e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001a5b25 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019556d : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x0000000000195769 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x000000000019562d : stosd dword ptr [rdi], eax ; cld ; jmp rdx
0x000000000012323a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000188664 : stosd dword ptr [rdi], eax ; push rdx ; hlt ; jmp qword ptr [rdx]
0x0000000000035f9c : stosd dword ptr [rdi], eax ; ret
0x00000000001382d4 : stosd dword ptr [rdi], eax ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382e9 ; ret
0x0000000000123239 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9b : stosq qword ptr [rdi], rax ; ret
0x0000000000184c11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000194991 : sub ah, bh ; call qword ptr [rax]
0x00000000001949b1 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000194ab5 : sub ah, bh ; jmp qword ptr [rax]
0x00000000001949d1 : sub ah, bh ; jmp rax
0x0000000000021973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x000000000019dfe8 : sub al, 0 ; add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00000000001013d3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fd3af : sub al, 0 ; add rsp, 8 ; ret
0x00000000000ffbe0 : sub al, 0 ; jne 0xffbf8 ; jmp 0xffc12
0x00000000000fd73b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00000000000fd57b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00000000000fe747 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001019f5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fd909 : sub al, 0 ; mov rdx, rax ; jmp 0xfd8a3
0x000000000010137f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000fece6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fe9cc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101349 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd582 : sub al, 0 ; ret
0x00000000001ac164 : sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x000000000019d964 : sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x0000000000080ecb : sub al, 0x34 ; add dh, dh ; ret 0xf02
0x00000000000ab052 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000001aec64 : sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000000d5fec : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x0000000000188634 : sub al, 0x52 ; hlt ; jmp qword ptr [rdx]
0x00000000001a0764 : sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00000000000ab055 : sub al, 0x75 ; pop rax ; ret
0x00000000000d6ee9 : sub al, 0x83 ; ret 0x4801
0x00000000000bb149 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000195810 : sub al, 0x9d ; cld ; call rdx
0x000000000016e413 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a8d64 : sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000009cf16 : sub al, 0xf ; mov dh, 0x45 ; ret
0x000000000009afd2 : sub al, 0xf ; mov dh, 0x55 ; ret
0x000000000012702e : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00000000001aa689 : sub al, 0xf2 ; jmp rcx
0x0000000000194a9d : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x0000000000100f7f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000001adc0d : sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00000000000ad3de : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019b064 : sub al, 1 ; add byte ptr [rax], al ; call 0x111998cc
0x0000000000197bdd : sub al, 1 ; add byte ptr [rdx + rdx*2], dl ; call rsp
0x000000000019a3dd : sub al, 2 ; add byte ptr [rbx + rax - 6], al ; call rsp
0x00000000001bb464 : sub al, 5 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x0000000000194610 : sub al, bl ; sti ; push rax ; fsincos ; call rax
0x000000000019d9bd : sub al, byte ptr [rax] ; add al, al ; mov ebp, ecx ; jmp rsp
0x000000000019d995 : sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x0000000000033ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000011faa3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011f2c6 : sub al, byte ptr [rax] ; call rax
0x000000000011b080 : sub al, byte ptr [rax] ; jne 0x11b097 ; jmp 0x11b0b1
0x00000000001203e5 : sub al, byte ptr [rax] ; ret
0x000000000012774e : sub al, byte ptr [rax] ; test eax, eax ; je 0x12775e ; ret
0x000000000005c6b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000004c4e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b1207 : sub al, ch ; ret
0x0000000000033635 : sub al, ch ; ret 0xfffe
0x000000000005a7b4 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000001949b5 : sub bh, ah ; jmp rax
0x0000000000194995 : sub bh, ah ; push rax ; sub edi, esp ; call rax
0x000000000007206c : sub bh, bh ; loopne 0x72009 ; mov eax, 0xffffffff ; ret
0x00000000001a96f8 : sub bh, ch ; int1 ; jmp rcx
0x0000000000188458 : sub bl, ah ; jmp qword ptr [rdi]
0x00000000001942a9 : sub bl, bh ; jmp rax
0x00000000001942a8 : sub bl, dil ; jmp rax
0x00000000000ab046 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000076b95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000741de : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000013b5a1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000142187 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000001437c3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x1437d9 ; xor eax, eax ; ret
0x00000000001437f3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x143809 ; xor eax, eax ; ret
0x0000000000143823 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x143839 ; xor eax, eax ; ret
0x000000000013b2d1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000f5057 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000076b96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000120af4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000134d2e : sub byte ptr [rax + 1], bh ; ret
0x00000000000741df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x000000000013b5a2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000877c4 : sub byte ptr [rax - 0x76b70007], al ; ret
0x0000000000084404 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000131998 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000032a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f9271 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000088b15 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f8337 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000073f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006d20c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000713f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000e21e4 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000ee3b0 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001aff18 : sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000022e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x0000000000142930 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000002aca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x000000000019d805 : sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x0000000000137705 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000013fd25 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001382d5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382e8 ; ret
0x00000000001402de : sub byte ptr [rax], al ; ret
0x000000000013d184 : sub byte ptr [rax], al ; test eax, eax ; je 0x13d198 ; xor eax, eax ; ret
0x00000000001402b8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1402d1 ; xor eax, eax ; pop rbx ; ret
0x00000000001437c4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1437d8 ; xor eax, eax ; ret
0x00000000001437f4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143808 ; xor eax, eax ; ret
0x0000000000143824 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143838 ; xor eax, eax ; ret
0x0000000000143854 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143868 ; xor eax, eax ; ret
0x0000000000143884 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143898 ; xor eax, eax ; ret
0x00000000001438b4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1438c8 ; xor eax, eax ; ret
0x00000000000022e2 : sub byte ptr [rax], dl ; salc ; ret
0x000000000013fd24 : sub byte ptr [rax], r8b ; call qword ptr [rax]
0x0000000000143853 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x143869 ; xor eax, eax ; ret
0x0000000000143883 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x143899 ; xor eax, eax ; ret
0x00000000001438b3 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x1438c9 ; xor eax, eax ; ret
0x00000000000ab04a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000ab049 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000206bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044c97 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000142903 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000142902 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000001b0158 : sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001942b0 : sub byte ptr [rbx], 0xfb ; jmp qword ptr [rax]
0x00000000000ab047 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000081089 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000013b627 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000080d0a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000033500 : sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x000000000002a27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000e32e9 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x0000000000142931 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x000000000013b2d2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000084530 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000012dbfc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001aedd8 : sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000ae1d2 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x000000000004c66f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001ab6fa : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a825a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x0000000000188e70 : sub byte ptr [rsi], al ; cmc ; call qword ptr [rcx]
0x0000000000002c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001af119 : sub ch, dh ; jmp qword ptr [rbx]
0x0000000000034b32 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x0000000000034e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x0000000000034931 : sub cl, al ; ret
0x00000000000f8331 : sub cl, bh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000101f7c : sub cl, bl ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000d0c0d : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000000989b5 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00000000000662c8 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007a8a5 : sub cl, ch ; ret 0xfffe
0x000000000010db5c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10db2a
0x000000000004bcd0 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000010403d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186e45 : sub dh, al ; jmp rax
0x00000000000abe34 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x0000000000035302 : sub dh, byte ptr [rcx + rdi] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00000000001aa609 : sub dh, dl ; jmp qword ptr [rdi]
0x000000000018a4bd : sub dl, bh ; call rax
0x000000000018a4b9 : sub dl, bh ; jmp rax
0x00000000001008bd : sub dword ptr [rax + rax], ebp ; ret
0x0000000000064324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000012b9cd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000136582 : sub dword ptr [rax], eax ; jne 0x136598 ; jmp 0x1365b2
0x0000000000127b85 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127b99 ; ret
0x000000000013762c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012d1c5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000127e05 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012acd6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012b9b4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12b9c6 ; ret
0x00000000000c8c33 : sub dword ptr [rbx - 0x76b7ffd1], edi ; ret 0x8d48
0x0000000000167f03 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x0000000000197b7d : sub dword ptr [rcx], eax ; add byte ptr [rbx + rax*2 - 0xe], dh ; call rsp
0x0000000000142a7e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001509f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15109d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001511d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1511ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15133d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15148d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001515c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1515dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151717 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15172d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151867 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15187d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001533c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1533dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15352d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15367d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001537b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1537cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15391d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1540fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15424d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15439d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1544ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15463d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155d97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x155dad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155ee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x155efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15604d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15619d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001562d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1562ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15643d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15658d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1566dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15682d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15697d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15700d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150953 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015094f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000066500 : sub dword ptr [rdi], ecx ; test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1204 : sub dword ptr [rdi], ecx ; test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001509fd : sub dword ptr [rdi], esp ; jmp r9
0x000000000011f2c5 : sub dword ptr [rdx], 0 ; call rax
0x000000000016fa69 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ebf6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000137726 : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000084509 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b3aa : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6f15 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000194a3d : sub eax, 0x2f00fffc ; cld ; call rax
0x0000000000194a1d : sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x00000000000e78b5 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x000000000012a432 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e9ab5 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034ba9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000056841 : sub eax, 0x83000000 ; ret
0x0000000000097e0d : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bbabb : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000132af4 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x000000000013689e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd4e4 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000009696a : sub eax, 1 ; jne 0x96967 ; pop rbx ; pop rbp ; ret
0x000000000002a6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004846f : sub eax, 1 ; ret
0x0000000000114611 : sub eax, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114343 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114359 ; xor eax, eax ; ret
0x0000000000114373 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114389 ; xor eax, eax ; ret
0x00000000001143a3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143b9 ; xor eax, eax ; ret
0x00000000001143d3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143e9 ; xor eax, eax ; ret
0x0000000000114403 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114419 ; xor eax, eax ; ret
0x0000000000108a43 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000108a36 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000114612 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000108b28 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000001147af : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x114798 ; ret
0x00000000001089c2 : sub eax, dword ptr [rax] ; je 0x1089cd ; pop rbp ; ret
0x000000000010b56a : sub eax, dword ptr [rax] ; jne 0x10b580 ; jmp 0x10b59a
0x0000000000109755 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010902d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000114efc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000108974 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000113ef4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f08 ; xor eax, eax ; ret
0x0000000000113f24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f38 ; xor eax, eax ; ret
0x0000000000113f54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f68 ; xor eax, eax ; ret
0x0000000000113f84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f98 ; xor eax, eax ; ret
0x0000000000113fb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113fc8 ; xor eax, eax ; ret
0x0000000000113fe4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113ff8 ; xor eax, eax ; ret
0x0000000000114014 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114028 ; xor eax, eax ; ret
0x0000000000114044 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114058 ; xor eax, eax ; ret
0x0000000000114074 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114088 ; xor eax, eax ; ret
0x00000000001140a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1140b8 ; xor eax, eax ; ret
0x00000000001140d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1140e8 ; xor eax, eax ; ret
0x0000000000114104 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114118 ; xor eax, eax ; ret
0x0000000000114134 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114148 ; xor eax, eax ; ret
0x0000000000114164 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114178 ; xor eax, eax ; ret
0x0000000000114194 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141a8 ; xor eax, eax ; ret
0x00000000001141c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141d8 ; xor eax, eax ; ret
0x00000000001141f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114208 ; xor eax, eax ; ret
0x0000000000114224 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114238 ; xor eax, eax ; ret
0x0000000000114254 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114268 ; xor eax, eax ; ret
0x0000000000114284 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114298 ; xor eax, eax ; ret
0x00000000001142e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1142f8 ; xor eax, eax ; ret
0x0000000000114314 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114328 ; xor eax, eax ; ret
0x0000000000114344 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114358 ; xor eax, eax ; ret
0x0000000000114374 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114388 ; xor eax, eax ; ret
0x00000000001143a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143b8 ; xor eax, eax ; ret
0x00000000001143d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143e8 ; xor eax, eax ; ret
0x0000000000114404 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114418 ; xor eax, eax ; ret
0x0000000000114434 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114448 ; xor eax, eax ; ret
0x0000000000114433 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114449 ; xor eax, eax ; ret
0x0000000000114464 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114478 ; xor eax, eax ; ret
0x0000000000114463 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114479 ; xor eax, eax ; ret
0x0000000000114985 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x114997 ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004bc80 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000aa211 : sub eax, dword ptr [rcx + r8*4] ; je 0xaa1f7 ; ret
0x00000000000aa212 : sub eax, dword ptr [rcx + rax*4] ; je 0xaa1f6 ; ret
0x000000000019add5 : sub eax, dword ptr [rcx] ; add ah, dh ; ret 0xfffd
0x000000000007d0be : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000000774d5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000773c5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000011894c : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x00000000000734f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000aa1ca : sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b6 ; ret
0x000000000019a3c5 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x000000000007c863 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000011000c : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000149a5e : sub eax, eax ; ret
0x000000000007b6dd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ac5ab : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007c019 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004a13d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008a57c : sub eax, ecx ; ret
0x000000000008ad09 : sub eax, edi ; ret
0x000000000010ff9f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000003a639 : sub eax, edx ; ret
0x0000000000034b8f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000347bd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000171ef7 : sub eax, edx ; vzeroupper ; ret
0x0000000000186e41 : sub eax, esi ; jmp qword ptr [rax - 0x1f000fd6]
0x000000000007b7fa : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078fb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011000b : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014335b : sub ebp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001834be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000006df3b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000181f55 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000b926c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035f94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000049125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a5a51 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aa3dc : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000009df56 : sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000173c79 : sub edi, dword ptr [rdx + rbp*8 + 0x1f0fff] ; ret
0x00000000001942b1 : sub edi, ebx ; jmp qword ptr [rax]
0x00000000001a7171 : sub edi, edx ; call qword ptr [rdi]
0x0000000000194999 : sub edi, esp ; call rax
0x0000000000194a39 : sub edi, esp ; jmp qword ptr [rax]
0x0000000000194a59 : sub edi, esp ; jmp rax
0x000000000007c890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008dfb4 : sub edx, eax ; jbe 0x8dff7 ; add rax, rdi ; ret
0x000000000008dfc4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008dfd4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008dfe4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d253b : sub edx, eax ; jmp 0xd2554
0x0000000000034eff : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000034ebe : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00000000001a7159 : sub edx, edi ; jmp qword ptr [rdi]
0x000000000019a559 : sub edx, edi ; jmp rsp
0x00000000001876b1 : sub edx, esi ; call qword ptr [rax + 0x10fff229]
0x00000000001876b5 : sub edx, esi ; call qword ptr [rax]
0x0000000000187719 : sub edx, esi ; jmp rsp
0x0000000000187715 : sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x0000000000074012 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000078774 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000000967d2 : sub esi, 1 ; jne 0x967d0 ; xor eax, eax ; pop rbx ; ret
0x000000000009687a : sub esi, 1 ; jne 0x96877 ; xor eax, eax ; ret
0x000000000012301e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000014204a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000187ed0 : sub esi, dword ptr [rdx - 0x441b000d] ; call qword ptr [rdx]
0x0000000000186e49 : sub esi, eax ; jmp qword ptr [rax]
0x00000000001a5311 : sub esi, ebp ; jmp qword ptr [rdi]
0x00000000000fc244 : sub esi, ebx ; ret
0x00000000000f6290 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b71e : sub esp, -0x80 ; pop rbx ; ret
0x0000000000088268 : sub esp, 0x80 ; call 0x114498
0x000000000012b349 : sub esp, 8 ; call 0x137645
0x000000000009e8d0 : sub esp, 8 ; call 0x8ab75
0x0000000000194a35 : sub esp, edi ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x0000000000194a55 : sub esp, edi ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00000000000d253a : sub r10, rax ; jmp 0xd2555
0x000000000010db5b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2b
0x000000000007c018 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000011faa2 : sub r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x00000000001203e4 : sub r8b, byte ptr [rax] ; ret
0x0000000000113f53 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f69 ; xor eax, eax ; ret
0x0000000000113f83 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f99 ; xor eax, eax ; ret
0x0000000000113fb3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113fc9 ; xor eax, eax ; ret
0x0000000000113fe3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113ff9 ; xor eax, eax ; ret
0x0000000000114013 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114029 ; xor eax, eax ; ret
0x0000000000114133 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114149 ; xor eax, eax ; ret
0x0000000000114163 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114179 ; xor eax, eax ; ret
0x0000000000114193 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x1141a9 ; xor eax, eax ; ret
0x00000000001141c3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x1141d9 ; xor eax, eax ; ret
0x00000000001141f3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114209 ; xor eax, eax ; ret
0x0000000000114223 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114239 ; xor eax, eax ; ret
0x0000000000114043 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114059 ; xor eax, eax ; ret
0x0000000000114073 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114089 ; xor eax, eax ; ret
0x00000000001140a3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140b9 ; xor eax, eax ; ret
0x00000000001140d3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140e9 ; xor eax, eax ; ret
0x0000000000114103 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114119 ; xor eax, eax ; ret
0x0000000000114253 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114269 ; xor eax, eax ; ret
0x0000000000114283 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114299 ; xor eax, eax ; ret
0x00000000001142e3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1142f9 ; xor eax, eax ; ret
0x0000000000114313 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114329 ; xor eax, eax ; ret
0x0000000000137725 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000096969 : sub rax, 1 ; jne 0x96968 ; pop rbx ; pop rbp ; ret
0x00000000000a9923 : sub rax, 1 ; ret
0x0000000000113ef3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x113f09 ; xor eax, eax ; ret
0x0000000000113f23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x113f39 ; xor eax, eax ; ret
0x000000000007d0bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000774d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000734f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000149a5d : sub rax, r8 ; ret
0x00000000000ac5aa : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008ad08 : sub rax, rdi ; ret
0x000000000003a64d : sub rax, rdx ; ret
0x00000000000347bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000171ef6 : sub rax, rdx ; vzeroupper ; ret
0x00000000000aa3db : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008dfb3 : sub rdx, rax ; jbe 0x8dff8 ; add rax, rdi ; ret
0x0000000000074011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000078773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000967d1 : sub rsi, 1 ; jne 0x967d1 ; xor eax, eax ; pop rbx ; ret
0x0000000000096879 : sub rsi, 1 ; jne 0x96878 ; xor eax, eax ; ret
0x00000000000f628f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b71d : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000088267 : sub rsp, 0x80 ; call 0x114499
0x000000000012b348 : sub rsp, 8 ; call 0x137646
0x000000000012b347 : sub rsp, 8 ; call 0x137647
0x000000000009e8cf : sub rsp, 8 ; call 0x8ab76
0x0000000000194990 : sub spl, dil ; call qword ptr [rax]
0x00000000001949b0 : sub spl, dil ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000034890 : subps xmm0, xmm1 ; ret
0x000000000003488f : subsd xmm0, xmm1 ; ret
0x0000000000034c24 : subss xmm0, xmm1 ; ret
0x0000000000124581 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000fcf37 : syscall ; mov eax, edx ; ret
0x00000000000f5d2d : syscall ; neg eax ; ret
0x00000000001144d7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000bb7c5 : syscall ; ret
0x00000000001067ef : syscall ; test rax, rax ; jl 0x10683e ; je 0x106802 ; ret
0x0000000000084879 : sysenter
0x0000000000111a05 : test ah, 7 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000074153 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000d709b : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000066502 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000199aac : test ah, ch ; add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x00000000000f1206 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000199560 : test ah, dh ; idiv edi ; cld ; ret
0x00000000001a5785 : test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000137787 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000131822 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000135f76 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001089c1 : test al, 0x2b ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x000000000008866c : test al, 0x33 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000003cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d8f68 : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000001a2b28 : test al, 0x48 ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3098 : test al, 0x52 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001afdc8 : test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0038 : test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001a5b28 : test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x000000000009c7e8 : test al, 0x83 ; ret 0x4901
0x00000000000d4c3c : test al, 0x89 ; ret
0x0000000000182817 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000000e78b3 : test al, 0xe5 ; sub eax, 0x36740000 ; xor eax, eax ; ret
0x00000000001a6228 : test al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00000000001a9438 : test al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00000000001a9408 : test al, 0xe8 ; int1 ; jmp qword ptr [rdi]
0x00000000000d4b38 : test al, 0xe8 ; ret 0xfd7a
0x0000000000023658 : test al, 0xe8 ; ret 0xffff
0x0000000000196a69 : test al, 0xed ; call rsp
0x0000000000104f2b : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000ec3c3 : test al, 0xf ; xchg eax, esp ; ret
0x00000000000ab999 : test al, 0xf0 ; jne 0xab9f8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab998 : test al, 0xf0 ; jne 0xab9f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001b53d8 : test al, 0xf1 ; sti ; call rcx
0x0000000000188119 : test al, 0xf3 ; call rdi
0x00000000001ad5e1 : test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000195785 : test al, 0xfc ; call qword ptr [rax]
0x0000000000195649 : test al, 0xfc ; call rdx
0x0000000000195645 : test al, 0xfc ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00000000001955c9 : test al, 0xfc ; jmp rsi
0x0000000000194405 : test al, 0xfd ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x0000000000194445 : test al, 0xfd ; jmp qword ptr [rsi]
0x00000000000f6a96 : test al, 2 ; cmove eax, edx ; ret
0x000000000009dfd2 : test al, al ; jne 0x9dfb5 ; ret
0x000000000009e110 : test al, al ; jne 0x9e0f6 ; xor eax, eax ; ret
0x000000000009ec5a : test al, al ; jne 0x9ec48 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000001209c5 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000019aa58 : test al, dl ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x0000000000195075 : test bh, ah ; call qword ptr [rax]
0x0000000000195a1d : test bh, ah ; call rax
0x0000000000195271 : test bh, ah ; jmp qword ptr [rax]
0x0000000000195135 : test bh, ah ; jmp rdx
0x0000000000046074 : test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000012d76a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000019b738 : test bpl, al ; call qword ptr [rax]
0x000000000019b750 : test bpl, al ; jmp qword ptr [rcx]
0x000000000002def6 : test byte ptr [rax + 0x200], bh ; ret
0x00000000001249d3 : test byte ptr [rax + 0x39000003], al ; ret
0x00000000000cd12a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001316f5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000003340d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000c46af : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000134cb5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b92b8 : test byte ptr [rax + 0x74db8500], cl ; or bh, byte ptr [rcx] ; ret
0x0000000000068469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x00000000000f2823 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x000000000012ef56 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00000000000f5ef3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001022b1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000001029f4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000047059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x000000000012991e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x0000000000133531 : test byte ptr [rax - 0x77], 0xe7 ; call 0x1f7e6
0x000000000013b4c9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x00000000001aa545 : test byte ptr [rax], 0 ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001aa605 : test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x000000000013d41b : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e2a55 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010f74f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000077eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000142dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000016feea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000016809a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a517a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a614a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000001680ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a616a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a617a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d665a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000016810a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a61ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007cb3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001680aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a615a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000020589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000758ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006acca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009e5ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000007f23b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019a59c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x000000000009582c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096f79 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001976c4 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; xor al, 0xfb ; out dx, eax ; call rsp
0x0000000000095844 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a4cbc : test byte ptr [rbp + 0x1900000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000113142 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x000000000006e536 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000196a2c : test byte ptr [rbp - 0x5f4c0000], dh ; in eax, dx ; jmp rsp
0x00000000000b7067 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000007550e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x000000000013d909 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00000000000663b8 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000007d776 : test byte ptr [rbp - 0xa000000], ch ; ret
0x000000000007e23f : test byte ptr [rbp - 0xa000000], dl ; ret
0x0000000000198888 : test byte ptr [rbp - 0xa], bl ; call rsp
0x000000000011273c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x1127a8 ; xor eax, eax ; pop rbx ; ret
0x00000000000f00cc : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x0000000000058397 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x00000000001950b8 : test byte ptr [rbx - 0x7c790004], 0xfc ; call qword ptr [rsi]
0x0000000000199368 : test byte ptr [rbx - 9], ah ; jmp rsp
0x000000000008402e : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000008372f : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000085bbe : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000019fabc : test byte ptr [rbx], cl ; add byte ptr [rax + 0x32], al ; jmp 0x19faca
0x00000000000969fb : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x000000000011659f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000086e1f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000378b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000003dad1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00000000000b99b3 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000000af403 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000050302 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000101c42 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000d8fb2 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000c6b3a : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000083a57 : test byte ptr [rcx - 0xa000000], dl ; ret
0x0000000000144446 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000022c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122250 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000d0c26 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000188060 : test byte ptr [rdi - 0x587b000d], ah ; jmp rax
0x000000000005749b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x000000000004764e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000013781c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009ce2a : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009c93d : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000007f124 : test byte ptr [rdi - 0x9fffffc], al ; ret
0x00000000001209c3 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000b624c : test byte ptr [rdi], 0x84 ; ret
0x00000000001020ba : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000024ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x00000000000ec3c9 : test byte ptr [rdi], 0x95 ; ret 0x3145
0x000000000005feba : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000077412 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077422 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a5af8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000009546c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000095454 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ed5f1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000002de84 : test byte ptr [rdx + 0x200], al ; ret
0x00000000001af9bc : test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000198184 : test byte ptr [rdx + 1], dl ; add byte ptr [rax + rcx], al ; hlt ; call rsp
0x000000000019a3dc : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax - 6], al ; call rsp
0x000000000007d9be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x00000000000c3c21 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00000000001983d8 : test byte ptr [rdx - 0xb], al ; jmp rsp
0x000000000019a264 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; xchg eax, esp ; leave ; stc ; call rsp
0x00000000001ab1bc : test byte ptr [rdx], al ; add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00000000000662ca : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001335dc : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x000000000010fff4 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00000000000f031e : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008adad : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000001b1dbc : test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000009c949 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x0000000000032e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008abed : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000001aedbc : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000343b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000019a600 : test byte ptr [rsi], bh ; cli ; jmp rsp
0x000000000002b95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001acdbc : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd59 ; hlt ; call qword ptr [rcx]
0x000000000019a0cc : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xchg ecx, r15d ; call rsp
0x000000000012193e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000000aa032 : test ch, 0xf0 ; je 0xaa02b ; movzx eax, cl ; pop rbx ; ret
0x00000000000bce3f : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019b739 : test ch, al ; call qword ptr [rax]
0x000000000019b751 : test ch, al ; jmp qword ptr [rcx]
0x000000000012d758 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000110857 : test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db9ea : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000019aae0 : test cl, cl ; cli ; jmp rsp
0x0000000000125a9b : test cl, cl ; jne 0x1259ec ; ret
0x000000000009df78 : test cl, cl ; jne 0x9df6d ; ret
0x000000000009e0b7 : test cl, cl ; jne 0x9e0ae ; xor eax, eax ; ret
0x00000000000a95af : test cl, cl ; jne 0xa95a4 ; ret
0x00000000000a965f : test cl, cl ; jne 0xa9654 ; ret
0x00000000000a991f : test cl, cl ; jne 0xa9918 ; sub rax, 1 ; ret
0x00000000000aa05a : test dh, 0xf0 ; je 0xaa029 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aa05a : test dh, 0xf0 ; je 0xaa02b ; movzx eax, dl ; pop rbx ; ret
0x0000000000124adc : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000006f0c4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000187b6d : test dh, bl ; call qword ptr [rsi]
0x0000000000187b49 : test dh, bl ; jmp rdx
0x00000000000c0d4d : test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009e170 : test dh, dh ; jne 0x9e167 ; mov qword ptr [rdx], rcx ; ret
0x0000000000023b85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000016fd74 : test dl, 0x40 ; jne 0x16fd39 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016fda2 : test dl, 4 ; jne 0x16fd39 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000bccbb : test dl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000081635 : test dl, dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000033bd2 : test dl, dl ; jne 0x33bb4 ; ret
0x000000000009df34 : test dl, dl ; jne 0x9df2d ; ret
0x00000000000a97cf : test dl, dl ; jne 0xa97c8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000d0a1e : test dl, dl ; jne 0xd0a06 ; ret
0x000000000008ec49 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a5e2b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a733b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a723b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000bf500 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x000000000006960e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x000000000005c8d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x000000000005cd93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x000000000006f0c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000001973ad : test dword ptr [rax], 0xef1f9400 ; jmp rsp
0x00000000001aa685 : test dword ptr [rax], 0xf22c4800 ; jmp rcx
0x00000000000d6bb9 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000852a3 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000055b89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000084997 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000006589a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000084996 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000093c1f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009e4de : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000aaf60 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ab888 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000167fe8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000167fc8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000167ee0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000138f6c : test dword ptr [rbx + 5], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a7430 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016e6f7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016eb46 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000e3a14 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000009e448 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000003b4fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008df2a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008e960 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000167cea : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016e6cd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5a12 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016e5dd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e4ed : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aafa7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000171c27 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000aaf77 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000016808a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000037b7e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000005d532 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000f1552 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000080ed2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000008eb4a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000a5b77 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5b57 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000035f23 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x0000000000093a35 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000036106 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000a5d11 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a7119 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000016fa42 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e412 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000102a5d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000003b9cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000167fa7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000ab92d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001715b2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5b35 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a5b15 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a5a2d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000093d1e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000d6ba3 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000016e918 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00000000000cc823 : test eax, 0x39fffffe ; ret
0x0000000000137733 : test eax, 0x480028b8 ; add esp, 8 ; ret
0x0000000000116fc7 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x0000000000103bfb : test eax, 0x49fff1bc ; mov edi, dword ptr [rsi] ; call rbx
0x00000000001a5845 : test eax, 0x4e880000 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a587d : test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x00000000001968b5 : test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x000000000012ad93 : test eax, 0x5b0029cf ; ret
0x0000000000184500 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000158446 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034c58 : test eax, 0x7fffff ; je 0x34c51 ; ret
0x00000000000659cf : test eax, 0x83000000 ; ret 0x8308
0x00000000000608fc : test eax, 0x89000007 ; ret 0x348
0x0000000000094eaf : test eax, 0x8948fff8 ; ret
0x000000000019557d : test eax, 0xa950fffc ; cld ; jmp rax
0x00000000001944cd : test eax, 0xb59dfffd ; std ; call rcx
0x00000000001880a5 : test eax, 0xbc2dfff3 ; call qword ptr [rax]
0x0000000000189916 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000001b58a5 : test eax, 0xe2080001 ; sti ; call rsi
0x00000000001053df : test eax, eax ; cmove eax, edx ; ret
0x000000000003a6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000010482c : test eax, eax ; je 0x1048d0 ; call rax
0x00000000001049a3 : test eax, eax ; je 0x104aa8 ; call rax
0x0000000000114988 : test eax, eax ; je 0x114994 ; ret
0x0000000000114c80 : test eax, eax ; je 0x114cb4 ; call rax
0x0000000000116aaa : test eax, eax ; je 0x116ac0 ; add rsp, 8 ; ret
0x000000000011eeb5 : test eax, eax ; je 0x11eec5 ; mov rdi, rbx ; call rax
0x000000000011f1ad : test eax, eax ; je 0x11f1bd ; mov rdi, rbx ; call rax
0x0000000000127750 : test eax, eax ; je 0x12775c ; ret
0x000000000012a451 : test eax, eax ; je 0x12a43f ; xor eax, eax ; pop rbx ; ret
0x000000000012ac91 : test eax, eax ; je 0x12aca1 ; mov rdi, rsp ; call rax
0x000000000012ad7c : test eax, eax ; je 0x12ad8c ; mov rdi, rsp ; call rax
0x000000000012b632 : test eax, eax ; je 0x12b642 ; mov rdi, rbp ; call rax
0x000000000012b9b6 : test eax, eax ; je 0x12b9c4 ; ret
0x000000000012c6c3 : test eax, eax ; je 0x12c6d3 ; mov rdi, r14 ; call rax
0x000000000012cc41 : test eax, eax ; je 0x12cc56 ; xor eax, eax ; ret
0x0000000000132058 : test eax, eax ; je 0x132068 ; mov rdi, r12 ; call rax
0x0000000000132239 : test eax, eax ; je 0x13224b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133513 : test eax, eax ; je 0x133523 ; mov rdi, r13 ; call rax
0x0000000000133706 : test eax, eax ; je 0x133716 ; mov rdi, rbp ; call rax
0x0000000000133926 : test eax, eax ; je 0x133936 ; mov rdi, rbp ; call rax
0x000000000013441d : test eax, eax ; je 0x13442f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134ac9 : test eax, eax ; je 0x134ad9 ; mov rdi, r12 ; call rax
0x0000000000134e3d : test eax, eax ; je 0x134e4f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001376c8 : test eax, eax ; je 0x13765a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013764d : test eax, eax ; je 0x13765d ; pop rbx ; ret
0x0000000000137aff : test eax, eax ; je 0x137b18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001383b9 : test eax, eax ; je 0x1383cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138ad2 : test eax, eax ; je 0x138ae4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013d186 : test eax, eax ; je 0x13d196 ; xor eax, eax ; ret
0x0000000000144e53 : test eax, eax ; je 0x144e5f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145e38 : test eax, eax ; je 0x145e44 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017338c : test eax, eax ; je 0x17339b ; call rax
0x000000000002b023 : test eax, eax ; je 0x2b02d ; call rax
0x000000000002c379 : test eax, eax ; je 0x2c383 ; call rax
0x000000000007848d : test eax, eax ; je 0x7849d ; pop rbx ; ret
0x000000000007e072 : test eax, eax ; je 0x7e07c ; call rax
0x00000000000849b9 : test eax, eax ; je 0x849c3 ; call rax
0x000000000008a970 : test eax, eax ; je 0x8a988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c69de : test eax, eax ; je 0xc6a00 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cb7ef : test eax, eax ; je 0xcb7f9 ; call rax
0x00000000000cb9d1 : test eax, eax ; je 0xcb9de ; call rax
0x00000000000fc7ec : test eax, eax ; je 0xfc7f7 ; ret
0x00000000000fe661 : test eax, eax ; je 0xfe670 ; mov qword ptr [rax], rdx ; ret
0x00000000001067f2 : test eax, eax ; jl 0x10683b ; je 0x1067ff ; ret
0x0000000000113ec6 : test eax, eax ; jne 0x113ed9 ; mov eax, 1 ; ret
0x0000000000113ef6 : test eax, eax ; jne 0x113f06 ; xor eax, eax ; ret
0x0000000000113f26 : test eax, eax ; jne 0x113f36 ; xor eax, eax ; ret
0x0000000000113f56 : test eax, eax ; jne 0x113f66 ; xor eax, eax ; ret
0x0000000000113f86 : test eax, eax ; jne 0x113f96 ; xor eax, eax ; ret
0x0000000000113fb6 : test eax, eax ; jne 0x113fc6 ; xor eax, eax ; ret
0x0000000000113fe6 : test eax, eax ; jne 0x113ff6 ; xor eax, eax ; ret
0x0000000000114016 : test eax, eax ; jne 0x114026 ; xor eax, eax ; ret
0x0000000000114046 : test eax, eax ; jne 0x114056 ; xor eax, eax ; ret
0x0000000000114076 : test eax, eax ; jne 0x114086 ; xor eax, eax ; ret
0x00000000001140a6 : test eax, eax ; jne 0x1140b6 ; xor eax, eax ; ret
0x00000000001140d6 : test eax, eax ; jne 0x1140e6 ; xor eax, eax ; ret
0x0000000000114106 : test eax, eax ; jne 0x114116 ; xor eax, eax ; ret
0x0000000000114136 : test eax, eax ; jne 0x114146 ; xor eax, eax ; ret
0x0000000000114166 : test eax, eax ; jne 0x114176 ; xor eax, eax ; ret
0x0000000000114196 : test eax, eax ; jne 0x1141a6 ; xor eax, eax ; ret
0x00000000001141c6 : test eax, eax ; jne 0x1141d6 ; xor eax, eax ; ret
0x00000000001141f6 : test eax, eax ; jne 0x114206 ; xor eax, eax ; ret
0x0000000000114226 : test eax, eax ; jne 0x114236 ; xor eax, eax ; ret
0x0000000000114256 : test eax, eax ; jne 0x114266 ; xor eax, eax ; ret
0x0000000000114286 : test eax, eax ; jne 0x114296 ; xor eax, eax ; ret
0x00000000001142e6 : test eax, eax ; jne 0x1142f6 ; xor eax, eax ; ret
0x0000000000114316 : test eax, eax ; jne 0x114326 ; xor eax, eax ; ret
0x0000000000114346 : test eax, eax ; jne 0x114356 ; xor eax, eax ; ret
0x0000000000114376 : test eax, eax ; jne 0x114386 ; xor eax, eax ; ret
0x00000000001143a6 : test eax, eax ; jne 0x1143b6 ; xor eax, eax ; ret
0x00000000001143d6 : test eax, eax ; jne 0x1143e6 ; xor eax, eax ; ret
0x0000000000114406 : test eax, eax ; jne 0x114416 ; xor eax, eax ; ret
0x0000000000114436 : test eax, eax ; jne 0x114446 ; xor eax, eax ; ret
0x0000000000114466 : test eax, eax ; jne 0x114476 ; xor eax, eax ; ret
0x00000000001144b0 : test eax, eax ; jne 0x1144ab ; pop rdx ; pop r10 ; ret
0x00000000001145a3 : test eax, eax ; jne 0x1145b5 ; ret
0x0000000000114945 : test eax, eax ; jne 0x1148e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000127b8a : test eax, eax ; jne 0x127b94 ; ret
0x0000000000132456 : test eax, eax ; jne 0x132464 ; ret
0x0000000000138335 : test eax, eax ; jne 0x138325 ; pop rbx ; ret
0x00000000001385b6 : test eax, eax ; jne 0x1385c4 ; ret
0x00000000001402ba : test eax, eax ; jne 0x1402cf ; xor eax, eax ; pop rbx ; ret
0x00000000001437c6 : test eax, eax ; jne 0x1437d6 ; xor eax, eax ; ret
0x00000000001437f6 : test eax, eax ; jne 0x143806 ; xor eax, eax ; ret
0x0000000000143826 : test eax, eax ; jne 0x143836 ; xor eax, eax ; ret
0x0000000000143856 : test eax, eax ; jne 0x143866 ; xor eax, eax ; ret
0x0000000000143886 : test eax, eax ; jne 0x143896 ; xor eax, eax ; ret
0x00000000001438b6 : test eax, eax ; jne 0x1438c6 ; xor eax, eax ; ret
0x00000000001738a6 : test eax, eax ; jne 0x1738b5 ; ret
0x0000000000035306 : test eax, eax ; jne 0x35315 ; ret
0x000000000006acbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c844 : test eax, eax ; jne 0x7c83d ; ret
0x000000000007d8d5 : test eax, eax ; jne 0x7d90a ; xor edi, edi ; call qword ptr [r15]
0x0000000000088a1f : test eax, eax ; jne 0x88a15 ; ret
0x000000000008cc5c : test eax, eax ; jne 0x8cc26 ; add rsp, 8 ; ret
0x000000000008cc7f : test eax, eax ; jne 0x8cc98 ; add rsp, 8 ; ret
0x000000000008df67 : test eax, eax ; jne 0x8dfc7 ; xor rax, rax ; ret
0x000000000009e518 : test eax, eax ; jne 0x9e596 ; xor eax, eax ; ret
0x00000000000aba71 : test eax, eax ; jne 0xaba45 ; ret
0x00000000000abb2a : test eax, eax ; jne 0xabb26 ; xor eax, eax ; ret
0x00000000000faaed : test eax, eax ; jne 0xfaa98 ; mov edi, ebp ; call 0xf6d08
0x00000000000fd50f : test eax, eax ; jne 0xfd4e7 ; xor eax, eax ; pop rbx ; ret
0x00000000000fd6d0 : test eax, eax ; jne 0xfd6a7 ; xor eax, eax ; pop rbx ; ret
0x0000000000075adb : test eax, eax ; js 0x75aed ; ret
0x0000000000084c66 : test eax, eax ; js 0x84c75 ; ret
0x00000000000ab49d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xab471 ; ret
0x000000000012a406 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000022d7a : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3a05 : test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000ae025 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae03f
0x00000000000b0946 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb095f
0x00000000000b30fd : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb311f
0x000000000008de90 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000083f07 : test ebp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007815e : test ebx, ebx ; jne 0x78178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abb86 : test ebx, ebx ; jne 0xabb68 ; mov rax, rdi ; ret
0x0000000000173984 : test ebx, ebx ; mov rdx, rbx ; jne 0x173981 ; pop rbx ; ret
0x000000000016fd62 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000016fd6f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002b394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x000000000006b458 : test ecx, ecx ; je 0x6b465 ; ret
0x00000000000aba5b : test ecx, ecx ; jne 0xaba55 ; ret
0x00000000000aced9 : test ecx, ecx ; jne 0xace98 ; mov rax, rdx ; ret
0x00000000000aa263 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaa25f ; ret
0x0000000000194381 : test edi, ebx ; jmp qword ptr [rax + 0x20fffb86]
0x000000000013365d : test edi, edi ; je 0x133674 ; call 0x1f8ae
0x0000000000086cf0 : test edi, edi ; je 0x86d09 ; mov eax, 0x16 ; ret
0x000000000011f191 : test edi, edi ; jne 0x11f185 ; pop rbx ; ret
0x000000000017368b : test edi, edi ; jne 0x17367f ; pop rbx ; ret
0x0000000000118842 : test edi, edi ; js 0x118859 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000019526d : test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00000000001959e1 : test edi, esp ; call rax
0x00000000001950ad : test edi, esp ; call rsi
0x00000000001950a9 : test edi, esp ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x000000000012d250 : test edx, edx ; je 0x12d260 ; mov rdi, rbp ; call rdx
0x0000000000173274 : test edx, edx ; je 0x17327e ; call rdx
0x000000000007781a : test edx, edx ; je 0x77831 ; mov eax, 0xffffffff ; ret
0x0000000000077b9a : test edx, edx ; je 0x77bb1 ; mov eax, 0xffffffff ; ret
0x000000000008aba2 : test edx, edx ; je 0x8abb0 ; bsf eax, edx ; ret
0x000000000008aba2 : test edx, edx ; je 0x8abb1 ; bsf eax, edx ; ret
0x000000000008ac4b : test edx, edx ; je 0x8ac67 ; bsf rax, rdx ; ret
0x000000000008ac4b : test edx, edx ; je 0x8ac68 ; bsf rax, rdx ; ret
0x000000000008ae1a : test edx, edx ; je 0x8ae47 ; bsf rax, rdx ; ret
0x000000000008ae1a : test edx, edx ; je 0x8ae48 ; bsf rax, rdx ; ret
0x00000000000cb940 : test edx, edx ; je 0xcb94d ; call rdx
0x00000000001147ed : test edx, edx ; jne 0x1147e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000013b890 : test edx, edx ; jne 0x13b8a9 ; mov eax, 1 ; ret
0x000000000013b8d0 : test edx, edx ; jne 0x13b8e9 ; mov eax, 1 ; ret
0x0000000000071bff : test edx, edx ; jne 0x71bf5 ; ret
0x000000000007a393 : test edx, edx ; jne 0x7a3a4 ; ret
0x000000000007af3f : test edx, edx ; jne 0x7af35 ; ret
0x0000000000088ac9 : test edx, edx ; jne 0x88ac5 ; ret
0x00000000000acf1a : test edx, edx ; jne 0xacf15 ; ret
0x000000000002048e : test edx, edx ; jns 0x20382 ; jmp 0x20463
0x00000000000abd9f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xabd9f ; ret
0x00000000000ba69f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a0 ; ret
0x000000000003626a : test edx, edx ; sete al ; ret
0x000000000016fd55 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000085a93 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001b07b1 : test esi, ebp ; jmp rax
0x0000000000187b3d : test esi, ebx ; call qword ptr [rax]
0x000000000008ad11 : test esi, esi ; jne 0x8ad20 ; xor rax, rax ; ret
0x0000000000095f3e : test esi, esi ; jne 0x95f51 ; jmp 0x95f0b
0x00000000001aa684 : test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x0000000000036105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000abb85 : test r11d, r11d ; jne 0xabb69 ; mov rax, rdi ; ret
0x00000000001950ac : test r15d, esp ; call rsi
0x000000000009dfd1 : test r8b, r8b ; jne 0x9dfb6 ; ret
0x000000000009e10f : test r8b, r8b ; jne 0x9e0f7 ; xor eax, eax ; ret
0x0000000000144e52 : test r8d, r8d ; je 0x144e60 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145e37 : test r8d, r8d ; je 0x145e45 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000aba70 : test r8d, r8d ; jne 0xaba46 ; ret
0x00000000000aced8 : test r9d, r9d ; jne 0xace99 ; mov rax, rdx ; ret
0x000000000010482b : test rax, rax ; je 0x1048d1 ; call rax
0x00000000001049a2 : test rax, rax ; je 0x104aa9 ; call rax
0x0000000000114987 : test rax, rax ; je 0x114995 ; ret
0x0000000000114c7f : test rax, rax ; je 0x114cb5 ; call rax
0x0000000000116aa9 : test rax, rax ; je 0x116ac1 ; add rsp, 8 ; ret
0x000000000011eeb4 : test rax, rax ; je 0x11eec6 ; mov rdi, rbx ; call rax
0x000000000011f1ac : test rax, rax ; je 0x11f1be ; mov rdi, rbx ; call rax
0x000000000012a450 : test rax, rax ; je 0x12a440 ; xor eax, eax ; pop rbx ; ret
0x000000000012ac90 : test rax, rax ; je 0x12aca2 ; mov rdi, rsp ; call rax
0x000000000012ad7b : test rax, rax ; je 0x12ad8d ; mov rdi, rsp ; call rax
0x000000000012b631 : test rax, rax ; je 0x12b643 ; mov rdi, rbp ; call rax
0x000000000012c6c2 : test rax, rax ; je 0x12c6d4 ; mov rdi, r14 ; call rax
0x0000000000132057 : test rax, rax ; je 0x132069 ; mov rdi, r12 ; call rax
0x0000000000132238 : test rax, rax ; je 0x13224c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133512 : test rax, rax ; je 0x133524 ; mov rdi, r13 ; call rax
0x0000000000133705 : test rax, rax ; je 0x133717 ; mov rdi, rbp ; call rax
0x0000000000133925 : test rax, rax ; je 0x133937 ; mov rdi, rbp ; call rax
0x000000000013441c : test rax, rax ; je 0x134430 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134ac8 : test rax, rax ; je 0x134ada ; mov rdi, r12 ; call rax
0x0000000000134e3c : test rax, rax ; je 0x134e50 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013764c : test rax, rax ; je 0x13765e ; pop rbx ; ret
0x00000000001383b8 : test rax, rax ; je 0x1383cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138ad1 : test rax, rax ; je 0x138ae5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000017338b : test rax, rax ; je 0x17339c ; call rax
0x000000000002b022 : test rax, rax ; je 0x2b02e ; call rax
0x000000000002c378 : test rax, rax ; je 0x2c384 ; call rax
0x000000000007848c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x000000000007e071 : test rax, rax ; je 0x7e07d ; call rax
0x00000000000849b8 : test rax, rax ; je 0x849c4 ; call rax
0x000000000008a96f : test rax, rax ; je 0x8a989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb7ee : test rax, rax ; je 0xcb7fa ; call rax
0x00000000000cb9d0 : test rax, rax ; je 0xcb9df ; call rax
0x00000000000fc7eb : test rax, rax ; je 0xfc7f8 ; ret
0x00000000000fe660 : test rax, rax ; je 0xfe671 ; mov qword ptr [rax], rdx ; ret
0x00000000001067f1 : test rax, rax ; jl 0x10683c ; je 0x106800 ; ret
0x0000000000138334 : test rax, rax ; jne 0x138326 ; pop rbx ; ret
0x000000000007c843 : test rax, rax ; jne 0x7c83e ; ret
0x000000000007d8d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x0000000000088a1e : test rax, rax ; jne 0x88a16 ; ret
0x00000000000fd50e : test rax, rax ; jne 0xfd4e8 ; xor eax, eax ; pop rbx ; ret
0x00000000000fd6cf : test rax, rax ; jne 0xfd6a8 ; xor eax, eax ; pop rbx ; ret
0x000000000007815d : test rbx, rbx ; jne 0x78179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x000000000013365c : test rdi, rdi ; je 0x133675 ; call 0x1f8af
0x000000000011f190 : test rdi, rdi ; jne 0x11f186 ; pop rbx ; ret
0x000000000011f18f : test rdi, rdi ; jne 0x11f187 ; pop rbx ; ret
0x000000000017368a : test rdi, rdi ; jne 0x173680 ; pop rbx ; ret
0x000000000012d24f : test rdx, rdx ; je 0x12d261 ; mov rdi, rbp ; call rdx
0x0000000000173273 : test rdx, rdx ; je 0x17327f ; call rdx
0x000000000008ac4a : test rdx, rdx ; je 0x8ac68 ; bsf rax, rdx ; ret
0x000000000008ac4a : test rdx, rdx ; je 0x8ac69 ; bsf rax, rdx ; ret
0x000000000008ae19 : test rdx, rdx ; je 0x8ae48 ; bsf rax, rdx ; ret
0x000000000008ae19 : test rdx, rdx ; je 0x8ae49 ; bsf rax, rdx ; ret
0x00000000000cb93f : test rdx, rdx ; je 0xcb94e ; call rdx
0x0000000000071bfe : test rdx, rdx ; jne 0x71bf6 ; ret
0x000000000007a392 : test rdx, rdx ; jne 0x7a3a5 ; ret
0x000000000007af3e : test rdx, rdx ; jne 0x7af36 ; ret
0x0000000000088ac8 : test rdx, rdx ; jne 0x88ac6 ; ret
0x000000000008ad10 : test rsi, rsi ; jne 0x8ad21 ; xor rax, rax ; ret
0x0000000000095f3d : test rsi, rsi ; jne 0x95f52 ; jmp 0x95f0c
0x000000000009e16f : test sil, sil ; jne 0x9e168 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000079945 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000009efca : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000014d21a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014d150 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014cf19 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000000a9a25 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014d05f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014ce83 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014cee6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000000a9a29 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009efb6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009ef9d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000a9a1b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000a9a1f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000a9a34 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000000a9a38 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000009f2d3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009f16c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009ef6e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000009ef32 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009f435 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a9bd8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000000a9b3b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000000a99da : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000149e81 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000329d5 : vpsubsb xmm10, xmm15, xmmword ptr [rcx + rax*4 + 0x29480005] ; ret
0x0000000000098614 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x0000000000171ef9 : vzeroupper ; ret
0x00000000001966a5 : wait ; add byte ptr [rax], al ; jmp 0x1966b1
0x00000000001a4a5d : wait ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00000000001ad2e1 : wait ; hlt ; jmp qword ptr [rcx]
0x0000000000173d09 : wait ; mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x0000000000103d09 : wait ; mov ebx, 0x8b49fff1 ; jge 0x103d19 ; call rbx
0x00000000000a91ed : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a926f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9371 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bd4 : xabort -0xd ; ret
0x0000000000002bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x0000000000195121 : xchg ah, bh ; call qword ptr [rdx]
0x0000000000195065 : xchg ah, bh ; call rax
0x0000000000195061 : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00000000001950a1 : xchg ah, bh ; jmp qword ptr [rsi]
0x0000000000195261 : xchg ah, bh ; jmp rax
0x0000000000144c5f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145483 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146dcf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014484f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000145573 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145393 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014435b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001977d1 : xchg al, dh ; jmp rsp
0x0000000000144b6b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad7c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a59c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014a98c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a1ac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ccad : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000189420 : xchg bl, al ; cmc ; call rdx
0x0000000000194385 : xchg bl, bh ; jmp qword ptr [rax]
0x000000000014b7b1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014c9b1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c0b1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c3b1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014baa9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145ddb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000014792f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014710f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001445df : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001468ef : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014491f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145933 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000cf72c : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000e7547 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x0000000000144c3b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a34b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144d0b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014744f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001450c3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000146c2f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014640f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001475ef : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000144abf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145b13 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001452a3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001442af : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001a65f1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000002ebba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000145cf3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000082742 : xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001446af : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014a83c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a05c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b16c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b8f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000145c03 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014437f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014674f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144421 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145545 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145635 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145455 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014477f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014bd56 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146885 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147585 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc56 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c356 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c056 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001470a5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a73d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ba4e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b06d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001449ef : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001451b3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001490df : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148eff : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001498d7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001487f7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001496f7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019d809 : xchg cl, ch ; jmp qword ptr [rcx]
0x0000000000195e81 : xchg cl, ch ; jmp rsp
0x00000000001478c5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146bc5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001466e5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001473e5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a88d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000025b1 : xchg dh, ch ; ret 0x88ad
0x000000000014a0ad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144445 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000103f7a : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000145365 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145185 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145275 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145095 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000b8ff3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00000000000d3404 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000007f125 : xchg dword ptr [rax + rax], eax ; add dh, dh ; ret
0x000000000002f50f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000002691b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000624e9 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00000000000aba6f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005ef3b : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x000000000005744d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000681a5 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x00000000000fe745 : xchg dword ptr [rcx + 0x2c], edi ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000001821cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000857dc : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00000000000f5c11 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000608fb : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x00000000000659ce : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x0000000000067897 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x000000000007ee04 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x00000000001144ae : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x1144ad ; pop rdx ; pop r10 ; ret
0x00000000000f1a3b : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x000000000007edc1 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000060d6b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x00000000000671db : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x000000000018236b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000148438 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000072a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007638f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000074f12 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000000962d4 : xchg eax, ebp ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000195a0d : xchg eax, ebp ; cld ; call qword ptr [rax]
0x000000000002e197 : xchg eax, ebp ; cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000010200f : xchg eax, ebp ; fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x10201f ; call rbx
0x00000000001ad141 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001a8ec9 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x000000000007bf3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x000000000011c272 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000fd907 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; sub al, 0 ; mov rdx, rax ; jmp 0xfd8a5
0x00000000000020d3 : xchg eax, ebp ; ret
0x00000000000b3103 : xchg eax, ebp ; ret 0x11eb
0x00000000000b12c4 : xchg eax, ebp ; ret 0x2041
0x00000000000afa15 : xchg eax, ebp ; ret 0x294c
0x0000000000126c58 : xchg eax, ebp ; ret 0x2c3c
0x00000000000fed7b : xchg eax, ebp ; ret 0x2f3c
0x00000000000ec3cb : xchg eax, ebp ; ret 0x3145
0x00000000000bb49c : xchg eax, ebp ; ret 0x3840
0x000000000009dfb5 : xchg eax, ebp ; ret 0x3941
0x000000000006d007 : xchg eax, ebp ; ret 0x5389
0x0000000000035de5 : xchg eax, ebp ; ret 0x5489
0x000000000012a015 : xchg eax, ebp ; ret 0x8041
0x00000000000d8f37 : xchg eax, ebp ; ret 0x8341
0x0000000000081ad1 : xchg eax, ebp ; ret 0x8349
0x00000000000969fe : xchg eax, ebp ; ret 0x8445
0x00000000000dfb3f : xchg eax, ebp ; ret 0x8488
0x0000000000047656 : xchg eax, ebp ; ret 0x854d
0x00000000000b99ce : xchg eax, ebp ; ret 0x8b4c
0x00000000000b094c : xchg eax, ebp ; ret 0x8eb
0x000000000003dad6 : xchg eax, ebp ; ret 0x941
0x0000000000030b17 : xchg eax, ebp ; ret 0x953d
0x00000000000ae02b : xchg eax, ebp ; ret 0x9eb
0x00000000000b9b81 : xchg eax, ebp ; ret 0xa8e9
0x0000000000097db9 : xchg eax, ebp ; ret 0xb60f
0x00000000000fedd4 : xchg eax, ebp ; ret 0xc084
0x0000000000047541 : xchg eax, ebp ; ret 0xc221
0x000000000003c3da : xchg eax, ebp ; ret 0xd348
0x0000000000036941 : xchg eax, ebp ; ret 0xd521
0x00000000000b9a2c : xchg eax, ebp ; ret 0xd721
0x0000000000045c3f : xchg eax, ebp ; ret 0xdaf7
0x0000000000123bf5 : xchg eax, ebp ; ret 0xe083
0x00000000000ac701 : xchg eax, ebp ; ret 0xe883
0x00000000000bc25f : xchg eax, ebp ; ret 0xf748
0x0000000000126c7f : xchg eax, ebp ; ret 0xf980
0x00000000000ac9ee : xchg eax, ebp ; ret 0xf983
0x0000000000127030 : xchg eax, ebp ; ret 0xfb80
0x00000000000d900d : xchg eax, ebp ; ret 0xfb83
0x000000000013626d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d6 ; ret
0x00000000000fec14 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e9dfc : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000e9dde : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000013616d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007305d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000061b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001ba741 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x0000000000002b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007b702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000080c47 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000016d860 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003959 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000195a45 : xchg eax, ebx ; cld ; call rax
0x0000000000189409 : xchg eax, ebx ; cmc ; jmp qword ptr [rcx]
0x00000000001acee9 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000011c57d : xchg eax, ebx ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000a503c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000150502 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000100e39 : xchg eax, ebx ; push rbx ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000099b4a : xchg eax, ebx ; ret
0x00000000000b7a7e : xchg eax, ebx ; ret 0x14c
0x0000000000037380 : xchg eax, ebx ; ret 0x3948
0x0000000000037ecd : xchg eax, ebx ; ret 0x3949
0x0000000000074cef : xchg eax, ebx ; ret 0x840
0x00000000000383a1 : xchg eax, ebx ; ret 0x8548
0x0000000000072494 : xchg eax, ebx ; ret 0xd108
0x0000000000173611 : xchg eax, ebx ; ret 0xffea
0x000000000012d6be : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000083a58 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000063e48 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00000000000e06b5 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x0000000000195a01 : xchg eax, ecx ; cld ; call rax
0x00000000001a8629 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001ace11 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001ace29 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x0000000000198281 : xchg eax, ecx ; hlt ; jmp rsp
0x00000000001944e0 : xchg eax, ecx ; mov ch, 0xfd ; call rcx
0x00000000001479d1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000065d5b : xchg eax, ecx ; mov rdi, r15 ; call 0x71fd6
0x00000000001b4fef : xchg eax, ecx ; ret
0x0000000000106be3 : xchg eax, ecx ; ret 0x2b
0x00000000001460ff : xchg eax, ecx ; sub eax, edx ; ret
0x00000000001203e3 : xchg eax, ecx ; sub r8b, byte ptr [rax] ; ret
0x0000000000024aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000001a465d : xchg eax, edi ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000f5cdc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000313b4 : xchg eax, edi ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x0000000000138d75 : xchg eax, edi ; jmp 0xffffffffc29d8d7c
0x0000000000114948 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000045f27 : xchg eax, edi ; ret 0x870f
0x00000000000d1f2d : xchg eax, edi ; ret 0xd008
0x00000000000cccee : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000108e16 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f7f59 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000d7a16 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000001ba4a9 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x0000000000109754 : xchg eax, edi ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000182818 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000094a8a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000061ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000001a417d : xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x000000000007daba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006da0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001840dd : xchg eax, edx ; jae 0x1840ba ; push rsi ; pop rdx ; je 0x1840af ; ret 0xacfc
0x00000000000780ea : xchg eax, edx ; mov edx, eax ; jmp 0x78082
0x0000000000112482 : xchg eax, edx ; or dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000001975e9 : xchg eax, edx ; out dx, eax ; jmp rsp
0x000000000019584c : xchg eax, edx ; popfq ; cld ; jmp qword ptr [rdx]
0x000000000005994a : xchg eax, edx ; ret 0x12
0x000000000003cfc4 : xchg eax, edx ; ret 0x8348
0x00000000000f7f3e : xchg eax, edx ; ret 0x970f
0x000000000003d325 : xchg eax, edx ; ret 0xb60f
0x00000000000cccf1 : xchg eax, edx ; ret 0xd029
0x00000000000d7a19 : xchg eax, edx ; ret 0xd138
0x0000000000149a4d : xchg eax, edx ; ret 0xf40
0x00000000001821cf : xchg eax, edx ; ret 0xf869
0x0000000000144e57 : xchg eax, edx ; sub eax, edx ; ret
0x000000000016db60 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001965ad : xchg eax, esi ; add byte ptr [rax], al ; adc al, 0x20 ; jmp 0x1965b9
0x0000000000159c43 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000025ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000198cd5 : xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00000000000ab0e6 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x0000000000189411 : xchg eax, esi ; cmc ; jmp qword ptr [rbx]
0x000000000016dc1d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195598 : xchg eax, esi ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x000000000016db7b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195a84 : xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00000000000d6753 : xchg eax, esi ; pop rbx ; ret
0x0000000000194bb4 : xchg eax, esi ; pop rsi ; cld ; jmp qword ptr [rsi]
0x0000000000033506 : xchg eax, esi ; ret
0x00000000000362cc : xchg eax, esi ; ret 0x394c
0x000000000008a7c4 : xchg eax, esi ; ret 0xc031
0x0000000000184a6c : xchg eax, esi ; ret 0xcd11
0x0000000000123047 : xchg eax, esi ; ret 0xfb83
0x000000000016dbcc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001950a0 : xchg eax, esi ; xchg ah, bh ; jmp qword ptr [rsi]
0x00000000001982d8 : xchg eax, esp ; adc al, 0xf5 ; call rsp
0x0000000000198708 : xchg eax, esp ; adc al, 0xf6 ; call rsp
0x0000000000196208 : xchg eax, esp ; adc ch, dl ; jmp rsp
0x000000000019c0cc : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d7 ; jmp qword ptr [rdi]
0x0000000000196148 : xchg eax, esp ; add al, 0xea ; call rsp
0x00000000000dfbe4 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001afecc : xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff48 ; cmc ; jmp qword ptr [rcx]
0x00000000000e50d6 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b46ac : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfbe2 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000071867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001998e0 : xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x0000000000195a09 : xchg eax, esp ; cld ; call rax
0x0000000000199d04 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x0000000000198408 : xchg eax, esp ; cmc ; jmp rsp
0x0000000000197e6c : xchg eax, esp ; cmp eax, 0x32b40001 ; jmp rsp
0x000000000019ab98 : xchg eax, esp ; fdivr st(2) ; jmp rsp
0x00000000001ad019 : xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x0000000000186374 : xchg eax, esp ; in eax, dx ; in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x0000000000195d40 : xchg eax, esp ; jg 0x195d2f ; jmp rsp
0x000000000019a268 : xchg eax, esp ; leave ; stc ; call rsp
0x0000000000196a64 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00000000001a67cc : xchg eax, esp ; mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x0000000000197619 : xchg eax, esp ; out dx, eax ; call rsp
0x0000000000195eac : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x0000000000199f38 : xchg eax, esp ; pop rax ; stc ; jmp rsp
0x00000000000d6721 : xchg eax, esp ; pop rbx ; ret
0x0000000000184c7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c10 ; ret 0x48f
0x0000000000019ed0 : xchg eax, esp ; ret
0x00000000001a71cc : xchg eax, esp ; ret 0
0x00000000000ec9c0 : xchg eax, esp ; ret 0x1589
0x00000000000b0b04 : xchg eax, esp ; ret 0x2041
0x00000000000b21dd : xchg eax, esp ; ret 0x294c
0x00000000000e21e9 : xchg eax, esp ; ret 0x2fe9
0x00000000000bb14d : xchg eax, esp ; ret 0x3840
0x000000000009e06e : xchg eax, esp ; ret 0x3941
0x0000000000124197 : xchg eax, esp ; ret 0x3945
0x00000000000e33df : xchg eax, esp ; ret 0x3ae9
0x0000000000136128 : xchg eax, esp ; ret 0x3d83
0x00000000000d81f3 : xchg eax, esp ; ret 0x4422
0x00000000000ed0bb : xchg eax, esp ; ret 0x5408
0x00000000000bb21a : xchg eax, esp ; ret 0x5438
0x0000000000059903 : xchg eax, esp ; ret 0x7f3c
0x0000000000080ebe : xchg eax, esp ; ret 0x82e9
0x0000000000046da9 : xchg eax, esp ; ret 0x8341
0x0000000000026ec5 : xchg eax, esp ; ret 0x8348
0x0000000000110c5d : xchg eax, esp ; ret 0x840
0x0000000000096bf7 : xchg eax, esp ; ret 0x8440
0x00000000000a9db5 : xchg eax, esp ; ret 0x8444
0x0000000000096826 : xchg eax, esp ; ret 0x8445
0x000000000011cb6c : xchg eax, esp ; ret 0x8545
0x00000000000e14cb : xchg eax, esp ; ret 0x854d
0x00000000000dffda : xchg eax, esp ; ret 0x8941
0x00000000000e1f15 : xchg eax, esp ; ret 0x8949
0x0000000000020777 : xchg eax, esp ; ret 0x8d48
0x0000000000126152 : xchg eax, esp ; ret 0x93c
0x000000000004c390 : xchg eax, esp ; ret 0x9522
0x00000000000e337b : xchg eax, esp ; ret 0x9848
0x000000000002f458 : xchg eax, esp ; ret 0xb60f
0x00000000000daf91 : xchg eax, esp ; ret 0xc031
0x000000000011ee15 : xchg eax, esp ; ret 0xc085
0x00000000000e431d : xchg eax, esp ; ret 0xc683
0x00000000000d907f : xchg eax, esp ; ret 0xd009
0x00000000000bb3b2 : xchg eax, esp ; ret 0xd021
0x0000000000046dbe : xchg eax, esp ; ret 0xd084
0x00000000000fde43 : xchg eax, esp ; ret 0xd108
0x000000000002086c : xchg eax, esp ; ret 0xd284
0x000000000009e26f : xchg eax, esp ; ret 0xd308
0x0000000000061a96 : xchg eax, esp ; ret 0xd309
0x00000000000dffd2 : xchg eax, esp ; ret 0xd609
0x000000000006ffbc : xchg eax, esp ; ret 0xdaf7
0x00000000000ebb1d : xchg eax, esp ; ret 0xf0e9
0x000000000008a848 : xchg eax, esp ; ret 0xf201
0x00000000000e32ef : xchg eax, esp ; ret 0xf44
0x000000000011cd52 : xchg eax, esp ; ret 0xf741
0x00000000000ae1d4 : xchg eax, esp ; ret 0xf883
0x00000000000d1f1c : xchg eax, esp ; ret 0xf983
0x00000000000523bf : xchg eax, esp ; ret 0xfa80
0x00000000000a9d17 : xchg eax, esp ; ret 0xfd83
0x00000000000a9d38 : xchg eax, esp ; ret 0xfe83
0x00000000001994ec : xchg eax, esp ; ret 1
0x00000000000ac1bc : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x0000000000094920 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f7d6f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000453b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013b769 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fde9a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000fde3e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000196e10 : xchg eax, esp ; sbb esi, ebp ; call rsp
0x00000000001a6f79 : xchg eax, esp ; sti ; call qword ptr [rax]
0x00000000001ba829 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00000000000e9ab4 : xchg eax, esp ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000019a3c4 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x0000000000188118 : xchg eax, esp ; test al, 0xf3 ; call rdi
0x00000000001131de : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000086aca : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001b0849 : xchg ebp, esi ; jmp rax
0x00000000001bb5b9 : xchg ebx, edi ; call rcx
0x00000000001abac9 : xchg ebx, esi ; call qword ptr [rsi]
0x0000000000187b15 : xchg ebx, esi ; jmp rdx
0x000000000019a0d1 : xchg ecx, edi ; call rsp
0x000000000019a0d0 : xchg ecx, r15d ; call rsp
0x0000000000100f3c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001014bc : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001052e1 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000103edb : xchg edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000047d65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x000000000019509d : xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x0000000000195a25 : xchg esp, edi ; call rax
0x00000000001951d9 : xchg esp, edi ; call rsp
0x00000000001951d5 : xchg esp, edi ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x0000000000195059 : xchg esp, edi ; jmp qword ptr [rax]
0x00000000000cd43f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001acbf1 : xchg esp, esi ; call qword ptr [rax]
0x00000000001acba9 : xchg esp, esi ; call qword ptr [rsi]
0x00000000001889c9 : xchg esp, esi ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00000000001951d8 : xchg esp, r15d ; call rsp
0x0000000000074f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000195064 : xchg spl, dil ; call rax
0x00000000000be435 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017f679 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001503c9 : xlatb ; add r9, r11 ; jmp r9
0x00000000000f35e9 : xlatb ; call 0x1f8ab
0x0000000000196c39 : xlatb ; in eax, dx ; inc esp ; ret 0
0x000000000010218e : xlatb ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x10219c ; call rbx
0x0000000000102173 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010219c : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102180 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10218e ; call rbx
0x00000000000fc242 : xlatb ; ja 0xfc274 ; ret
0x00000000001145b9 : xlatb ; jmp rax
0x0000000000183243 : xlatb ; jo 0x1832bf ; mov ebp, 0xfb67d10d ; ret
0x000000000004a772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x0000000000123386 : xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000056a9d : xlatb ; ret
0x00000000001846e6 : xlatb ; ret 0x4e27
0x0000000000003268 : xlatb ; ret 0x5a51
0x000000000008ca17 : xlatb ; ret 0x94c
0x000000000008dd8f : xlatb ; ret 0xc085
0x0000000000089040 : xlatb ; ret 0xc148
0x000000000009e67b : xlatb ; ret 0xf188
0x000000000008abc4 : xlatb ; ret 0xf66
0x0000000000095b21 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000009e516 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a54ae : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000016fd16 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009e474 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008a516 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008a3d6 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008a296 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008a156 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008a016 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000089ed6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000089d96 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000089c56 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000089b16 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000000899d6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000089896 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000089756 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000089616 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000894d6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000089396 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000016fd12 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008c9b5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008c9c6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001946b1 : xlatb ; sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00000000001946d1 : xlatb ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x0000000000035f68 : xlatb ; xor eax, eax ; ret
0x00000000000a4ca8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a4c3e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000194aa5 : xor ah, bh ; call qword ptr [rax]
0x0000000000194a45 : xor ah, bh ; call rax
0x000000000019471c : xor ah, bl ; sti ; jmp qword ptr [rax]
0x00000000000025e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x000000000013c121 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000d7b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000007cc19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cba6 : xor al, 0 ; add dword ptr [rip + 0x348bb5], 1 ; ret
0x000000000008102e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000080f44 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb15 : xor al, 0 ; ret
0x0000000000081169 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x00000000001821ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000095f3b : xor al, 0x24 ; test rsi, rsi ; jne 0x95f54 ; jmp 0x95f0e
0x00000000001ad66c : xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000000dd8c2 : xor al, 0x2b ; call 0x938c8
0x0000000000101348 : xor al, 0x2c ; add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x000000000019e66c : xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x0000000000035303 : xor al, 0x39 ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000002051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000009e59b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000019a858 : xor al, 0x66 ; cli ; call rsp
0x0000000000199ab0 : xor al, 0x69 ; clc ; call rsp
0x000000000019acc8 : xor al, 0x73 ; sti ; call rsp
0x00000000001a84e4 : xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000000aa0e1 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x0000000000197560 : xor al, 0x81 ; out dx, eax ; jmp rsp
0x00000000000e4da2 : xor al, 0x83 ; ret 0x4401
0x00000000000e8443 : xor al, 0x89 ; ret 0x4489
0x000000000003295d : xor al, 0x89 ; ret 0x5525
0x00000000000aa0a9 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x0000000000198280 : xor al, 0x91 ; hlt ; jmp rsp
0x0000000000197618 : xor al, 0x94 ; out dx, eax ; call rsp
0x00000000000c4724 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000c46b2 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00000000000d6a95 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd6a78 ; mov edx, eax ; jmp 0xd6a81
0x000000000006ca9f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x0000000000033410 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x00000000001a716c : xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00000000001994d4 : xor al, 0xc2 ; add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00000000001833aa : xor al, 0xd8 ; ret
0x00000000001a886c : xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x0000000000199d08 : xor al, 0xdb ; clc ; call rsp
0x00000000001994d8 : xor al, 0xe3 ; idiv edi ; ret 1
0x0000000000199528 : xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000000b3934 : xor al, 0xe9 ; ret 6
0x000000000019eb01 : xor al, 0xea ; jmp rax
0x00000000001a5631 : xor al, 0xee ; jmp qword ptr [rcx]
0x0000000000186e65 : xor al, 0xf0 ; jmp rax
0x00000000001aa06c : xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa08d ; call qword ptr [rdx]
0x00000000001ba26c : xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00000000001976c8 : xor al, 0xfb ; out dx, eax ; call rsp
0x0000000000195011 : xor al, 0xfc ; jmp qword ptr [rax + 0x20fffc35]
0x0000000000194a6d : xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000194a8d : xor al, 0xfc ; jmp rax
0x00000000001ae3c5 : xor al, 1 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae3ad : xor al, 1 ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae365 : xor al, 1 ; add byte ptr [rax - 0x15], bl ; hlt ; jmp rdx
0x00000000000aaf78 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000001ae395 : xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000004baaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019a4f5 : xor al, 2 ; add byte ptr [rdx], ah ; cli ; call rsp
0x00000000001bb76c : xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x000000000010697b : xor al, al ; or eax, edi ; ret
0x00000000000d5442 : xor al, byte ptr [rbx + rcx + 0x3d8d4800] ; ret
0x00000000001ae145 : xor al, byte ptr [rcx] ; add al, bl ; out 0xf4, al ; jmp qword ptr [rbx]
0x0000000000197cc5 : xor al, byte ptr [rcx] ; add byte ptr [rax + rdx*4], al ; jmp rsp
0x00000000001ae1a5 : xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x0000000000186e59 : xor al, dh ; jmp qword ptr [rax]
0x00000000000fa9b8 : xor ax, ax ; ret
0x0000000000194a69 : xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x0000000000194aa9 : xor bh, ah ; call qword ptr [rax]
0x0000000000194a49 : xor bh, ah ; call rax
0x0000000000195318 : xor bh, byte ptr [rsi - 4] ; jmp qword ptr [rdx + 0x22fffc7d]
0x00000000001112ba : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000008dfec : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000000bc25a : xor bl, byte ptr [rax - 0x6af0ffd0] ; ret 0xf748
0x000000000019fac0 : xor bpl, bl ; call qword ptr [rcx]
0x0000000000128318 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000ab06c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008dead : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000047bb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47c2d ; xor eax, eax ; ret
0x000000000012dcd2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x0000000000133812 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000110091 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000c3a3b : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f510f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000088f51 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009e576 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000012adc7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cf71 ; pop rbx ; ret
0x000000000012ad8f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cfa9 ; pop rbx ; ret
0x000000000012acd0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d068 ; pop rbx ; ret
0x00000000000a7b87 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047f48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00000000000bd894 : xor byte ptr [rax - 0x75], cl ; je 0xbd8c5 ; cmp byte ptr [rcx + 1], cl ; ret
0x0000000000047bb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x0000000000047f47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x0000000000088e7f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013b6fa : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000afa10 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd8f2d
0x00000000000b4eb8 : xor byte ptr [rax - 0x77], cl ; call 0x4ccde3d5
0x00000000000c7f59 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000ac9ad : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000134fc8 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000076ba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000306c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000cf0a6 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000e03cc : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000012dcd3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d662e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000128319 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000332f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001952c8 : xor byte ptr [rax - 4], bh ; jmp qword ptr [rax + 0x16fffc77]
0x0000000000194f58 : xor byte ptr [rax - 4], bl ; jmp qword ptr [rax + 0x20fffc57]
0x00000000000746ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000133813 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008cca8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002084e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039fca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000003a5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f6d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000aa105 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114c7b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x114cb9 ; call rax
0x000000000004d399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000bc4da : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bac31 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001947f0 : xor byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x0000000000072aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00000000000bdfb1 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfc8
0x00000000000a9407 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ab070 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000ab06f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007bc60 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000194500 : xor byte ptr [rbp - 0x482e0003], 0xfd ; call rcx
0x0000000000172d9b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000000849cc : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000120e4c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a473f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000e843e : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00000000000e843f : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x000000000008ebab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007bfce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000012ac9d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00000000001b05e0 : xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000194878 : xor byte ptr [rbx], al ; cld ; call qword ptr [rax]
0x00000000000ab06d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x000000000003ce9e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000051377 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010ebaf : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000e040e : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b8
0x00000000001942f0 : xor byte ptr [rcx - 5], cl ; call qword ptr [rax]
0x00000000000fb7dc : xor byte ptr [rcx], 0xc0 ; ret
0x00000000001adfed : xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], al ; hlt ; call qword ptr [rsi]
0x00000000001ae005 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000746ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000784b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006dcb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000668fa : xor byte ptr [rcx], dh ; imul cl ; ret
0x0000000000120e7b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000109aea : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000194790 : xor byte ptr [rdi - 0x3dff0005], bh ; sti ; call qword ptr [rax - 0x3d]
0x00000000001945d0 : xor byte ptr [rdi - 0x482e0003], dh ; std ; call rcx
0x00000000001954cc : xor byte ptr [rdi - 4], dh ; call rax
0x0000000000194a20 : xor byte ptr [rdi], ch ; cld ; call qword ptr [rax]
0x0000000000100f81 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000071cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000051342 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000f97ed : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x000000000008a846 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x000000000009514c : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001aa530 : xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001a5057 : xor byte ptr [rdx], al ; ret
0x00000000001a90f7 : xor byte ptr [rdx], al ; ret 0xe0a
0x00000000001a9de0 : xor byte ptr [rdx], cl ; call rsi
0x000000000016d90f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c97c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008deae : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000000ac88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x0000000000038fea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000000f587c : xor byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000001a2090 : xor byte ptr [rsi], ah ; in eax, dx ; call rdx
0x0000000000194274 : xor byte ptr [rsi], dl ; sti ; jmp qword ptr [rax]
0x0000000000197451 : xor ch, bh ; call rsp
0x000000000019fac1 : xor ch, bl ; call qword ptr [rcx]
0x000000000019469c : xor ch, bl ; sti ; call qword ptr [rax]
0x00000000000e4b10 : xor ch, byte ptr [rcx] ; ret
0x00000000000a9198 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a91ae : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a91d0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a91ee : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a920e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9234 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9250 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9270 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9290 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a92b6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a92d8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a92f6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9316 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9332 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9352 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9372 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9392 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a93b8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9408 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a90de : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a90fc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a911c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a913e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a915e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a917e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9014 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9026 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a903c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9054 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a906a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a907c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a909a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a90a6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a90bc : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9000 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000019492c : xor cl, 0xfb ; call rax
0x000000000009563b : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000c3a36 : xor cl, byte ptr [rax - 0x75] ; jl 0xc3a67 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000013173f : xor cl, byte ptr [rax - 0x77] ; jp 0x131751 ; ret
0x00000000001344af : xor cl, byte ptr [rax - 0x77] ; jp 0x1344c1 ; ret
0x00000000001344c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1344d9 ; ret
0x0000000000134cff : xor cl, byte ptr [rax - 0x77] ; jp 0x134d11 ; ret
0x0000000000134d17 : xor cl, byte ptr [rax - 0x77] ; jp 0x134d29 ; ret
0x0000000000134d47 : xor cl, byte ptr [rax - 0x77] ; jp 0x134d59 ; ret
0x0000000000082b95 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000e6b5d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000000000013014c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010d271 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000102b82 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010fe91 : xor cl, ch ; ret
0x00000000000a4b20 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a8901 : xor cl, dh ; jmp qword ptr [rcx]
0x0000000000197e71 : xor dh, bl ; jmp rsp
0x0000000000127a84 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x000000000012ec14 : xor dh, dh ; ret 0xc707
0x0000000000102172 : xor dl, bh ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000040540 : xor dl, byte ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000002d8ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000866f5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000abccb : xor dword ptr [rax + rax], ecx ; ret
0x0000000000088723 : xor dword ptr [rax - 0x76b7ffcd], ebp ; and al, 8 ; call qword ptr [rdx]
0x0000000000052bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000009e16e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000d0d0e : xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000019e0b5 : xor dword ptr [rax], eax ; add al, bh ; ret
0x000000000009c039 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x000000000019a475 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x000000000005946e : xor dword ptr [rip - 0x77cb800], eax ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000103023 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000004e618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000450e0 : xor eax, 0x1cb ; call rax
0x00000000000fb5e3 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001949cd : xor eax, 0x2820fffc ; cld ; jmp rax
0x000000000006f21b : xor eax, 0x30 ; call rax
0x0000000000063b68 : xor eax, 0x35f403 ; call rax
0x000000000005be5a : xor eax, 0x367111 ; call rax
0x000000000005b804 : xor eax, 0x367767 ; call rax
0x0000000000194fd5 : xor eax, 0x36a0fffc ; cld ; jmp qword ptr [rax]
0x000000000005004c : xor eax, 0x372f1f ; call rax
0x000000000004d3d0 : xor eax, 0x375b9b ; call rax
0x0000000000078181 : xor eax, 0x39480000 ; ret
0x00000000000419ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c41d : xor eax, 0x48b4800 ; ret 0x8548
0x00000000001bbb13 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000000e1007 : xor eax, 0x83fff4cc ; call qword ptr [rax]
0x000000000011ebc7 : xor eax, 0x8b002a8a ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000002479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00000000000582e5 : xor eax, 0xf6ffffee ; ret 0xf10
0x000000000007c74b : xor eax, 0xffffe1e0 ; call rax
0x000000000007c2fb : xor eax, 0xffffe630 ; call rax
0x000000000007bf0b : xor eax, 0xffffea20 ; call rax
0x000000000007aeab : xor eax, 0xfffffa80 ; call rax
0x000000000007ac3b : xor eax, 0xfffffcf0 ; call rax
0x000000000006f514 : xor eax, 0xfffffd37 ; call rax
0x000000000002084b : xor eax, dword ptr [0x30] ; call rax
0x0000000000035320 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004d396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x00000000000878d2 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000087b58 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000087a41 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008db8c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000087af4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008cc2a : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000085951 : xor eax, dword ptr [rax] ; jne 0x85967 ; jmp 0x85981
0x0000000000083563 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008866d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000889dd : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000084c64 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x84c77 ; ret
0x00000000001ae2fd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000c6d00 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000132c1c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bebd2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000121625 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011def8 : xor eax, eax ; add rsp, 0x28 ; ret
0x00000000001364e5 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143218 : xor eax, eax ; add rsp, 0x38 ; ret
0x0000000000142a7f : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bac5e : xor eax, eax ; add rsp, 8 ; ret
0x000000000002df30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000013a8a1 : xor eax, eax ; call r8
0x0000000000075297 : xor eax, eax ; call rbx
0x000000000013a8eb : xor eax, eax ; call rcx
0x000000000013b700 : xor eax, eax ; call rdx
0x000000000003a6c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6d8 ; pop rbx ; ret
0x00000000000d671c : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66bd ; pop rbx ; ret
0x0000000000109aeb : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d0af4 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000001018fa : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x101911 ; pop rbx ; ret
0x00000000000fc23e : xor eax, eax ; cmp rdi, rdx ; ja 0xfc278 ; ret
0x000000000013b1bc : xor eax, eax ; cmp rdx, rcx ; je 0x13b1d8 ; ret
0x0000000000113eb7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000ad422 : xor eax, eax ; jmp 0xad209
0x00000000000ad831 : xor eax, eax ; jmp 0xad669
0x000000000012d550 : xor eax, eax ; jmp rcx
0x0000000000114f85 : xor eax, eax ; leave ; ret
0x0000000000123548 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000012245d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fb770 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000003ac82 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000009e198 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000114de1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000012972a : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000139b98 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00000000000d45b6 : xor eax, eax ; mov rdx, r8 ; jmp 0xd45db
0x00000000001321d7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003b370 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000006e7e9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cc857 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012b372 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012cb5f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000022b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba9b8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a26d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ac54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033ee6 : xor eax, eax ; pop rbx ; ret
0x0000000000123236 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000001fb7b : xor eax, eax ; ret
0x000000000009ec5e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000077410 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077420 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000aa058 : xor eax, eax ; test dh, 0xf0 ; je 0xaa02b ; movzx eax, dl ; pop rbx ; ret
0x0000000000036268 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007a390 : xor eax, eax ; test rdx, rdx ; jne 0x7a3a7 ; ret
0x000000000003afbe : xor eax, ecx ; ret
0x000000000003a637 : xor eax, edx ; sub eax, edx ; ret
0x000000000003a64b : xor eax, edx ; sub rax, rdx ; ret
0x0000000000133239 : xor eax, esi ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001893fd : xor ebp, 0xf58ec0ff ; call rsi
0x000000000019fb11 : xor ebp, ebx ; jmp qword ptr [rsi]
0x0000000000187b95 : xor ebx, 0xf37c6dff ; jmp rdx
0x0000000000187b7d : xor ebx, 0xffffffff ; mov sil, bl ; jmp rdx
0x00000000000bc073 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008796a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c78ed : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000025041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000000f2699 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000962f5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000886bc : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002c4b2 : xor ecx, eax ; ret 0x4809
0x0000000000029a73 : xor ecx, ecx ; call r15
0x0000000000034a70 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000ac4c4 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000001284a4 : xor edi, dword ptr [0x30] ; call rax
0x00000000001942c5 : xor edi, ebx ; inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x000000000007d8d9 : xor edi, edi ; call qword ptr [r15]
0x0000000000081035 : xor edi, edi ; call qword ptr [rax]
0x00000000000c69e5 : xor edi, edi ; call rax
0x000000000007d8aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000001949c9 : xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x0000000000194a29 : xor edi, esp ; call qword ptr [rax]
0x0000000000194a09 : xor edi, esp ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x0000000000039fc7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000218e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bf281 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000504c3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x0000000000078189 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116d29 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000c790e : xor edx, edx ; jmp 0xc78d8
0x00000000000ac4c6 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009e22d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007ba09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007db6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008cc03 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000010bde7 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f5ef0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001029f1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000189c29 : xor esi, 0xf67ce2ff ; jmp rax
0x0000000000186e61 : xor esi, eax ; jmp qword ptr [rax - 0x1f000fcc]
0x00000000000e442e : xor esi, esi ; call 0x8e696
0x000000000004d39d : xor esi, esi ; call rax
0x00000000000f5ef2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000101c41 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000001029f3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000102a18 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000102a3d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000102a61 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000102a81 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000133530 : xor esi, esi ; mov rdi, rsp ; call 0x1f7e7
0x00000000000e802e : xor esi, esi ; ret
0x0000000000194a25 : xor esp, edi ; call qword ptr [rax]
0x0000000000065b89 : xor esp, esp ; jmp 0x63704
0x0000000000065b88 : xor r12d, r12d ; jmp 0x63705
0x0000000000075296 : xor r8d, r8d ; call rbx
0x000000000010fe90 : xor r9b, bpl ; ret
0x0000000000029a72 : xor r9d, r9d ; call r15
0x00000000000fb5e2 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002084a : xor rax, qword ptr [0x30] ; call rax
0x000000000003531f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020849 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003531e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008ad15 : xor rax, rax ; ret
0x000000000003a64a : xor rax, rdx ; sub rax, rdx ; ret
0x00000000001284a3 : xor rdi, qword ptr [0x30] ; call rax
0x00000000001284a2 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000039fc6 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000039fc5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 21465
